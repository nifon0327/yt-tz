/*
Navicat MySQL Data Transfer

Source Server         : ac测试
Source Server Version : 50636
Source Host           : 139.196.94.36:3306
Source Database       : ac_dev

Target Server Type    : MYSQL
Target Server Version : 50636
File Encoding         : 65001

Date: 2018-05-30 10:06:07
*/

SET FOREIGN_KEY_CHECKS=0;

-- ----------------------------
-- Table structure for acassistcal
-- ----------------------------
DROP TABLE IF EXISTS `acassistcal`;
CREATE TABLE `acassistcal` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accalcurrency
-- ----------------------------
DROP TABLE IF EXISTS `accalcurrency`;
CREATE TABLE `accalcurrency` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_cardtype
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_cardtype`;
CREATE TABLE `accessguard_cardtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(20) NOT NULL COMMENT '类型名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 进门卡类型';

-- ----------------------------
-- Table structure for accessguard_chktype
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_chktype`;
CREATE TABLE `accessguard_chktype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_door
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_door`;
CREATE TABLE `accessguard_door` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `DoorName` varchar(20) NOT NULL COMMENT '区域名称',
  `DoorAdd` varchar(20) NOT NULL COMMENT '区域地址',
  `IP` varchar(15) NOT NULL COMMENT 'iP',
  `OrderId` int(11) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_notes
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_notes`;
CREATE TABLE `accessguard_notes` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `DoorId` int(11) NOT NULL COMMENT '门编号',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号',
  `OpenTime` datetime NOT NULL COMMENT '打开时间',
  `Img` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 进门记录表';

-- ----------------------------
-- Table structure for accessguard_order
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_order`;
CREATE TABLE `accessguard_order` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '开关号',
  `OpenKeys` varchar(60) NOT NULL,
  `CloseKeys` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 记录表';

-- ----------------------------
-- Table structure for accessguard_powerfixed
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_powerfixed`;
CREATE TABLE `accessguard_powerfixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PowerType` int(11) NOT NULL,
  `DoorId` int(11) NOT NULL COMMENT '门id',
  `Parameters` mediumint(9) NOT NULL COMMENT '参数',
  `WeekDay` tinyint(4) NOT NULL COMMENT '工作日',
  `TimeS` time NOT NULL COMMENT '开始时间',
  `TimeE` time NOT NULL COMMENT '结束时间',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_powermyself
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_powermyself`;
CREATE TABLE `accessguard_powermyself` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `DoorId` int(11) NOT NULL COMMENT '门id',
  `WeekDay` tinyint(4) NOT NULL COMMENT '工作时间',
  `TimeS` time NOT NULL COMMENT '开始时间',
  `TimeE` time NOT NULL COMMENT '结束时间',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_powertype
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_powertype`;
CREATE TABLE `accessguard_powertype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(20) NOT NULL COMMENT '类型名',
  `Parameters` varchar(20) NOT NULL COMMENT '参数',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for accessguard_user
-- ----------------------------
DROP TABLE IF EXISTS `accessguard_user`;
CREATE TABLE `accessguard_user` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `chkType` int(11) NOT NULL,
  `PowerType` int(11) NOT NULL,
  `Password` varchar(32) NOT NULL COMMENT '密码',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acendtermsign
-- ----------------------------
DROP TABLE IF EXISTS `acendtermsign`;
CREATE TABLE `acendtermsign` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acfirsttype
-- ----------------------------
DROP TABLE IF EXISTS `acfirsttype`;
CREATE TABLE `acfirsttype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL COMMENT '费用名称首字母',
  `FirstId` varchar(12) NOT NULL COMMENT '费用编号',
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `ListName` varchar(200) DEFAULT NULL,
  `TypeId` tinyint(4) NOT NULL,
  `OISignId` tinyint(1) NOT NULL COMMENT '方向',
  `CalCurrencyId` tinyint(1) NOT NULL COMMENT '外币核算',
  `ExpenseSign` tinyint(1) NOT NULL DEFAULT '0' COMMENT '费用报销显示选项标识',
  `IntangibleSign` tinyint(1) NOT NULL DEFAULT '0' COMMENT '是否为无形资产',
  `EndTermSignId` tinyint(1) DEFAULT NULL COMMENT '期末调汇',
  `AssistCalId` varchar(30) DEFAULT NULL COMMENT '辅助核算',
  `emptyStr` varchar(60) DEFAULT NULL,
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) DEFAULT '0',
  `creator` mediumint(9) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` mediumint(9) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `FirstId` (`FirstId`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=296 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='会计一级分类';

-- ----------------------------
-- Table structure for acoisign
-- ----------------------------
DROP TABLE IF EXISTS `acoisign`;
CREATE TABLE `acoisign` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acrux_deploy
-- ----------------------------
DROP TABLE IF EXISTS `acrux_deploy`;
CREATE TABLE `acrux_deploy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Number` int(10) unsigned NOT NULL COMMENT '员工ID',
  `OldBranchId` int(10) unsigned NOT NULL COMMENT '原部门ID',
  `NewBranchId` int(10) unsigned NOT NULL COMMENT '新部门ID',
  `DeployTime` datetime DEFAULT NULL COMMENT '调出时间',
  `RedeployTime` datetime DEFAULT NULL COMMENT '调回时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='临时部门调动';

-- ----------------------------
-- Table structure for acrux_dormitory
-- ----------------------------
DROP TABLE IF EXISTS `acrux_dormitory`;
CREATE TABLE `acrux_dormitory` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(20) DEFAULT NULL COMMENT '宿舍房号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ModuleId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='宿舍';

-- ----------------------------
-- Table structure for acrux_dormitory_fee
-- ----------------------------
DROP TABLE IF EXISTS `acrux_dormitory_fee`;
CREATE TABLE `acrux_dormitory_fee` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `DormitoryId` int(10) unsigned NOT NULL COMMENT '宿舍编号',
  `Month` varchar(7) NOT NULL DEFAULT '' COMMENT '月份',
  `Fee` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '水电费',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='宿舍水电费表';

-- ----------------------------
-- Table structure for acrux_dormitory_live
-- ----------------------------
DROP TABLE IF EXISTS `acrux_dormitory_live`;
CREATE TABLE `acrux_dormitory_live` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `DormitoryId` int(10) unsigned NOT NULL COMMENT '宿舍编号',
  `Number` int(10) unsigned NOT NULL COMMENT '员工工号',
  `BasePay` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '房租基数',
  `InDate` date DEFAULT NULL COMMENT '搬入日',
  `OutDate` date DEFAULT NULL COMMENT '搬出日',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='宿舍住宿表';

-- ----------------------------
-- Table structure for acrux_menus
-- ----------------------------
DROP TABLE IF EXISTS `acrux_menus`;
CREATE TABLE `acrux_menus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL COMMENT '登陆标记,关联表：companys_group.cSign',
  `ModuleName` varchar(30) NOT NULL COMMENT '模块名称',
  `Parameter` varchar(100) DEFAULT '' COMMENT '参数',
  `KeyWebPage` varchar(100) DEFAULT '' COMMENT '主要页面',
  `TypeId` tinyint(4) DEFAULT NULL COMMENT '类型编号,关联表：funmoduletype.ID',
  `Icon` varchar(128) DEFAULT NULL COMMENT '主页图标',
  `ParentModule` mediumint(9) DEFAULT '0' COMMENT '父级模块',
  `OrderId` tinyint(4) DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `KeyWebPage` (`KeyWebPage`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acrux_penalty
-- ----------------------------
DROP TABLE IF EXISTS `acrux_penalty`;
CREATE TABLE `acrux_penalty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL COMMENT '登陆标记,关联表：companys_group.cSign',
  `Type` tinyint(3) NOT NULL COMMENT '类型',
  `Name` varchar(30) NOT NULL COMMENT '分类名称',
  `Rules` varchar(1024) DEFAULT '' COMMENT '奖惩规则',
  `Scores` varchar(1024) DEFAULT '' COMMENT '奖惩分数',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=67 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acrux_phone
-- ----------------------------
DROP TABLE IF EXISTS `acrux_phone`;
CREATE TABLE `acrux_phone` (
  `Id` tinyint(10) NOT NULL,
  `ModuleName` varchar(50) NOT NULL DEFAULT '0',
  `ParentModule` varchar(20) NOT NULL DEFAULT '0',
  `Extension` int(20) DEFAULT NULL,
  `Cornet` int(20) DEFAULT NULL,
  `PhoneNumber` varchar(26) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acrux_role
-- ----------------------------
DROP TABLE IF EXISTS `acrux_role`;
CREATE TABLE `acrux_role` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(20) DEFAULT NULL COMMENT '角色名称',
  `Description` varchar(1024) DEFAULT NULL COMMENT '角色描述',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='角色管理';

-- ----------------------------
-- Table structure for acrux_salary
-- ----------------------------
DROP TABLE IF EXISTS `acrux_salary`;
CREATE TABLE `acrux_salary` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` int(4) NOT NULL DEFAULT '7',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `Name` varchar(20) NOT NULL COMMENT '姓名',
  `Bank` varchar(20) NOT NULL COMMENT '卡号',
  `Month` varchar(7) NOT NULL COMMENT '月份(YYYY-mm)',
  `AttendanceDay` tinyint(4) NOT NULL COMMENT '出勤天数',
  `BaseSalary` decimal(10,3) DEFAULT '0.000' COMMENT '基准工资',
  `BasePay` decimal(10,3) DEFAULT '0.000' COMMENT '基本工资',
  `KPISalary` decimal(10,3) DEFAULT '0.000' COMMENT '绩效基准',
  `Score` decimal(10,3) DEFAULT '0.000' COMMENT '评分',
  `KPIPay` decimal(10,3) DEFAULT '0.000' COMMENT '绩效工资',
  `JobSalary` decimal(10,3) DEFAULT '0.000' COMMENT '岗位基准',
  `JobPay` decimal(10,3) DEFAULT '0.000' COMMENT '岗位工资',
  `Commision` decimal(10,3) DEFAULT '0.000' COMMENT '提成',
  `OtherSubsidy` decimal(10,3) DEFAULT '0.000' COMMENT '其它补助',
  `ShouldPay` decimal(10,3) DEFAULT '0.000' COMMENT '应发工资',
  `HouseDebit` decimal(10,3) DEFAULT '0.000' COMMENT '房租扣款',
  `WaterElectricDebit` decimal(10,3) DEFAULT '0.000' COMMENT '水电扣款',
  `SocialSecurity` decimal(10,3) DEFAULT '0.000' COMMENT '社保',
  `AccumulationFund` decimal(10,3) DEFAULT '0.000' COMMENT '公积金',
  `ShouldTaxPay` decimal(10,3) DEFAULT '0.000' COMMENT '应税工资',
  `TaxDebit` decimal(10,3) DEFAULT '0.000' COMMENT '代扣个税',
  `CloseDebit` decimal(10,3) DEFAULT '0.000' COMMENT '工衣扣款',
  `OtherDebit` decimal(10,3) DEFAULT '0.000' COMMENT '其它扣款',
  `RealPay` decimal(10,3) DEFAULT '0.000' COMMENT '实发工资',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='薪资明细表 ';

-- ----------------------------
-- Table structure for acrux_staff_penalty
-- ----------------------------
DROP TABLE IF EXISTS `acrux_staff_penalty`;
CREATE TABLE `acrux_staff_penalty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '工号',
  `PenaltyId` int(11) NOT NULL COMMENT '奖惩',
  `Remark` varchar(1024) DEFAULT NULL COMMENT '备注',
  `CreateDate` date DEFAULT NULL COMMENT '创建日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for acrux_temp_schedule
-- ----------------------------
DROP TABLE IF EXISTS `acrux_temp_schedule`;
CREATE TABLE `acrux_temp_schedule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Number` int(10) unsigned NOT NULL COMMENT '员工工号',
  `StartTime` date NOT NULL COMMENT '开始时间',
  `EndTime` date NOT NULL COMMENT '结束时间',
  `GoWork` int(11) DEFAULT NULL COMMENT '上班时间',
  `Advance` int(11) DEFAULT NULL COMMENT '提前打卡（分钟）',
  `OffWork` int(11) DEFAULT NULL COMMENT '下班时间',
  `Delay` int(11) DEFAULT NULL COMMENT '延迟打卡（分钟）',
  `AutoCheck` tinyint(4) DEFAULT NULL COMMENT '是否自动打卡',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='临时排班表';

-- ----------------------------
-- Table structure for acrux_uncheckio
-- ----------------------------
DROP TABLE IF EXISTS `acrux_uncheckio`;
CREATE TABLE `acrux_uncheckio` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL,
  `CheckTime` datetime DEFAULT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for actype
-- ----------------------------
DROP TABLE IF EXISTS `actype`;
CREATE TABLE `actype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL COMMENT '费用名称首字母',
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Estate` tinyint(4) NOT NULL COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_access_list
-- ----------------------------
DROP TABLE IF EXISTS `ac_access_list`;
CREATE TABLE `ac_access_list` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `roles_name` varchar(32) NOT NULL,
  `resources_name` varchar(32) NOT NULL,
  `access_name` varchar(32) NOT NULL,
  `allowed` int(3) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  UNIQUE KEY `id` (`id`) USING BTREE,
  UNIQUE KEY `roles_name` (`roles_name`,`resources_name`,`access_name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_menus
-- ----------------------------
DROP TABLE IF EXISTS `ac_menus`;
CREATE TABLE `ac_menus` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `parent_id` bigint(20) unsigned NOT NULL DEFAULT '0',
  `typeid` int(10) unsigned NOT NULL DEFAULT '0',
  `csign` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `ModuleId` int(6) NOT NULL,
  `oldModuleId` varchar(50) NOT NULL DEFAULT '',
  `oldItemId` varchar(50) NOT NULL DEFAULT '',
  `name` varchar(125) NOT NULL,
  `action` varchar(80) NOT NULL,
  `callback` varchar(50) NOT NULL DEFAULT '',
  `leftbadge` varchar(50) NOT NULL DEFAULT '',
  `rightbadge` varchar(50) NOT NULL DEFAULT '',
  `icon_type` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `icon` varchar(50) NOT NULL DEFAULT '',
  `order` tinyint(3) unsigned NOT NULL,
  `row` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `col` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `abs` tinyint(1) NOT NULL DEFAULT '0',
  `padrow` tinyint(3) NOT NULL DEFAULT '0',
  `padcol` tinyint(3) NOT NULL DEFAULT '0',
  `padabs` tinyint(3) NOT NULL DEFAULT '0',
  `level` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `visible` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Visibility flag, 0 for invisible, 1 for visible.',
  `openurl` varchar(100) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `build` int(3) NOT NULL DEFAULT '0' COMMENT '是否有完成了功能',
  `imgid` varchar(20) DEFAULT NULL,
  UNIQUE KEY `id` (`id`) USING BTREE,
  KEY `csign` (`csign`) USING BTREE,
  KEY `typeid` (`typeid`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=151 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_menustype
-- ----------------------------
DROP TABLE IF EXISTS `ac_menustype`;
CREATE TABLE `ac_menustype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `cSign` tinyint(3) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL,
  `Order` tinyint(3) DEFAULT NULL,
  `bgImg` varchar(30) DEFAULT NULL,
  `Date` date DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `TopSign` tinyint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='menus types';

-- ----------------------------
-- Table structure for ac_menus_show
-- ----------------------------
DROP TABLE IF EXISTS `ac_menus_show`;
CREATE TABLE `ac_menus_show` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ModuleId` int(11) NOT NULL,
  `FilePath` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='app展示';

-- ----------------------------
-- Table structure for ac_menutypes
-- ----------------------------
DROP TABLE IF EXISTS `ac_menutypes`;
CREATE TABLE `ac_menutypes` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '��������ID',
  `cSign` tinyint(3) NOT NULL,
  `Name` varchar(30) NOT NULL COMMENT '������������',
  `Color` varchar(7) NOT NULL COMMENT '����������ɫ',
  `Order` tinyint(3) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '��¼��������',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '��¼������',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='ģ������';

-- ----------------------------
-- Table structure for ac_paymode
-- ----------------------------
DROP TABLE IF EXISTS `ac_paymode`;
CREATE TABLE `ac_paymode` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT 'state field of the record',
  `Locks` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Name` (`Name`,`Estate`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='Paymode, 付款方式';

-- ----------------------------
-- Table structure for ac_payoffmode
-- ----------------------------
DROP TABLE IF EXISTS `ac_payoffmode`;
CREATE TABLE `ac_payoffmode` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Label` varchar(30) NOT NULL,
  `Value` smallint(5) unsigned NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Label` (`Label`,`Value`,`Estate`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=101 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='付款方式';

-- ----------------------------
-- Table structure for ac_paytype
-- ----------------------------
DROP TABLE IF EXISTS `ac_paytype`;
CREATE TABLE `ac_paytype` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT 'state field of the record',
  `Creator` int(10) NOT NULL,
  `Created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `Modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Name` (`Name`,`Estate`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=42 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='收款性质';

-- ----------------------------
-- Table structure for ac_resources
-- ----------------------------
DROP TABLE IF EXISTS `ac_resources`;
CREATE TABLE `ac_resources` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(32) NOT NULL,
  `description` text,
  UNIQUE KEY `id` (`id`) USING BTREE,
  UNIQUE KEY `name` (`name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_resources_accesses
-- ----------------------------
DROP TABLE IF EXISTS `ac_resources_accesses`;
CREATE TABLE `ac_resources_accesses` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `resources_name` varchar(32) NOT NULL,
  `access_name` varchar(32) NOT NULL,
  UNIQUE KEY `id` (`id`) USING BTREE,
  UNIQUE KEY `resources_name` (`resources_name`,`access_name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_rolemenus
-- ----------------------------
DROP TABLE IF EXISTS `ac_rolemenus`;
CREATE TABLE `ac_rolemenus` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `role_id` bigint(20) unsigned NOT NULL COMMENT 'FK refers to ac_roles',
  `menu_id` bigint(20) unsigned NOT NULL COMMENT 'FK refers to menu table',
  `action` tinyint(3) NOT NULL,
  UNIQUE KEY `id` (`id`) USING BTREE,
  KEY `role_id` (`role_id`) USING BTREE,
  KEY `menu_id` (`menu_id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2010 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='join table for ac_menus and ac_roles';

-- ----------------------------
-- Table structure for ac_roles
-- ----------------------------
DROP TABLE IF EXISTS `ac_roles`;
CREATE TABLE `ac_roles` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(32) NOT NULL,
  `description` text,
  `action` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  UNIQUE KEY `id` (`id`) USING BTREE,
  UNIQUE KEY `name` (`name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_statisticsdata
-- ----------------------------
DROP TABLE IF EXISTS `ac_statisticsdata`;
CREATE TABLE `ac_statisticsdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '统计月份',
  `FirstId` varchar(30) NOT NULL,
  `TotalValue` decimal(12,0) NOT NULL DEFAULT '0',
  `OtherValue` varchar(200) DEFAULT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` datetime NOT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) NOT NULL DEFAULT '0' COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `FirstIdValue` (`Month`,`FirstId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_statisticsmenus
-- ----------------------------
DROP TABLE IF EXISTS `ac_statisticsmenus`;
CREATE TABLE `ac_statisticsmenus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '项目名称',
  `enName` varchar(20) NOT NULL,
  `IncomeSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '收支标识: 0、统计显示  1、收入   2、支出',
  `CallMethod` varchar(50) DEFAULT NULL,
  `FirstIds` text,
  `TotalValue` decimal(12,0) NOT NULL DEFAULT '0',
  `TotalDate` date DEFAULT NULL,
  `SortId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '排序',
  `Estate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Remark` text COMMENT '详细内容说明',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_statisticstables
-- ----------------------------
DROP TABLE IF EXISTS `ac_statisticstables`;
CREATE TABLE `ac_statisticstables` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TableName` varchar(50) NOT NULL,
  `DbName` varchar(50) NOT NULL COMMENT '数据表名称',
  `FirstId` varchar(20) NOT NULL COMMENT '会计科目分类',
  `NoPaySql` text COMMENT '费用统计',
  `PayedSql` text,
  `BankSql` text COMMENT '按支持银行统计',
  `TotalSql` text,
  `DetailSql` text,
  `Remark` text COMMENT '详细内容说明',
  `Estate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '记录执行状态',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL DEFAULT '2016-06-20' COMMENT '记录生成日期',
  `Operator` mediumint(9) NOT NULL DEFAULT '10868' COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`TableName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ac_suppliertype
-- ----------------------------
DROP TABLE IF EXISTS `ac_suppliertype`;
CREATE TABLE `ac_suppliertype` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Name` (`Name`,`Estate`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=101 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='供应商类型';

-- ----------------------------
-- Table structure for ac_systemparameter
-- ----------------------------
DROP TABLE IF EXISTS `ac_systemparameter`;
CREATE TABLE `ac_systemparameter` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Controller` varchar(20) NOT NULL,
  `Action` varchar(30) NOT NULL,
  `Type` varchar(30) DEFAULT NULL,
  `model` varchar(30) NOT NULL DEFAULT '',
  `Field` varchar(30) DEFAULT NULL,
  `MatchingValues` varchar(30) DEFAULT NULL,
  `MatchingOperator` enum('=','<>','LIKE','>','<','>=','<=','IN','BETWEEN') DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT 'state field of the record',
  `Locks` tinyint(1) NOT NULL DEFAULT '1',
  `Creator` int(10) NOT NULL,
  `Created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `Modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Controller` (`Controller`,`Action`,`Type`,`Field`,`MatchingValues`,`MatchingOperator`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='系統功能參數';

-- ----------------------------
-- Table structure for ac_tradetype
-- ----------------------------
DROP TABLE IF EXISTS `ac_tradetype`;
CREATE TABLE `ac_tradetype` (
  `Id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT 'state field of the record',
  `Locks` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '1' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` datetime NOT NULL,
  `modifier` int(10) unsigned NOT NULL,
  `modified` datetime NOT NULL,
  UNIQUE KEY `Id` (`Id`) USING BTREE,
  KEY `Name` (`Name`,`Estate`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='交易对象类型';

-- ----------------------------
-- Table structure for ac_usermenus
-- ----------------------------
DROP TABLE IF EXISTS `ac_usermenus`;
CREATE TABLE `ac_usermenus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(3) unsigned DEFAULT '7',
  `UserId` int(11) NOT NULL COMMENT '�û�ID',
  `MenuId` mediumint(9) NOT NULL COMMENT 'ģ��ID,�������ac_menus',
  `Action` tinyint(4) NOT NULL COMMENT '����Ȩ��',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '��¼��������',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '��¼������',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `UserId` (`UserId`) USING BTREE,
  KEY `MenuId` (`MenuId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1229 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='? ϵͳȨ�ޱ�';

-- ----------------------------
-- Table structure for ac_users_roles
-- ----------------------------
DROP TABLE IF EXISTS `ac_users_roles`;
CREATE TABLE `ac_users_roles` (
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT,
  `csign` tinyint(3) unsigned NOT NULL COMMENT 'flag to denote the orgnanization of the user',
  `user_id` int(10) unsigned NOT NULL COMMENT 'FK refers to usertable',
  `role_id` bigint(20) unsigned NOT NULL COMMENT 'FK refers to ac_roles',
  UNIQUE KEY `id` (`id`) USING BTREE,
  KEY `role_id` (`role_id`,`csign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='join table for usertable and ac_roles';

-- ----------------------------
-- Table structure for ac_user_logs
-- ----------------------------
DROP TABLE IF EXISTS `ac_user_logs`;
CREATE TABLE `ac_user_logs` (
  `user_id` int(10) unsigned NOT NULL,
  `number` int(10) unsigned NOT NULL,
  `csign` tinyint(20) unsigned NOT NULL COMMENT 'flag to denote the orgnanization of the user',
  `op` enum('in','out') NOT NULL DEFAULT 'in' COMMENT 'denote the login/logout operation',
  `from_ip` char(20) NOT NULL COMMENT 'ip where user from',
  `target` varchar(255) NOT NULL,
  `created` datetime NOT NULL COMMENT 'where this happen',
  KEY `user_id` (`user_id`,`csign`,`op`,`from_ip`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='log table for user''s login/logout';

-- ----------------------------
-- Table structure for adminitype
-- ----------------------------
DROP TABLE IF EXISTS `adminitype`;
CREATE TABLE `adminitype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL COMMENT '费用名称首字母',
  `TypeId` mediumint(9) NOT NULL COMMENT '费用编号',
  `FirstId` varchar(20) NOT NULL,
  `AuditType` int(11) NOT NULL DEFAULT '1',
  `Name` varchar(20) NOT NULL COMMENT '费用名称',
  `Amount` decimal(10,3) NOT NULL COMMENT '总额',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  UNIQUE KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=79 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='行政费用';

-- ----------------------------
-- Table structure for admini_audittype
-- ----------------------------
DROP TABLE IF EXISTS `admini_audittype`;
CREATE TABLE `admini_audittype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '审核分类名称',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 行政审核分类';

-- ----------------------------
-- Table structure for agv_data
-- ----------------------------
DROP TABLE IF EXISTS `agv_data`;
CREATE TABLE `agv_data` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for agv_position
-- ----------------------------
DROP TABLE IF EXISTS `agv_position`;
CREATE TABLE `agv_position` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `pointName` int(10) DEFAULT NULL,
  `Name` varchar(10) DEFAULT NULL,
  `Floor` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for app_instruction
-- ----------------------------
DROP TABLE IF EXISTS `app_instruction`;
CREATE TABLE `app_instruction` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `pId` int(11) DEFAULT NULL COMMENT '父旧名称',
  `NameOld` varchar(20) NOT NULL DEFAULT '' COMMENT '旧名称',
  `NameNew` varchar(20) DEFAULT NULL COMMENT '新名称',
  `IconOld` varchar(20) DEFAULT NULL COMMENT '旧图标',
  `IconNew` varchar(20) DEFAULT NULL COMMENT '新图标',
  `InterfaceOld` varchar(20) DEFAULT NULL COMMENT '旧界面',
  `InterfaceNew` varchar(20) DEFAULT NULL COMMENT '新界面',
  `Purpose` varchar(20) DEFAULT NULL COMMENT '用途',
  `BranchMain` varchar(20) DEFAULT NULL COMMENT '主要使用部门',
  `Remarks` varchar(20) DEFAULT NULL COMMENT '备注',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`NameOld`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 部门信息表';

-- ----------------------------
-- Table structure for app_readrecord
-- ----------------------------
DROP TABLE IF EXISTS `app_readrecord`;
CREATE TABLE `app_readrecord` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工编号',
  `Item` varchar(30) NOT NULL,
  `ReadTime` datetime NOT NULL COMMENT '读取时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' app 登陆记录';

-- ----------------------------
-- Table structure for app_sheet
-- ----------------------------
DROP TABLE IF EXISTS `app_sheet`;
CREATE TABLE `app_sheet` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `name` varchar(100) NOT NULL COMMENT '系统名称',
  `appname` varchar(50) NOT NULL COMMENT 'app名称',
  `version` varchar(10) NOT NULL COMMENT '版本',
  `link` varchar(200) NOT NULL COMMENT '连接',
  `provision` varchar(100) NOT NULL COMMENT '有无备用',
  `icon` varchar(100) NOT NULL COMMENT '图片连接',
  `dscribe` varchar(200) NOT NULL COMMENT '描述',
  `updateItem` text COMMENT '更新需求',
  `cer` varchar(200) DEFAULT NULL COMMENT '推送钥匙',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for app_userlog
-- ----------------------------
DROP TABLE IF EXISTS `app_userlog`;
CREATE TABLE `app_userlog` (
  `Id` bigint(12) unsigned NOT NULL AUTO_INCREMENT,
  `BundleId` varchar(120) DEFAULT '',
  `Version` varchar(10) DEFAULT '',
  `Device` varchar(50) DEFAULT NULL,
  `IP` varchar(15) DEFAULT '',
  `Segment` varchar(50) DEFAULT '',
  `Uri` varchar(100) DEFAULT '' COMMENT '访问路径',
  `NetType` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `creator` int(10) unsigned DEFAULT '0',
  `created` datetime DEFAULT NULL,
  `Parameter` text,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `BundleId` (`BundleId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='APP用户自定义设置表 ';

-- ----------------------------
-- Table structure for app_userset
-- ----------------------------
DROP TABLE IF EXISTS `app_userset`;
CREATE TABLE `app_userset` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `TypeId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '设置类型:1、生产单位选择设定，2、仓库位置选择设定',
  `Parameters` varchar(100) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`,`TypeId`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='APP用户自定义设置表 ';

-- ----------------------------
-- Table structure for app_uuid
-- ----------------------------
DROP TABLE IF EXISTS `app_uuid`;
CREATE TABLE `app_uuid` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `UserName` varchar(30) NOT NULL,
  `BundleId` varchar(30) NOT NULL DEFAULT '0' COMMENT '设置类型:1、生产单位选择设定，2、仓库位置选择设定',
  `Device` varchar(30) NOT NULL,
  `UUID` varchar(50) NOT NULL,
  `LastTime` datetime DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `UUID` (`UUID`) USING BTREE,
  KEY `BundleId` (`BundleId`) USING BTREE,
  KEY `UserName` (`UserName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='APP用户自定义设置表 ';

-- ----------------------------
-- Table structure for aqsc01
-- ----------------------------
DROP TABLE IF EXISTS `aqsc01`;
CREATE TABLE `aqsc01` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Grade` tinyint(4) NOT NULL COMMENT '级别',
  `PreItem` int(11) NOT NULL,
  `Name` varchar(50) NOT NULL COMMENT '名称',
  `Sort` smallint(6) NOT NULL COMMENT '分类',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全管理制度汇编';

-- ----------------------------
-- Table structure for aqsc02
-- ----------------------------
DROP TABLE IF EXISTS `aqsc02`;
CREATE TABLE `aqsc02` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Caption` varchar(60) NOT NULL COMMENT '主题名称',
  `Attached` varchar(20) NOT NULL COMMENT '关联文档（pdf）',
  `TypeId` int(11) NOT NULL COMMENT '类型',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全管理制度文档';

-- ----------------------------
-- Table structure for aqsc03
-- ----------------------------
DROP TABLE IF EXISTS `aqsc03`;
CREATE TABLE `aqsc03` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL,
  `Caption` varchar(30) NOT NULL,
  `Attached` tinyint(4) NOT NULL,
  `Ver` varchar(10) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='安全操作说明书';

-- ----------------------------
-- Table structure for aqsc03_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc03_type`;
CREATE TABLE `aqsc03_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for aqsc04
-- ----------------------------
DROP TABLE IF EXISTS `aqsc04`;
CREATE TABLE `aqsc04` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL COMMENT '类型编号,关联表：aqsc04_type.ID',
  `Caption` varchar(30) NOT NULL COMMENT '教程名称',
  `Attached` varchar(20) NOT NULL COMMENT '关联文件（ppt）',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全生产培训教程';

-- ----------------------------
-- Table structure for aqsc04_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc04_type`;
CREATE TABLE `aqsc04_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '培训名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训类型表';

-- ----------------------------
-- Table structure for aqsc05
-- ----------------------------
DROP TABLE IF EXISTS `aqsc05`;
CREATE TABLE `aqsc05` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL COMMENT '测试题目类型,关联表：aqsc05_type.ID',
  `TestQuestions` text NOT NULL COMMENT '测试题目',
  `Answer` varchar(10) NOT NULL COMMENT '答案',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全生产考核试题';

-- ----------------------------
-- Table structure for aqsc05_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc05_type`;
CREATE TABLE `aqsc05_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '测试题目类型',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for aqsc06
-- ----------------------------
DROP TABLE IF EXISTS `aqsc06`;
CREATE TABLE `aqsc06` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL COMMENT '考试题型',
  `Caption` varchar(30) NOT NULL COMMENT '试题名称',
  `Attached` varchar(20) NOT NULL COMMENT '关联文档（PDF）',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  安全生产培训计划';

-- ----------------------------
-- Table structure for aqsc06_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc06_type`;
CREATE TABLE `aqsc06_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '考核名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='   安全生产培训计划分类表';

-- ----------------------------
-- Table structure for aqsc07
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07`;
CREATE TABLE `aqsc07` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `DefaultDate` date NOT NULL COMMENT '默认时间',
  `ItemName` varchar(30) NOT NULL COMMENT '主题名称',
  `ItemTime` float NOT NULL COMMENT '次数',
  `Tutorial` int(11) NOT NULL,
  `Lecturer` varchar(10) NOT NULL COMMENT '讲师',
  `Img` tinyint(4) NOT NULL DEFAULT '0' COMMENT '关联图片',
  `Movie` tinyint(4) NOT NULL DEFAULT '0' COMMENT '关联视频',
  `List` tinyint(4) NOT NULL DEFAULT '0' COMMENT '清单',
  `Reviewer` varchar(10) NOT NULL COMMENT '审批人',
  `TeachId` tinyint(4) NOT NULL COMMENT '培训编号',
  `ExamId` tinyint(4) NOT NULL COMMENT '考试编号',
  `OUId` tinyint(4) NOT NULL,
  `ObjectId` tinyint(4) NOT NULL COMMENT '关联人员类型',
  `TypeId` tinyint(4) NOT NULL COMMENT '关联演讲内容',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 员工安全生产培训记录';

-- ----------------------------
-- Table structure for aqsc07_imgs
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_imgs`;
CREATE TABLE `aqsc07_imgs` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '主题内容编号',
  `Attached` varchar(20) NOT NULL COMMENT '关联图片',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训相关图片表';

-- ----------------------------
-- Table structure for aqsc07_movies
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_movies`;
CREATE TABLE `aqsc07_movies` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '主题内容编号',
  `Attached` varchar(20) NOT NULL COMMENT '关联文件',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训视频表';

-- ----------------------------
-- Table structure for aqsc07_object
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_object`;
CREATE TABLE `aqsc07_object` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '对面名',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 培训对象表';

-- ----------------------------
-- Table structure for aqsc07_ou
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_ou`;
CREATE TABLE `aqsc07_ou` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训区域表';

-- ----------------------------
-- Table structure for aqsc07_teach
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_teach`;
CREATE TABLE `aqsc07_teach` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '培训方式名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训方式表';

-- ----------------------------
-- Table structure for aqsc07_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc07_type`;
CREATE TABLE `aqsc07_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '培训名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 培训内容项目表';

-- ----------------------------
-- Table structure for aqsc08
-- ----------------------------
DROP TABLE IF EXISTS `aqsc08`;
CREATE TABLE `aqsc08` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '关联培训类型',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `Exam` varchar(2) NOT NULL COMMENT '成绩结果',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 培训结果成绩表';

-- ----------------------------
-- Table structure for aqsc09
-- ----------------------------
DROP TABLE IF EXISTS `aqsc09`;
CREATE TABLE `aqsc09` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ExamDate` date NOT NULL COMMENT '测试时间',
  `TypeId` tinyint(4) NOT NULL COMMENT '测试类型',
  `ExamContent` varchar(30) NOT NULL,
  `Attached` varchar(20) NOT NULL COMMENT '关联文档',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `Results` float NOT NULL COMMENT '成绩结果',
  `Checker` varchar(8) NOT NULL COMMENT '检查人',
  `Opinion` text NOT NULL COMMENT '考核方式',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ExamDate` (`ExamDate`,`ExamContent`,`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全生产贡责人培训记录';

-- ----------------------------
-- Table structure for aqsc09_sheet
-- ----------------------------
DROP TABLE IF EXISTS `aqsc09_sheet`;
CREATE TABLE `aqsc09_sheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ExamId` int(11) NOT NULL COMMENT '关联审核内容',
  `Aqsc05Id` int(11) NOT NULL COMMENT '关联id',
  `TypeId` int(11) NOT NULL COMMENT '试题类型',
  `theAnswer` varchar(10) NOT NULL COMMENT '答案',
  `DefaultAnswer` varchar(10) NOT NULL COMMENT '正确答案',
  `Grade` float NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  安全生产贡责人培训明细记录';

-- ----------------------------
-- Table structure for aqsc10
-- ----------------------------
DROP TABLE IF EXISTS `aqsc10`;
CREATE TABLE `aqsc10` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TrainDate` date NOT NULL,
  `Address` varchar(20) NOT NULL,
  `TrainContent` varchar(30) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `Job` varchar(20) NOT NULL,
  `Attached` varchar(22) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='??????? 没有数据';

-- ----------------------------
-- Table structure for aqsc11
-- ----------------------------
DROP TABLE IF EXISTS `aqsc11`;
CREATE TABLE `aqsc11` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL,
  `Caption` varchar(30) NOT NULL,
  `Attached` varchar(22) NOT NULL,
  `EndDate` date NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='??????? 没有数据';

-- ----------------------------
-- Table structure for aqsc11_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc11_type`;
CREATE TABLE `aqsc11_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ??????? 没有数据';

-- ----------------------------
-- Table structure for aqsc12
-- ----------------------------
DROP TABLE IF EXISTS `aqsc12`;
CREATE TABLE `aqsc12` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL,
  `Content` varchar(30) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `Checker` mediumint(9) NOT NULL,
  `Attached` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for aqsc13
-- ----------------------------
DROP TABLE IF EXISTS `aqsc13`;
CREATE TABLE `aqsc13` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Caption` varchar(60) NOT NULL COMMENT '项目内容',
  `Attached` varchar(22) NOT NULL COMMENT '关联文档（PDF）',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 年度计划表';

-- ----------------------------
-- Table structure for aqsc14
-- ----------------------------
DROP TABLE IF EXISTS `aqsc14`;
CREATE TABLE `aqsc14` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Caption` varchar(30) NOT NULL COMMENT '测试内容',
  `Model` varchar(20) NOT NULL COMMENT '时间',
  `Attached` varchar(22) NOT NULL COMMENT '关联文档',
  `Unit` varchar(6) NOT NULL COMMENT '计量单位',
  `Qty` smallint(6) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Amount` decimal(10,3) NOT NULL COMMENT '总额',
  `Handler` varchar(8) NOT NULL COMMENT '测试人',
  `Checker` varchar(8) NOT NULL COMMENT '检查人',
  `UseDate` date NOT NULL COMMENT '使用时间',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 安全测试记录表';

-- ----------------------------
-- Table structure for aqsc15
-- ----------------------------
DROP TABLE IF EXISTS `aqsc15`;
CREATE TABLE `aqsc15` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Caption` varchar(30) NOT NULL DEFAULT '',
  `Attached` varchar(22) NOT NULL DEFAULT '',
  `Amount` decimal(10,3) NOT NULL,
  `Handler` varchar(8) NOT NULL,
  `Checker` varchar(8) NOT NULL,
  `Remark` text NOT NULL,
  `UseDate` date NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ？？？？';

-- ----------------------------
-- Table structure for aqsc16
-- ----------------------------
DROP TABLE IF EXISTS `aqsc16`;
CREATE TABLE `aqsc16` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL COMMENT '预案类型',
  `Caption` varchar(30) NOT NULL COMMENT '预案内容',
  `Attached` varchar(22) NOT NULL COMMENT '关联文档',
  `Checker` varchar(8) NOT NULL COMMENT '检查人',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 应急预案';

-- ----------------------------
-- Table structure for aqsc16_type
-- ----------------------------
DROP TABLE IF EXISTS `aqsc16_type`;
CREATE TABLE `aqsc16_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 预案类型表';

-- ----------------------------
-- Table structure for aqsc17
-- ----------------------------
DROP TABLE IF EXISTS `aqsc17`;
CREATE TABLE `aqsc17` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL,
  `Caption` varchar(30) NOT NULL DEFAULT '',
  `Attached` varchar(22) NOT NULL DEFAULT '',
  `Checker` varchar(8) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ？？？？';

-- ----------------------------
-- Table structure for attendanceipadsheet
-- ----------------------------
DROP TABLE IF EXISTS `attendanceipadsheet`;
CREATE TABLE `attendanceipadsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Name` varchar(10) NOT NULL COMMENT '楼层名称',
  `Floor` varchar(10) NOT NULL COMMENT '具体楼层',
  `cSign` int(1) NOT NULL COMMENT '标记',
  `Identifier` varchar(50) NOT NULL COMMENT '50',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  UNIQUE KEY `Identifier` (`Identifier`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ';

-- ----------------------------
-- Table structure for attendance_confirm_list
-- ----------------------------
DROP TABLE IF EXISTS `attendance_confirm_list`;
CREATE TABLE `attendance_confirm_list` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Month` varchar(8) NOT NULL COMMENT '考勤确认的月份',
  `FileName` varchar(30) DEFAULT NULL COMMENT '生成的pdf文件名',
  `CSign` int(1) NOT NULL COMMENT '区分公司的标志',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 考勤确认主表';

-- ----------------------------
-- Table structure for attendance_confirm_sign
-- ----------------------------
DROP TABLE IF EXISTS `attendance_confirm_sign`;
CREATE TABLE `attendance_confirm_sign` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '工号',
  `SignMonth` varchar(8) NOT NULL COMMENT '签名月份',
  `Sign` text NOT NULL COMMENT '签名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`,`SignMonth`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 考勤确认签名表';

-- ----------------------------
-- Table structure for attendance_floor
-- ----------------------------
DROP TABLE IF EXISTS `attendance_floor`;
CREATE TABLE `attendance_floor` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Floor` varchar(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for audit_records
-- ----------------------------
DROP TABLE IF EXISTS `audit_records`;
CREATE TABLE `audit_records` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `RId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件或产品ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '1.产品标准图',
  `TypeName` varchar(30) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for base_mposition
-- ----------------------------
DROP TABLE IF EXISTS `base_mposition`;
CREATE TABLE `base_mposition` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(12) NOT NULL COMMENT '存储位置',
  `WarehouseId` int(10) NOT NULL DEFAULT '0',
  `Number` mediumint(9) NOT NULL COMMENT '负责人,关联表：staffmain.Number',
  `Remark` text NOT NULL COMMENT '楼层',
  `CheckSign` tinyint(4) DEFAULT '99',
  `BlWorkShopId` varchar(50) DEFAULT NULL COMMENT '备料车间Id',
  `Address` varchar(100) DEFAULT '',
  `SortId` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `WarehouseId` (`WarehouseId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓库位置表';

-- ----------------------------
-- Table structure for bloodgroup_type
-- ----------------------------
DROP TABLE IF EXISTS `bloodgroup_type`;
CREATE TABLE `bloodgroup_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL COMMENT '血型名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='血型类型表';

-- ----------------------------
-- Table structure for bom_info
-- ----------------------------
DROP TABLE IF EXISTS `bom_info`;
CREATE TABLE `bom_info` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.id',
  `CmptTypeId` mediumint(9) DEFAULT NULL,
  `CmptType` varchar(30) DEFAULT NULL COMMENT '构件类型',
  `StuffTypeId` mediumint(9) DEFAULT NULL COMMENT '配件分类Id',
  `StuffType` varchar(30) DEFAULT NULL COMMENT '配件分类',
  `MaterNo` varchar(20) DEFAULT '0' COMMENT '物料编号',
  `MStuffTypeId` int(10) DEFAULT NULL COMMENT '配件主分类Id',
  `MStuffType` varchar(30) DEFAULT NULL COMMENT '配件主分类',
  `IsNew` varchar(20) DEFAULT '0' COMMENT '是否新增',
  `MaterName` varchar(40) DEFAULT NULL COMMENT '名称',
  `Spec` varchar(40) DEFAULT NULL COMMENT '规格',
  `Unit` varchar(20) DEFAULT NULL COMMENT '单位',
  `Quantity` decimal(11,2) DEFAULT NULL COMMENT '数量',
  `Price` varchar(15) DEFAULT NULL COMMENT '单价',
  `Total` varchar(15) DEFAULT NULL COMMENT '总额',
  `Loss` varchar(15) DEFAULT NULL COMMENT '损耗',
  `Remark` text COMMENT '备注',
  `Creator` int(10) DEFAULT NULL COMMENT '创立者',
  `Created` datetime DEFAULT NULL COMMENT '创建时间',
  `Modifier` int(10) DEFAULT NULL COMMENT '修改者',
  `Modified` datetime DEFAULT NULL COMMENT '修改时间',
  `IsBomInit` tinyint(1) NOT NULL DEFAULT '0' COMMENT '0未初始化   1已初始化',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Bom_Object_BomNo` (`TradeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5728 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='BOM列表';

-- ----------------------------
-- Table structure for bom_loss
-- ----------------------------
DROP TABLE IF EXISTS `bom_loss`;
CREATE TABLE `bom_loss` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.id',
  `CmptTypeId` mediumint(9) DEFAULT NULL,
  `CmptType` varchar(30) DEFAULT NULL COMMENT '构件类型',
  `StuffTypeId` mediumint(9) DEFAULT NULL,
  `StuffType` varchar(30) DEFAULT NULL,
  `Unit` varchar(20) DEFAULT NULL COMMENT '单位',
  `ThisStd` varchar(20) DEFAULT NULL COMMENT '本次标准',
  `PcStd` varchar(20) DEFAULT NULL COMMENT 'PC定额标准',
  `Creator` int(10) DEFAULT NULL COMMENT '创立者',
  `Created` datetime DEFAULT NULL COMMENT '创建时间',
  `Modifier` int(10) DEFAULT NULL COMMENT '修改者',
  `Modified` datetime DEFAULT NULL COMMENT '修改时间',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Bom_Object_BomNo` (`TradeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=267 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='BOM列表';

-- ----------------------------
-- Table structure for bom_mould
-- ----------------------------
DROP TABLE IF EXISTS `bom_mould`;
CREATE TABLE `bom_mould` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.id',
  `MouldCat` varchar(20) DEFAULT NULL COMMENT '模具类型',
  `MouldNo` varchar(20) DEFAULT NULL COMMENT '模具编号',
  `ProQty` varchar(10) DEFAULT NULL COMMENT '制作数量',
  `Ratio` varchar(20) DEFAULT NULL COMMENT '共模比',
  `Length` varchar(10) DEFAULT NULL COMMENT '长',
  `Width` varchar(10) DEFAULT NULL COMMENT '宽',
  `Creator` int(10) DEFAULT NULL COMMENT '创立者',
  `Created` datetime DEFAULT NULL COMMENT '创建时间',
  `Modifier` int(10) DEFAULT NULL COMMENT '修改者',
  `Modified` datetime DEFAULT NULL COMMENT '修改时间',
  `TrolleyId` varchar(15) DEFAULT NULL COMMENT 'wms_mtmain.TrolleyId   模台编号',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Bom_Object_BomNo` (`TradeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=318 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='BOM列表';

-- ----------------------------
-- Table structure for bom_mould_data
-- ----------------------------
DROP TABLE IF EXISTS `bom_mould_data`;
CREATE TABLE `bom_mould_data` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `MouldId` int(10) NOT NULL COMMENT 'bom_mould.id',
  `BuildingNo` varchar(20) DEFAULT NULL,
  `FloorNo` varchar(20) DEFAULT NULL,
  `CmptNo` varchar(20) DEFAULT NULL,
  `creator` int(10) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `TrolleyId` varchar(15) DEFAULT NULL COMMENT 'wms_mtmain.TrolleyId   模台编号',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `mouldid` (`MouldId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1090 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for bom_object
-- ----------------------------
DROP TABLE IF EXISTS `bom_object`;
CREATE TABLE `bom_object` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '主键',
  `TradeId` int(10) NOT NULL COMMENT '项目id',
  `BomCreater` int(10) DEFAULT NULL COMMENT '创立者',
  `BomCreated` datetime DEFAULT NULL COMMENT '创建时间',
  `Operator` int(10) DEFAULT NULL COMMENT '操作者',
  `Submited` datetime DEFAULT NULL COMMENT '提交审核时间',
  `Checker` int(10) DEFAULT NULL COMMENT '审核者',
  `Checked` datetime DEFAULT NULL COMMENT '审核时间',
  `CReasons` text COMMENT '审核意见',
  `Estate` tinyint(3) DEFAULT '0' COMMENT '审核状态',
  `CreateOrder` tinyint(3) DEFAULT '0' COMMENT '生成订单标识 1-已生成',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Bom_Object_BomNo` (`TradeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='BOM列表';

-- ----------------------------
-- Table structure for bps
-- ----------------------------
DROP TABLE IF EXISTS `bps`;
CREATE TABLE `bps` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员人,关联表：staffmain.Number',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId_2` (`StuffId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2418 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件采购供应商关系表';

-- ----------------------------
-- Table structure for branchdata
-- ----------------------------
DROP TABLE IF EXISTS `branchdata`;
CREATE TABLE `branchdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL COMMENT '登陆标示',
  `Name` varchar(20) NOT NULL COMMENT '部门名称',
  `TypeId` tinyint(4) NOT NULL DEFAULT '1' COMMENT '关联部门类型表',
  `Manager` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '主管',
  `SortId` tinyint(4) NOT NULL DEFAULT '99' COMMENT '排序号码',
  `Color` varchar(7) DEFAULT NULL,
  `Picture` tinyint(4) DEFAULT NULL,
  `pId` int(11) DEFAULT NULL COMMENT '父部门',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `SortId` (`SortId`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Manager` (`Manager`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=117 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 部门信息表';

-- ----------------------------
-- Table structure for branchmanager
-- ----------------------------
DROP TABLE IF EXISTS `branchmanager`;
CREATE TABLE `branchmanager` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` smallint(6) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `Manager` mediumint(9) NOT NULL COMMENT '部门负责人,关联表：staffmain.Number',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `Manager` (`Manager`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 部门表';

-- ----------------------------
-- Table structure for branchtype
-- ----------------------------
DROP TABLE IF EXISTS `branchtype`;
CREATE TABLE `branchtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 部门类型表';

-- ----------------------------
-- Table structure for buffer4analysis
-- ----------------------------
DROP TABLE IF EXISTS `buffer4analysis`;
CREATE TABLE `buffer4analysis` (
  `dateM` varchar(30) NOT NULL,
  `needXZ` varchar(30) NOT NULL,
  `factXZ` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  UNIQUE KEY `dateM` (`dateM`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for bxsheet
-- ----------------------------
DROP TABLE IF EXISTS `bxsheet`;
CREATE TABLE `bxsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `StartDate` datetime NOT NULL COMMENT '加班开始时间',
  `EndDate` datetime NOT NULL COMMENT '加班结束时间',
  `hours` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Note` text COMMENT '详细说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `type` tinyint(1) NOT NULL DEFAULT '0' COMMENT '记录补休类型;0为按小时，1为按天',
  `Reason` text,
  `Attached` varchar(30) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Checker` int(11) DEFAULT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='记录补休条目的表';

-- ----------------------------
-- Table structure for bxtimecount
-- ----------------------------
DROP TABLE IF EXISTS `bxtimecount`;
CREATE TABLE `bxtimecount` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `Hours` int(11) NOT NULL COMMENT '工时',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='记录计算后补休的总工时';

-- ----------------------------
-- Table structure for bx_audit
-- ----------------------------
DROP TABLE IF EXISTS `bx_audit`;
CREATE TABLE `bx_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='补休审核';

-- ----------------------------
-- Table structure for calcuate_pricemain
-- ----------------------------
DROP TABLE IF EXISTS `calcuate_pricemain`;
CREATE TABLE `calcuate_pricemain` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductName` varchar(50) NOT NULL COMMENT '产品名称',
  `UsdPrice` decimal(10,3) NOT NULL COMMENT '价格',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProductName` (`ProductName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品价格计算主表';

-- ----------------------------
-- Table structure for calcuate_pricesheet
-- ----------------------------
DROP TABLE IF EXISTS `calcuate_pricesheet`;
CREATE TABLE `calcuate_pricesheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联字段,关联表：calcuate_pricemain.ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '类型',
  `StuffName` varchar(50) NOT NULL COMMENT '产品名称',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Number` varchar(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  产品价格计算明细表';

-- ----------------------------
-- Table structure for carbrand
-- ----------------------------
DROP TABLE IF EXISTS `carbrand`;
CREATE TABLE `carbrand` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车辆类型表';

-- ----------------------------
-- Table structure for cardata
-- ----------------------------
DROP TABLE IF EXISTS `cardata`;
CREATE TABLE `cardata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OldId` int(11) NOT NULL COMMENT '原来编号',
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '标志',
  `TypeId` tinyint(4) NOT NULL COMMENT '类型',
  `BrandId` tinyint(4) NOT NULL DEFAULT '0',
  `UserSign` tinyint(4) NOT NULL DEFAULT '1',
  `carListNo` varchar(10) NOT NULL COMMENT '车牌尾号',
  `CarNo` varchar(20) DEFAULT NULL COMMENT '车牌',
  `User` varchar(15) NOT NULL COMMENT '使用人',
  `BuyStore` varchar(15) NOT NULL COMMENT '购买商店',
  `StoreNum` varchar(15) NOT NULL COMMENT '商店编号',
  `BuyDate` date NOT NULL COMMENT '购买日期',
  `BuyAddress` varchar(50) NOT NULL COMMENT '购买地址',
  `BuyContact` varchar(20) DEFAULT NULL COMMENT '电话',
  `Maintainer` varchar(20) DEFAULT NULL COMMENT '车主',
  `Enrollment` text NOT NULL COMMENT '违规记录',
  `DriveLic` text NOT NULL COMMENT '图片',
  `Insurance` text NOT NULL COMMENT '保险',
  `YueTong` text NOT NULL COMMENT '粤卡通',
  `OilCard` text NOT NULL COMMENT '加油卡',
  `CheckTime` date NOT NULL COMMENT '行车里程',
  `InsuranceDate` date NOT NULL COMMENT '保险日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `BuyAddress` (`BuyAddress`,`BuyContact`,`Maintainer`) USING BTREE,
  KEY `User` (`User`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `BrandId` (`BrandId`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车辆信息表';

-- ----------------------------
-- Table structure for carfee
-- ----------------------------
DROP TABLE IF EXISTS `carfee`;
CREATE TABLE `carfee` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '关联主表id,关联表：hzqkmain.ID',
  `CarId` int(10) NOT NULL COMMENT '车辆ID',
  `Content` text NOT NULL COMMENT '车辆费用内容',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '币别,关联表：currencydata.ID',
  `sCourses` int(10) NOT NULL DEFAULT '0',
  `eCourses` int(10) NOT NULL DEFAULT '0',
  `Bill` tinyint(4) NOT NULL COMMENT '票据',
  `TypeId` mediumint(9) NOT NULL COMMENT '车辆费用类别，关联carfee_type',
  `FirstId` int(11) NOT NULL DEFAULT '0',
  `ReturnReasons` text NOT NULL COMMENT '退回原因',
  `ApplyDate` date DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Auditor` mediumint(9) NOT NULL DEFAULT '0' COMMENT '审核人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间，取当前系统时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `CarId` (`CarId`) USING BTREE,
  KEY `Auditor` (`Auditor`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='车辆费用记录列表';

-- ----------------------------
-- Table structure for carfeemain
-- ----------------------------
DROP TABLE IF EXISTS `carfeemain`;
CREATE TABLE `carfeemain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `csign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL COMMENT '银行账户编号,关联表：currencydata.ID',
  `PayDate` date NOT NULL COMMENT '支付时间',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL COMMENT '支付情况说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='车辆费用结付主表';

-- ----------------------------
-- Table structure for carfee_audit
-- ----------------------------
DROP TABLE IF EXISTS `carfee_audit`;
CREATE TABLE `carfee_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='车辆费用审核';

-- ----------------------------
-- Table structure for carfee_type
-- ----------------------------
DROP TABLE IF EXISTS `carfee_type`;
CREATE TABLE `carfee_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品单位';

-- ----------------------------
-- Table structure for cartype
-- ----------------------------
DROP TABLE IF EXISTS `cartype`;
CREATE TABLE `cartype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '类型名称',
  `Color` varchar(7) NOT NULL COMMENT '颜色',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车辆类型表';

-- ----------------------------
-- Table structure for car_repair
-- ----------------------------
DROP TABLE IF EXISTS `car_repair`;
CREATE TABLE `car_repair` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CarId` smallint(6) NOT NULL COMMENT '车编号,关联表：cardata.ID',
  `Reperson` varchar(20) NOT NULL COMMENT '维修原因',
  `Recharge` varchar(20) NOT NULL COMMENT '维修费',
  `Redate` date NOT NULL COMMENT '维修时间',
  `Rereason` varchar(50) NOT NULL COMMENT '维修人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CarId_2` (`Reperson`,`Recharge`,`Rereason`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车维修记录表';

-- ----------------------------
-- Table structure for car_violation
-- ----------------------------
DROP TABLE IF EXISTS `car_violation`;
CREATE TABLE `car_violation` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CarId` smallint(6) NOT NULL COMMENT '车编号,关联表：cardata.ID',
  `Person` varchar(20) NOT NULL COMMENT '违规人',
  `Charge` varchar(10) NOT NULL COMMENT '费用',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Reason` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CarId_2` (`Person`,`Charge`,`Reason`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车辆违规记录表';

-- ----------------------------
-- Table structure for casetoproduct
-- ----------------------------
DROP TABLE IF EXISTS `casetoproduct`;
CREATE TABLE `casetoproduct` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `cId` int(11) NOT NULL COMMENT '出错案例自动ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ItemId` (`ProductId`) USING BTREE,
  KEY `UserId` (`cId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品与检讨报告关联表';

-- ----------------------------
-- Table structure for casetostuff
-- ----------------------------
DROP TABLE IF EXISTS `casetostuff`;
CREATE TABLE `casetostuff` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `cId` int(11) NOT NULL COMMENT '出错案例自动ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `cId` (`cId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件与检讨报告关联表';

-- ----------------------------
-- Table structure for cg1_abnormal_audit
-- ----------------------------
DROP TABLE IF EXISTS `cg1_abnormal_audit`;
CREATE TABLE `cg1_abnormal_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单异常审核';

-- ----------------------------
-- Table structure for cg1_addstuff
-- ----------------------------
DROP TABLE IF EXISTS `cg1_addstuff`;
CREATE TABLE `cg1_addstuff` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Level` tinyint(4) NOT NULL DEFAULT '1' COMMENT '配件所属层级',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `mStockId` varchar(15) DEFAULT NULL COMMENT '采购单流水号',
  `mStuffId` mediumint(9) NOT NULL,
  `StuffId` mediumint(9) NOT NULL COMMENT 's配件ID,关联表：stuffdata.StuffId',
  `uStuffId` varchar(200) NOT NULL COMMENT '关联配件',
  `Relation` varchar(50) DEFAULT NULL,
  `UpTestStandard` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购需求增加明细,需审核';

-- ----------------------------
-- Table structure for cg1_addstuff_unite
-- ----------------------------
DROP TABLE IF EXISTS `cg1_addstuff_unite`;
CREATE TABLE `cg1_addstuff_unite` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Level` tinyint(4) NOT NULL DEFAULT '1',
  `POrderId` varchar(12) NOT NULL,
  `ExStuffIdStr` varchar(500) NOT NULL,
  `UniteStr` varchar(200) NOT NULL,
  `OldUniteStr` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Level`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购需求增加关联配件';

-- ----------------------------
-- Table structure for cg1_bomdata
-- ----------------------------
DROP TABLE IF EXISTS `cg1_bomdata`;
CREATE TABLE `cg1_bomdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `mStockId` varchar(15) NOT NULL COMMENT '一级StockId',
  `mStuffId` mediumint(9) NOT NULL COMMENT '主配件ID,关联表：stuffdata.StuffId',
  `StuffId` mediumint(9) NOT NULL,
  `Relation` varchar(50) NOT NULL DEFAULT '1',
  `OrderQty` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品配件关联表';

-- ----------------------------
-- Table structure for cg1_deliverydate
-- ----------------------------
DROP TABLE IF EXISTS `cg1_deliverydate`;
CREATE TABLE `cg1_deliverydate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `DeliveryDate` date NOT NULL COMMENT '交付时间',
  `DeliveryWeek` mediumint(6) NOT NULL DEFAULT '0',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1462 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单交货期';

-- ----------------------------
-- Table structure for cg1_del_audit
-- ----------------------------
DROP TABLE IF EXISTS `cg1_del_audit`;
CREATE TABLE `cg1_del_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采单删除审核';

-- ----------------------------
-- Table structure for cg1_lockstock
-- ----------------------------
DROP TABLE IF EXISTS `cg1_lockstock`;
CREATE TABLE `cg1_lockstock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text COMMENT '详细内容说明',
  `ReturnReasons` varchar(200) NOT NULL,
  `LockDate` date NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单锁定表';

-- ----------------------------
-- Table structure for cg1_lockstock_audit
-- ----------------------------
DROP TABLE IF EXISTS `cg1_lockstock_audit`;
CREATE TABLE `cg1_lockstock_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件锁定审核';

-- ----------------------------
-- Table structure for cg1_lockstock_log
-- ----------------------------
DROP TABLE IF EXISTS `cg1_lockstock_log`;
CREATE TABLE `cg1_lockstock_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(14) NOT NULL COMMENT '采购流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text COMMENT '备注内容',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单锁定备注(APP用)';

-- ----------------------------
-- Table structure for cg1_processsheet
-- ----------------------------
DROP TABLE IF EXISTS `cg1_processsheet`;
CREATE TABLE `cg1_processsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `StockId` varchar(15) NOT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `ProcessId` mediumint(9) NOT NULL,
  `BeforeProcessId` varchar(200) DEFAULT NULL,
  `Relation` varchar(10) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `UnionStockId` (`StockId`,`StuffId`,`ProcessId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20283 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cg1_reset_remark
-- ----------------------------
DROP TABLE IF EXISTS `cg1_reset_remark`;
CREATE TABLE `cg1_reset_remark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(16) NOT NULL COMMENT '采购流水号',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品新单重置备注';

-- ----------------------------
-- Table structure for cg1_semifinished
-- ----------------------------
DROP TABLE IF EXISTS `cg1_semifinished`;
CREATE TABLE `cg1_semifinished` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sId` int(11) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `mStockId` varchar(15) DEFAULT NULL,
  `mStuffId` mediumint(9) NOT NULL COMMENT '主配件ID,关联表：stuffdata.StuffId',
  `StockId` varchar(15) DEFAULT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `Relation` varchar(50) NOT NULL DEFAULT '1',
  `OrderQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `OldQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `ParentNode` varchar(255) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=66632 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品配件关联表';

-- ----------------------------
-- Table structure for cg1_semifinished_del
-- ----------------------------
DROP TABLE IF EXISTS `cg1_semifinished_del`;
CREATE TABLE `cg1_semifinished_del` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sId` int(11) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `mStockId` varchar(15) DEFAULT NULL,
  `mStuffId` mediumint(9) NOT NULL COMMENT '主配件ID,关联表：stuffdata.StuffId',
  `StockId` varchar(15) DEFAULT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `Relation` varchar(50) NOT NULL DEFAULT '1',
  `OrderQty` decimal(10,3) NOT NULL DEFAULT '0.000',
  `OldQty` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9922 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品配件删除表';

-- ----------------------------
-- Table structure for cg1_semifinished_log
-- ----------------------------
DROP TABLE IF EXISTS `cg1_semifinished_log`;
CREATE TABLE `cg1_semifinished_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sId` int(11) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `mStockId` varchar(15) DEFAULT NULL,
  `mStuffId` mediumint(9) NOT NULL COMMENT '主配件ID,关联表：stuffdata.StuffId',
  `StockId` varchar(15) DEFAULT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `Relation` varchar(50) NOT NULL DEFAULT '1',
  `OrderQty` decimal(10,3) NOT NULL DEFAULT '0.000',
  `OldQty` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品配件关联表';

-- ----------------------------
-- Table structure for cg1_stockmain
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stockmain`;
CREATE TABLE `cg1_stockmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员,关联表：staffmain.Number',
  `PurchaseID` int(10) NOT NULL COMMENT '采购单号',
  `DeliveryDate` date NOT NULL DEFAULT '0000-00-00',
  `Remark` text NOT NULL COMMENT '备注说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `PurchaseID` (`PurchaseID`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=710 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单主表';

-- ----------------------------
-- Table structure for cg1_stockreview
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stockreview`;
CREATE TABLE `cg1_stockreview` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联采购主单自动ID,关联表：cg1_stockmain.ID',
  `PurchaseID` int(10) NOT NULL COMMENT '采购单号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `PurchaseID` (`PurchaseID`) USING BTREE,
  KEY `CompanyId` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购下单供应商确认';

-- ----------------------------
-- Table structure for cg1_stocksheet
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stocksheet`;
CREATE TABLE `cg1_stocksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联采购主单自动ID,关联表：cg1_stockmain.ID',
  `Level` tinyint(4) NOT NULL DEFAULT '1',
  `StockId` varchar(15) NOT NULL DEFAULT '' COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `StuffId` mediumint(9) NOT NULL COMMENT 's配件ID,关联表：stuffdata.StuffId',
  `Relation` varchar(50) DEFAULT NULL,
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `CostPrice` decimal(12,2) NOT NULL DEFAULT '0.00',
  `OrderQty` decimal(11,3) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '采购数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,3) NOT NULL COMMENT '实购数量',
  `CompanyId` varchar(8) NOT NULL COMMENT '供商商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员人员,关联表：staffmain.Number',
  `DeliveryDate` date NOT NULL COMMENT '交付日期',
  `DeliveryWeek` mediumint(6) NOT NULL DEFAULT '0' COMMENT '交货周期',
  `StockRemark` text NOT NULL COMMENT '仓库备注',
  `AddRemark` text NOT NULL COMMENT '补充说明',
  `cgSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '采购单标识:0正常业务关联采购单，1,特采单',
  `scSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '生产标识:0,外购，1,内部加工，2,外发加工',
  `rkSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '入库标记:1未入库，2､部分入库，0已入库',
  `blSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '备料标识',
  `llSign` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ywOrderDTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '下单时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `DeliveryDate` (`DeliveryDate`) USING BTREE,
  KEY `DeliveryWeek` (`DeliveryWeek`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=53732 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单明细表';

-- ----------------------------
-- Table structure for cg1_stocksheet_change
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stocksheet_change`;
CREATE TABLE `cg1_stocksheet_change` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cType` tinyint(4) NOT NULL COMMENT '操作类型:1、更新；2、删除;',
  `StockId` varchar(15) NOT NULL DEFAULT '' COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `StuffId` mediumint(9) NOT NULL COMMENT 's配件ID,关联表：stuffdata.StuffId',
  `Relation` varchar(50) DEFAULT NULL,
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '采购数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实购数量',
  `CompanyId` varchar(8) NOT NULL COMMENT '供商商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员人员,关联表：staffmain.Number',
  `DeliveryDate` date NOT NULL COMMENT '交付日期',
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`cType`) USING BTREE,
  KEY `DeliveryDate` (`DeliveryDate`) USING BTREE,
  KEY `AddQty` (`AddQty`) USING BTREE,
  KEY `FactualQty` (`FactualQty`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单明细表';

-- ----------------------------
-- Table structure for cg1_stocksheet_del
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stocksheet_del`;
CREATE TABLE `cg1_stocksheet_del` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联采购主单自动ID,关联表：cg1_stockmain.ID',
  `Level` tinyint(4) NOT NULL DEFAULT '1',
  `StockId` varchar(15) NOT NULL DEFAULT '' COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `StuffId` mediumint(9) NOT NULL COMMENT 's配件ID,关联表：stuffdata.StuffId',
  `Relation` varchar(50) DEFAULT NULL,
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `CostPrice` decimal(12,2) NOT NULL DEFAULT '0.00',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '采购数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实购数量',
  `CompanyId` varchar(8) NOT NULL COMMENT '供商商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员人员,关联表：staffmain.Number',
  `DeliveryDate` date NOT NULL COMMENT '交付日期',
  `DeliveryWeek` mediumint(6) NOT NULL DEFAULT '0' COMMENT '交货周期',
  `StockRemark` text NOT NULL COMMENT '仓库备注',
  `AddRemark` text NOT NULL COMMENT '补充说明',
  `cgSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '采购单标识:0正常业务关联采购单，1,特采单',
  `scSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '生产标识:0,外购，1,内部加工，2,外发加工',
  `rkSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '入库标记:1未入库，2､部分入库，0已入库',
  `blSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '备料标识',
  `llSign` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ywOrderDTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '下单时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `DeliveryDate` (`DeliveryDate`) USING BTREE,
  KEY `DeliveryWeek` (`DeliveryWeek`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8192 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单明细删除表';

-- ----------------------------
-- Table structure for cg1_stocksheet_log
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stocksheet_log`;
CREATE TABLE `cg1_stocksheet_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '关联采购明细单StockId',
  `Opcode` int(10) NOT NULL COMMENT '操作代码:3、更新；4、删除；7，锁定；8；解锁',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `Opcode` (`Opcode`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购下单供应商确认';

-- ----------------------------
-- Table structure for cg1_stuffcombox
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stuffcombox`;
CREATE TABLE `cg1_stuffcombox` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `mStockId` varchar(15) NOT NULL COMMENT '母配件的采购流水号',
  `StockId` varchar(15) NOT NULL COMMENT '子配件的流水号',
  `mStuffId` mediumint(9) NOT NULL COMMENT '母配件',
  `StuffId` mediumint(9) NOT NULL COMMENT '子配件',
  `Relation` int(3) DEFAULT NULL COMMENT '子配件的下单关系',
  `OrderQty` int(10) NOT NULL DEFAULT '0' COMMENT '子配件的需求数',
  `StockQty` int(10) NOT NULL DEFAULT '0' COMMENT '子配件根据母配件的使用库存数，保存相应的库存数',
  `AddQty` int(10) NOT NULL DEFAULT '0',
  `FactualQty` int(10) NOT NULL COMMENT '子配件的实际需求数',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `mStuffId` (`mStuffId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='母配件下单关联子配件表';

-- ----------------------------
-- Table structure for cg1_stuffunite
-- ----------------------------
DROP TABLE IF EXISTS `cg1_stuffunite`;
CREATE TABLE `cg1_stuffunite` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '主配件ID,关联表：stuffdata.StuffId',
  `uStuffId` mediumint(9) NOT NULL COMMENT '关联配件Id',
  `Relation` varchar(50) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `uStuffId` (`uStuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件关联表';

-- ----------------------------
-- Table structure for cg1_unlockstock
-- ----------------------------
DROP TABLE IF EXISTS `cg1_unlockstock`;
CREATE TABLE `cg1_unlockstock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(14) NOT NULL COMMENT '采购单流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单解锁记录表 ';

-- ----------------------------
-- Table structure for cg2_orderexpress
-- ----------------------------
DROP TABLE IF EXISTS `cg2_orderexpress`;
CREATE TABLE `cg2_orderexpress` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(14) NOT NULL COMMENT '采购单流水号',
  `Type` tinyint(4) NOT NULL COMMENT '类型',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购加急订单表 ';

-- ----------------------------
-- Table structure for cg3_fscdata
-- ----------------------------
DROP TABLE IF EXISTS `cg3_fscdata`;
CREATE TABLE `cg3_fscdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` text NOT NULL COMMENT '详细说明',
  `Attached` varchar(10) NOT NULL COMMENT '关联文档',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cg_order
-- ----------------------------
DROP TABLE IF EXISTS `cg_order`;
CREATE TABLE `cg_order` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单编号',
  `ItemNo` varchar(50) NOT NULL COMMENT '标签编号',
  `PONo` varchar(50) NOT NULL COMMENT '新PO',
  `Description` text NOT NULL COMMENT '描述',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='CG出货标签';

-- ----------------------------
-- Table structure for cg_remark
-- ----------------------------
DROP TABLE IF EXISTS `cg_remark`;
CREATE TABLE `cg_remark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(16) NOT NULL COMMENT '采购流水号',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购备注表';

-- ----------------------------
-- Table structure for ch0_packinglist
-- ----------------------------
DROP TABLE IF EXISTS `ch0_packinglist`;
CREATE TABLE `ch0_packinglist` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联出货模拟主表,关联表：ch0_shipmain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '产品订单编号',
  `BoxRow` tinyint(4) NOT NULL COMMENT '并箱标志',
  `BoxPcs` varchar(20) NOT NULL COMMENT '数量/箱',
  `BoxQty` mediumint(9) NOT NULL COMMENT '箱数',
  `WG` float(6,2) NOT NULL COMMENT '单品重量(KG)',
  `FullQty` mediumint(9) NOT NULL COMMENT '当前行合计产品数量',
  `BoxSpec` varchar(20) NOT NULL COMMENT '外箱尺寸',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货模拟装箱表';

-- ----------------------------
-- Table structure for ch0_packpoecodebar
-- ----------------------------
DROP TABLE IF EXISTS `ch0_packpoecodebar`;
CREATE TABLE `ch0_packpoecodebar` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `Pid` int(11) NOT NULL,
  `PorderId` varchar(20) NOT NULL DEFAULT '' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `OrderPo` varchar(30) NOT NULL COMMENT '其它收入分类,关联表：cw4_otherintype.ID',
  `eCode` varchar(30) NOT NULL COMMENT '金额',
  `BoxCode` varchar(30) NOT NULL COMMENT '货币类别,关联表：currencydata.ID',
  `OtherEcode` varchar(30) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`Date`) USING BTREE,
  KEY `TypeId` (`OrderPo`) USING BTREE,
  KEY `Currency` (`BoxCode`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其它收入表';

-- ----------------------------
-- Table structure for ch0_shipmain
-- ----------------------------
DROP TABLE IF EXISTS `ch0_shipmain`;
CREATE TABLE `ch0_shipmain` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `ModelId` int(11) NOT NULL COMMENT '出货模板,关联表：ch8_shipmodel.ID',
  `BankId` tinyint(4) NOT NULL DEFAULT '1' COMMENT '付款银行账号,关联表：my2_bankinfo.ID',
  `Number` int(11) NOT NULL COMMENT '出货流水号',
  `InvoiceNO` varchar(30) NOT NULL COMMENT 'InvoiceNO',
  `InvoiceFile` tinyint(4) NOT NULL COMMENT 'Invoice上传文件标识',
  `Wise` varchar(100) NOT NULL COMMENT '货运信息',
  `Notes` text NOT NULL COMMENT '注意事项',
  `Terms` text NOT NULL COMMENT '一般事项',
  `PaymentTerm` varchar(200) NOT NULL COMMENT '支付事项',
  `PreSymbol` varchar(1) NOT NULL COMMENT '外箱标签箱号前置字符',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Sign` tinyint(4) NOT NULL COMMENT '收支标记',
  `cwSign` tinyint(4) NOT NULL COMMENT '结付状态',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `InvoiceNO` (`InvoiceNO`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `ClientId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货模拟主表';

-- ----------------------------
-- Table structure for ch0_shipsheet
-- ----------------------------
DROP TABLE IF EXISTS `ch0_shipsheet`;
CREATE TABLE `ch0_shipsheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联出货模拟主表,关联表：ch0_shipmain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Type` tinyint(4) NOT NULL,
  `YandN` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货模拟明细表';

-- ----------------------------
-- Table structure for ch10_mailaddress
-- ----------------------------
DROP TABLE IF EXISTS `ch10_mailaddress`;
CREATE TABLE `ch10_mailaddress` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `LinkMan` varchar(30) NOT NULL COMMENT '联系人',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Forshort` varchar(50) NOT NULL COMMENT '公司简称',
  `Termini` varchar(20) NOT NULL COMMENT '目的地',
  `Tel` varchar(50) NOT NULL COMMENT '联系电话',
  `Fax` varchar(20) NOT NULL COMMENT '传真',
  `ZIP` varchar(10) NOT NULL COMMENT '邮编',
  `Address` varchar(100) NOT NULL COMMENT '地址',
  `Remark` text NOT NULL COMMENT '备注说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `LinkMan` (`LinkMan`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 寄样地址表';

-- ----------------------------
-- Table structure for ch10_samplemail
-- ----------------------------
DROP TABLE IF EXISTS `ch10_samplemail`;
CREATE TABLE `ch10_samplemail` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Month` varchar(7) DEFAULT NULL,
  `Mid` int(11) NOT NULL,
  `DataType` tinyint(4) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL COMMENT '货运公司Id',
  `LinkMan` mediumint(9) NOT NULL COMMENT '客户联系人,关联表：ch10_mailaddress.ID',
  `ExpressNO` varchar(15) NOT NULL COMMENT '提单号码',
  `Pieces` mediumint(9) NOT NULL COMMENT '件数',
  `Weight` float(6,2) NOT NULL COMMENT '重量',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Amount` decimal(10,3) NOT NULL COMMENT '总额',
  `PayType` tinyint(4) NOT NULL COMMENT '支付货币类型',
  `ServiceType` tinyint(4) NOT NULL COMMENT '服务类型',
  `HandledBy` mediumint(9) NOT NULL COMMENT '经手人',
  `Description` text NOT NULL COMMENT '物品名称',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Schedule` tinyint(4) NOT NULL COMMENT '计划时间',
  `SendDate` date NOT NULL COMMENT '发货日期',
  `ReceiveDate` varchar(20) NOT NULL COMMENT '签收日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='寄样寄送列表';

-- ----------------------------
-- Table structure for ch10_samplemail_audit
-- ----------------------------
DROP TABLE IF EXISTS `ch10_samplemail_audit`;
CREATE TABLE `ch10_samplemail_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='样品邮费审核';

-- ----------------------------
-- Table structure for ch10_samplepicture
-- ----------------------------
DROP TABLE IF EXISTS `ch10_samplepicture`;
CREATE TABLE `ch10_samplepicture` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联样品寄送列表,关联表：ch10_samplemail.ID',
  `Picture` varchar(20) NOT NULL COMMENT '样品图片(jpg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='寄样图片表';

-- ----------------------------
-- Table structure for ch11_shipamount
-- ----------------------------
DROP TABLE IF EXISTS `ch11_shipamount`;
CREATE TABLE `ch11_shipamount` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '月份',
  `Amount` decimal(10,0) NOT NULL COMMENT '总金额',
  `Remark` text NOT NULL COMMENT '内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='每月报关金额设置';

-- ----------------------------
-- Table structure for ch12_goodscarlist
-- ----------------------------
DROP TABLE IF EXISTS `ch12_goodscarlist`;
CREATE TABLE `ch12_goodscarlist` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CarNumber` varchar(10) NOT NULL COMMENT '小车编号',
  `Position` varchar(10) NOT NULL COMMENT '放置位置',
  `POrderId` int(20) NOT NULL COMMENT '业务订单流水号',
  `RFID` int(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='记录成品小车的位置';

-- ----------------------------
-- Table structure for ch13_othernote
-- ----------------------------
DROP TABLE IF EXISTS `ch13_othernote`;
CREATE TABLE `ch13_othernote` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `shipId` int(11) DEFAULT NULL,
  `type` varchar(11) DEFAULT NULL,
  `note` text,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `shipId` (`shipId`,`type`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ch1_deliveryhidden
-- ----------------------------
DROP TABLE IF EXISTS `ch1_deliveryhidden`;
CREATE TABLE `ch1_deliveryhidden` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `DeliveryNumber` varchar(50) NOT NULL COMMENT '关联出货主单自动ID,关联表：ch1_shipmain.ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ShipId` (`DeliveryNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不直接发货订单登记表';

-- ----------------------------
-- Table structure for ch1_deliverymain
-- ----------------------------
DROP TABLE IF EXISTS `ch1_deliverymain`;
CREATE TABLE `ch1_deliverymain` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `CompanyId` int(10) NOT NULL COMMENT '客户ID,关联表：clientdata.CompanyId',
  `ModelId` int(10) NOT NULL COMMENT '出货模板ID',
  `ForwaderId` int(10) NOT NULL COMMENT '货运公司ID,关联表：forwarddata.CompanyId',
  `ForwaderRemark` varchar(50) DEFAULT NULL,
  `DeliveryNumber` varchar(30) NOT NULL COMMENT '提货单号',
  `ShipType` varchar(50) DEFAULT NULL COMMENT '出货方式',
  `Remark` text NOT NULL,
  `DeliveryDate` date NOT NULL COMMENT '提货日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `DeliveryNumber` (`DeliveryNumber`) USING BTREE,
  KEY `ForwaderId` (`ForwaderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='分批提货单主表';

-- ----------------------------
-- Table structure for ch1_deliverypacklist
-- ----------------------------
DROP TABLE IF EXISTS `ch1_deliverypacklist`;
CREATE TABLE `ch1_deliverypacklist` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联分批提货主单,关联表：ch1_deliverymain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `BoxRow` tinyint(4) NOT NULL COMMENT '是否并箱',
  `BoxPcs` varchar(10) NOT NULL COMMENT '数量/每箱',
  `BoxQty` mediumint(9) NOT NULL COMMENT '装箱数量',
  `WG` float(6,2) NOT NULL COMMENT '重量',
  `FullQty` mediumint(9) NOT NULL COMMENT '当前行总数量',
  `BoxSpec` varchar(16) NOT NULL COMMENT '外箱尺寸',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='分批提货单装箱明细表';

-- ----------------------------
-- Table structure for ch1_deliverysheet
-- ----------------------------
DROP TABLE IF EXISTS `ch1_deliverysheet`;
CREATE TABLE `ch1_deliverysheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联分批提货主单,关联表：ch1_deliverymain.ID',
  `ShipId` int(10) NOT NULL COMMENT '出货主表,关联表：ch1_shipmain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `DeliveryQty` int(11) NOT NULL COMMENT '提货数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Type` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `ShipId` (`ShipId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='分批提货单明细表';

-- ----------------------------
-- Table structure for ch1_shipfile
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipfile`;
CREATE TABLE `ch1_shipfile` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ShipId` int(11) NOT NULL,
  `ExpressNum` varchar(30) NOT NULL,
  `ForwardNum` varchar(30) NOT NULL,
  `BillNum` varchar(30) DEFAULT NULL,
  `BillDate` date NOT NULL DEFAULT '0000-00-00',
  `BgBillNum` varchar(30) DEFAULT NULL,
  `BgRemark` varchar(200) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `creator` mediumint(9) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` mediumint(9) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ShipId` (`ShipId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货单的快递签收单和forward签收单/发票';

-- ----------------------------
-- Table structure for ch1_shipinfo
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipinfo`;
CREATE TABLE `ch1_shipinfo` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ShipMid` int(11) NOT NULL COMMENT '关联出货主单自动ID,关联表：ch1_shipmain.ID',
  `SoldCompany` varchar(100) NOT NULL,
  `SoldAddress` varchar(100) NOT NULL,
  `ShipCompany` varchar(100) NOT NULL,
  `ShipAddress` varchar(100) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ShipMid` (`ShipMid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不直接发货订单登记表';

-- ----------------------------
-- Table structure for ch1_shipmain
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipmain`;
CREATE TABLE `ch1_shipmain` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `ModelId` int(11) NOT NULL COMMENT '出货模板ID,关联表：ch8_shipmodel.ID',
  `BankId` tinyint(4) NOT NULL DEFAULT '1' COMMENT '收款账户,关联表：my2_bankinfo.ID',
  `Number` int(11) NOT NULL COMMENT '出货流水号',
  `InvoiceNO` varchar(40) NOT NULL COMMENT 'InvoiceNO称',
  `InvoiceFile` tinyint(4) NOT NULL,
  `Wise` varchar(100) NOT NULL DEFAULT '',
  `Notes` text NOT NULL COMMENT '注意事项',
  `Terms` text NOT NULL COMMENT '出货事项',
  `PaymentTerm` varchar(200) NOT NULL COMMENT '支付事项',
  `PreSymbol` varchar(1) NOT NULL COMMENT '标志',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Sign` tinyint(4) NOT NULL COMMENT '特定Invoice文件',
  `Ship` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '出货方式',
  `ShipType` varchar(20) NOT NULL COMMENT '出货分类',
  `cwSign` tinyint(4) NOT NULL,
  `Remark` varchar(200) NOT NULL COMMENT '详细说明',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `InvoiceNO` (`InvoiceNO`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `ClientId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=24 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货主表';

-- ----------------------------
-- Table structure for ch1_shipout
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipout`;
CREATE TABLE `ch1_shipout` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ShipId` int(11) NOT NULL COMMENT '关联出货主单自动ID,关联表：ch1_shipmain.ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ShipId` (`ShipId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不直接发货订单登记表';

-- ----------------------------
-- Table structure for ch1_shipsheet
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipsheet`;
CREATE TABLE `ch1_shipsheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联出货主表,关联表：ch1_shipmain.ID',
  `SplitId` int(10) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `DeliverySign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '发货标志',
  `Type` tinyint(4) NOT NULL,
  `YandN` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(3) unsigned DEFAULT NULL,
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货明细表';

-- ----------------------------
-- Table structure for ch1_shipsplit
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipsplit`;
CREATE TABLE `ch1_shipsplit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ShipId` int(11) NOT NULL COMMENT '关联出货明细表,关联表：ch1_shipsheet.ID',
  `Qty` mediumint(9) NOT NULL,
  `ShipType` text NOT NULL COMMENT '出货方式',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `OrderSign` int(10) NOT NULL DEFAULT '0' COMMENT '订单标记',
  `shipSign` tinyint(4) DEFAULT '1' COMMENT '是否可以出货',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `ShipId` (`ShipId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=500 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='分批出货表';

-- ----------------------------
-- Table structure for ch1_shipstuffmain
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shipstuffmain`;
CREATE TABLE `ch1_shipstuffmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sId` int(10) NOT NULL,
  `StockId` varchar(14) NOT NULL,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件Id',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `OrderPO` varchar(50) NOT NULL COMMENT '样品PO',
  `Description` varchar(100) NOT NULL COMMENT '备注',
  `Qty` mediumint(9) NOT NULL COMMENT '数量',
  `StockQty` mediumint(9) NOT NULL COMMENT '使用库存数',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `ClientOrder` varchar(20) NOT NULL COMMENT '客户下单的凭证',
  `OrderDate` date NOT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `CompanyId_2` (`CompanyId`) USING BTREE,
  KEY `sId` (`sId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='随货样品列表 ';

-- ----------------------------
-- Table structure for ch1_shiptypedata
-- ----------------------------
DROP TABLE IF EXISTS `ch1_shiptypedata`;
CREATE TABLE `ch1_shiptypedata` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联出货主表,关联表：ch1_shipmain.ID',
  `Type` tinyint(4) NOT NULL COMMENT '是否报关',
  `CompanyId` mediumint(9) NOT NULL COMMENT '报关公司',
  `Attached` varchar(15) DEFAULT NULL,
  `BgBillNum` varchar(50) DEFAULT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ch1_unlock
-- ----------------------------
DROP TABLE IF EXISTS `ch1_unlock`;
CREATE TABLE `ch1_unlock` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `SplitId` int(11) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ShipId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户有货款逾期未付表';

-- ----------------------------
-- Table structure for ch2_packinglist
-- ----------------------------
DROP TABLE IF EXISTS `ch2_packinglist`;
CREATE TABLE `ch2_packinglist` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '出货主表,关联表：ch1_shipmain.ID',
  `SplitId` int(11) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `BoxRow` tinyint(4) NOT NULL COMMENT '并箱标志',
  `BoxPcs` varchar(10) NOT NULL COMMENT '数量/每箱',
  `BoxQty` mediumint(9) NOT NULL COMMENT '箱数',
  `WG` float(6,2) NOT NULL COMMENT '重量',
  `FullQty` mediumint(9) NOT NULL COMMENT '当前行合计总数量',
  `BoxSpec` varchar(16) NOT NULL COMMENT '外箱尺寸',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='未装箱出货列表 ';

-- ----------------------------
-- Table structure for ch3_forward
-- ----------------------------
DROP TABLE IF EXISTS `ch3_forward`;
CREATE TABLE `ch3_forward` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `chId` int(11) NOT NULL COMMENT '出货主表自动ID',
  `Month` varchar(7) DEFAULT NULL,
  `TypeId` tinyint(4) NOT NULL COMMENT 'forward类型',
  `CompanyId` mediumint(9) NOT NULL COMMENT 'Forward公司ID',
  `PayType` smallint(6) NOT NULL COMMENT '付款类型',
  `HoldNO` varchar(15) NOT NULL COMMENT '入仓号',
  `ForwardNO` varchar(15) NOT NULL COMMENT 'ForwardNO',
  `BoxQty` int(11) NOT NULL COMMENT '箱数',
  `mcWG` decimal(11,2) NOT NULL COMMENT '研砼重量(KG)',
  `forwardWG` decimal(11,2) NOT NULL COMMENT 'formwar重量(KG)',
  `Volume` decimal(11,2) NOT NULL COMMENT '研砼体积(立方)',
  `HKVolume` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '上海体积',
  `VolumeKG` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '研砼体积重',
  `HKVolumeKG` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '上海体积重',
  `CFSCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT 'CFS费',
  `THCCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT 'THC费',
  `WJCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '文件费',
  `SXCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '手续费',
  `ENSCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT 'ENS费',
  `BXCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '保险费',
  `GQCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '过桥费',
  `DFCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '过桥费',
  `TDCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '提单费',
  `OtherCharge` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '其它费用',
  `Amount` decimal(11,2) NOT NULL COMMENT '金额(HKD)',
  `InvoiceDate` date NOT NULL,
  `ETD` text NOT NULL COMMENT '报关期限范围',
  `ShipType` tinyint(4) NOT NULL COMMENT '1-空运，2-海运',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `ReturnReasons` text COMMENT '退回原因',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Forward杂费列表';

-- ----------------------------
-- Table structure for ch3_forward_audit
-- ----------------------------
DROP TABLE IF EXISTS `ch3_forward_audit`;
CREATE TABLE `ch3_forward_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='杂费审核';

-- ----------------------------
-- Table structure for ch3_forward_invoice
-- ----------------------------
DROP TABLE IF EXISTS `ch3_forward_invoice`;
CREATE TABLE `ch3_forward_invoice` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联Forward杂费列表',
  `chId` int(11) NOT NULL,
  `TypeId` tinyint(4) NOT NULL COMMENT '(Invoice/提货单)类型',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ch4_freight_declaration
-- ----------------------------
DROP TABLE IF EXISTS `ch4_freight_declaration`;
CREATE TABLE `ch4_freight_declaration` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联出货主表',
  `chId` int(11) NOT NULL,
  `TypeId` tinyint(4) NOT NULL COMMENT '(Invoice/提货单)类型',
  `CompanyId` mediumint(9) NOT NULL COMMENT '货运公司',
  `PayType` smallint(6) NOT NULL COMMENT '付款类型',
  `Termini` varchar(30) NOT NULL COMMENT '目的地',
  `ExpressNO` varchar(20) NOT NULL COMMENT '提货单号',
  `BoxQty` int(11) NOT NULL COMMENT '箱数',
  `mcWG` decimal(10,3) NOT NULL COMMENT '研砼重量',
  `Volume` decimal(11,2) NOT NULL,
  `CarType` varchar(50) NOT NULL,
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Amount` decimal(11,2) DEFAULT NULL,
  `depotCharge` decimal(11,2) NOT NULL COMMENT '入仓费(HKD)',
  `declarationCharge` decimal(11,2) NOT NULL COMMENT '报关费(HKD)',
  `checkCharge` decimal(11,2) NOT NULL COMMENT '商检费(HKD)',
  `carryCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `xyCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `wfqgCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `ccCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `djCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `stopcarCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `expressCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `otherCharge` decimal(11,2) NOT NULL DEFAULT '0.00',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='运费、报关费商检费表';

-- ----------------------------
-- Table structure for ch4_freight_invoice
-- ----------------------------
DROP TABLE IF EXISTS `ch4_freight_invoice`;
CREATE TABLE `ch4_freight_invoice` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联运费、报关费商检费表,关联表：ch4_freight_declaration.ID',
  `chId` int(11) NOT NULL,
  `TypeId` tinyint(4) NOT NULL COMMENT '(Invoice/提货单)类型',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 中港报关费Invoice';

-- ----------------------------
-- Table structure for ch4_logistics_date
-- ----------------------------
DROP TABLE IF EXISTS `ch4_logistics_date`;
CREATE TABLE `ch4_logistics_date` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联运费、报关费商检费表,关联表：ch4_freight_declaration.ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='物流对帐记录表';

-- ----------------------------
-- Table structure for ch5_sampsheet
-- ----------------------------
DROP TABLE IF EXISTS `ch5_sampsheet`;
CREATE TABLE `ch5_sampsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `SampId` mediumint(9) NOT NULL COMMENT '寄样ID',
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `TypeId` smallint(6) NOT NULL COMMENT '类型',
  `SampPO` varchar(50) NOT NULL COMMENT '样品PO',
  `SampName` varchar(100) NOT NULL COMMENT '中文注释',
  `Description` varchar(100) NOT NULL COMMENT '英文注释',
  `Qty` mediumint(9) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Weight` decimal(8,2) NOT NULL DEFAULT '0.00' COMMENT '重量(KG)',
  `Type` tinyint(4) NOT NULL COMMENT '装箱设定',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `SampId` (`SampId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='随货样品列表 ';

-- ----------------------------
-- Table structure for ch6_creditnote
-- ----------------------------
DROP TABLE IF EXISTS `ch6_creditnote`;
CREATE TABLE `ch6_creditnote` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `PO` varchar(15) NOT NULL COMMENT 'PO',
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `Number` int(11) NOT NULL,
  `Description` varchar(300) NOT NULL COMMENT '描述',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='扣款资料表';

-- ----------------------------
-- Table structure for ch7_deliverypicture
-- ----------------------------
DROP TABLE IF EXISTS `ch7_deliverypicture`;
CREATE TABLE `ch7_deliverypicture` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联提货主表,关联表：ch1_deliverymain.ID',
  `Remark` varchar(50) NOT NULL,
  `Picture` varchar(15) NOT NULL COMMENT '文件名字(jpg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='提货单附加文件表';

-- ----------------------------
-- Table structure for ch7_shippicture
-- ----------------------------
DROP TABLE IF EXISTS `ch7_shippicture`;
CREATE TABLE `ch7_shippicture` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '出货主表,关联表：ch1_shipmain.ID',
  `Remark` varchar(50) NOT NULL,
  `Picture` varchar(15) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货附加文件表';

-- ----------------------------
-- Table structure for ch8_shipmodel
-- ----------------------------
DROP TABLE IF EXISTS `ch8_shipmodel`;
CREATE TABLE `ch8_shipmodel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `Title` varchar(50) NOT NULL COMMENT '标题',
  `InvoiceModel` tinyint(4) NOT NULL COMMENT 'Invoice模板',
  `LabelModel` tinyint(4) NOT NULL COMMENT '标签模板',
  `StartPlace` varchar(100) NOT NULL COMMENT '出货始发地(标签)',
  `EndPlace` varchar(100) NOT NULL COMMENT '出货目的地(标签)',
  `SoldFrom` varchar(100) DEFAULT NULL COMMENT '出货公司名称',
  `FromAddress` text COMMENT '出货地址',
  `FromFaxNo` varchar(100) DEFAULT NULL COMMENT '出货传真',
  `SoldTo` varchar(200) NOT NULL,
  `Address` text NOT NULL COMMENT '收货地址',
  `FaxNo` varchar(100) NOT NULL COMMENT '收货传真',
  `Wise` varchar(100) DEFAULT NULL,
  `PISign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '默认PI模板',
  `OutSign` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货模板表';

-- ----------------------------
-- Table structure for ch8_shipoutcompany
-- ----------------------------
DROP TABLE IF EXISTS `ch8_shipoutcompany`;
CREATE TABLE `ch8_shipoutcompany` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `OutCompanyName` varchar(100) NOT NULL,
  `OutCurrency` tinyint(4) NOT NULL DEFAULT '0',
  `OutAddress` text NOT NULL,
  `OutTel` varchar(50) DEFAULT NULL,
  `OutFax` varchar(50) DEFAULT NULL,
  `OutURL` varchar(100) DEFAULT NULL,
  `OutRequistion` varchar(20) NOT NULL,
  `OutReqTel` varchar(50) DEFAULT NULL,
  `OutBeneficiary` varchar(100) NOT NULL,
  `OutBeneficiaryCode` varchar(50) NOT NULL,
  `OutSWIFTAddress` varchar(100) NOT NULL,
  `OutAccountName` varchar(200) NOT NULL,
  `OutAccountNumber` varchar(50) NOT NULL,
  `OutBankAddress` text NOT NULL,
  `OutRemark` text NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `OutCurrency` (`OutCurrency`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='转发公司';

-- ----------------------------
-- Table structure for ch9_expsheet
-- ----------------------------
DROP TABLE IF EXISTS `ch9_expsheet`;
CREATE TABLE `ch9_expsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `ExpressNO` varchar(15) NOT NULL COMMENT '提单号码',
  `CompanyId` mediumint(9) NOT NULL COMMENT '快递公司ID',
  `BoxQty` int(11) NOT NULL COMMENT '装箱数量',
  `Weight` decimal(10,3) NOT NULL COMMENT '重量',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Type` tinyint(4) NOT NULL COMMENT '付款方式',
  `HandledBy` varchar(10) NOT NULL COMMENT '经手人,关联表：staffmain.Number',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='快递列表';

-- ----------------------------
-- Table structure for ch9_exp_audit
-- ----------------------------
DROP TABLE IF EXISTS `ch9_exp_audit`;
CREATE TABLE `ch9_exp_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='快递费审核';

-- ----------------------------
-- Table structure for chart1_item
-- ----------------------------
DROP TABLE IF EXISTS `chart1_item`;
CREATE TABLE `chart1_item` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Type` tinyint(4) NOT NULL DEFAULT '1' COMMENT '图例类型',
  `Title` varchar(50) NOT NULL COMMENT '图例名称',
  `Link` varchar(50) NOT NULL COMMENT '连接文件名',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 图表项目表';

-- ----------------------------
-- Table structure for chart2_color
-- ----------------------------
DROP TABLE IF EXISTS `chart2_color`;
CREATE TABLE `chart2_color` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `ColorCode` varchar(6) NOT NULL COMMENT '颜色编码',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户图表颜色表';

-- ----------------------------
-- Table structure for chart3_color
-- ----------------------------
DROP TABLE IF EXISTS `chart3_color`;
CREATE TABLE `chart3_color` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` mediumint(9) NOT NULL COMMENT '产品分类,关联表：producttype.TypeId',
  `ColorCode` varchar(6) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ColorCode` (`ColorCode`) USING BTREE,
  UNIQUE KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品类型图表颜色表';

-- ----------------------------
-- Table structure for checkinout
-- ----------------------------
DROP TABLE IF EXISTS `checkinout`;
CREATE TABLE `checkinout` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` int(10) NOT NULL COMMENT '员工号,关联表：staffmian.NO',
  `KqSign` int(11) NOT NULL COMMENT '考勤班次',
  `CheckTime` datetime DEFAULT NULL COMMENT '考勤时间',
  `CheckDate` varchar(10) DEFAULT NULL COMMENT '考勤日期',
  `Check1` int(11) DEFAULT NULL COMMENT '第一次打卡',
  `Check2` int(11) DEFAULT NULL COMMENT '第二次打卡',
  `Check3` int(11) DEFAULT NULL COMMENT '第三次打卡',
  `Check4` int(11) DEFAULT NULL COMMENT '第四次打卡',
  `Check5` int(11) DEFAULT NULL COMMENT '第五次打卡',
  `Check6` int(11) DEFAULT NULL COMMENT '第六次打卡',
  `CheckType` char(1) NOT NULL COMMENT '上下班标识',
  `dFrom` varchar(50) NOT NULL DEFAULT '' COMMENT '打卡楼层,关联表:attendance_floor',
  `dFromId` tinyint(2) NOT NULL DEFAULT '0' COMMENT '打卡楼层Id,关联表:attendanceipadsheet',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ZlSign` tinyint(4) NOT NULL COMMENT '直落标志',
  `KrSign` tinyint(4) NOT NULL COMMENT '跨日标志',
  `otReason` varchar(100) DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '创建人',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL COMMENT '修改人',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`,`CheckDate`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='正式员工考勤记录表';

-- ----------------------------
-- Table structure for checkinout_dd
-- ----------------------------
DROP TABLE IF EXISTS `checkinout_dd`;
CREATE TABLE `checkinout_dd` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmian.NO',
  `CheckTime` datetime NOT NULL COMMENT '考勤时间',
  `CheckType` char(1) NOT NULL COMMENT '上下班标识',
  `dFrom` varchar(50) NOT NULL DEFAULT '' COMMENT '打卡楼层,关联表:attendance_floor',
  `dFromId` tinyint(2) NOT NULL DEFAULT '0' COMMENT '打卡楼层Id,关联表:attendanceipadsheet',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ZlSign` tinyint(4) NOT NULL COMMENT '直落标志',
  `KrSign` tinyint(4) NOT NULL COMMENT '跨日标志',
  `otReason` varchar(100) DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '创建人',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL COMMENT '修改人',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `CheckTime` (`CheckTime`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='正式员工考勤临时调动记录表';

-- ----------------------------
-- Table structure for checkinout_factorycheck
-- ----------------------------
DROP TABLE IF EXISTS `checkinout_factorycheck`;
CREATE TABLE `checkinout_factorycheck` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmian.NO',
  `CheckTime` datetime NOT NULL COMMENT '考勤时间',
  `CheckType` char(1) NOT NULL COMMENT '上下班标识',
  `dFrom` varchar(50) NOT NULL COMMENT '数据来源',
  `dFromId` tinyint(2) NOT NULL DEFAULT '0' COMMENT '打卡楼层Id',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ZlSign` tinyint(4) NOT NULL COMMENT '直落标志',
  `KrSign` tinyint(4) NOT NULL COMMENT '跨日标志',
  `otReason` varchar(100) DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `CheckTime` (`CheckTime`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='正式员工考勤记录表';

-- ----------------------------
-- Table structure for checktime_dd
-- ----------------------------
DROP TABLE IF EXISTS `checktime_dd`;
CREATE TABLE `checktime_dd` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `checkioId` char(11) DEFAULT NULL,
  `oldChecktime` varchar(50) DEFAULT NULL,
  `checknId` char(11) DEFAULT NULL,
  `targetChecktime` varchar(50) DEFAULT NULL,
  `worktime` decimal(10,3) DEFAULT NULL,
  `Date` datetime DEFAULT NULL,
  `Operator` int(11) DEFAULT NULL,
  `Estate` tinyint(1) DEFAULT '1',
  `rate` decimal(10,3) DEFAULT '17.500',
  `type` int(1) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cheque
-- ----------------------------
DROP TABLE IF EXISTS `cheque`;
CREATE TABLE `cheque` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ChequeNum` varchar(50) NOT NULL COMMENT '支票号',
  `Amount` decimal(9,2) NOT NULL COMMENT '金额',
  `Receiver` varchar(20) NOT NULL COMMENT '供应商',
  `Remark` text NOT NULL,
  `Bill` tinyint(4) NOT NULL COMMENT '票据(jpg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ChequeNum` (`ChequeNum`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='支票登记表';

-- ----------------------------
-- Table structure for childclass
-- ----------------------------
DROP TABLE IF EXISTS `childclass`;
CREATE TABLE `childclass` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(12) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Creator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for childinfo
-- ----------------------------
DROP TABLE IF EXISTS `childinfo`;
CREATE TABLE `childinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `ChildName` varchar(20) NOT NULL,
  `Sex` tinyint(4) NOT NULL,
  `Amount` decimal(10,3) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `StartSchool` varchar(200) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ch_initallotto
-- ----------------------------
DROP TABLE IF EXISTS `ch_initallotto`;
CREATE TABLE `ch_initallotto` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `companyId` int(11) DEFAULT NULL,
  `lotto` varchar(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `operator` int(6) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ch_shiptype
-- ----------------------------
DROP TABLE IF EXISTS `ch_shiptype`;
CREATE TABLE `ch_shiptype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '运货方式名称',
  `eName` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 出货运送方式';

-- ----------------------------
-- Table structure for ck11_bpmain
-- ----------------------------
DROP TABLE IF EXISTS `ck11_bpmain`;
CREATE TABLE `ck11_bpmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL COMMENT '送货单号(jpg)',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商备品列表';

-- ----------------------------
-- Table structure for ck11_bpsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck11_bpsheet`;
CREATE TABLE `ck11_bpsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联供应商备品主表,关联表：ck11_bpmain.ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '备品数量',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商备品明细表';

-- ----------------------------
-- Table structure for ck12_thmain
-- ----------------------------
DROP TABLE IF EXISTS `ck12_thmain`;
CREATE TABLE `ck12_thmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL COMMENT '退换单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Attached` tinyint(4) NOT NULL COMMENT '退货图片说明(jpg)',
  `Type` tinyint(3) NOT NULL DEFAULT '0',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='退货主表';

-- ----------------------------
-- Table structure for ck12_thprintlabel
-- ----------------------------
DROP TABLE IF EXISTS `ck12_thprintlabel`;
CREATE TABLE `ck12_thprintlabel` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '不良记录主表自动ID,关联表：qc_badrecord.ID',
  `Cartons` int(9) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不良记录原因明细表';

-- ----------------------------
-- Table structure for ck12_threview
-- ----------------------------
DROP TABLE IF EXISTS `ck12_threview`;
CREATE TABLE `ck12_threview` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联退货明细表,关联表：ck2_thsheet.ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商退货审核 ';

-- ----------------------------
-- Table structure for ck12_thsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck12_thsheet`;
CREATE TABLE `ck12_thsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL DEFAULT '0' COMMENT '关联退货主表,关联表：ck12_thmain.ID',
  `Bid` int(11) NOT NULL COMMENT '关联品检明细表,关联表：qc_badrecord.ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `Qty` decimal(11,2) NOT NULL COMMENT '退货数量',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Bid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='退货明细表';

-- ----------------------------
-- Table structure for ck12_thsignature
-- ----------------------------
DROP TABLE IF EXISTS `ck12_thsignature`;
CREATE TABLE `ck12_thsignature` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `BillNumber` varchar(30) NOT NULL COMMENT ',关联表：ck12_thmain.BillNumber',
  `Signature` text COMMENT '签名',
  `Operator` int(10) NOT NULL COMMENT '记录操作人,关联表：staffmain.Number',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT '2 for , 1 for unlocked',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Mid` (`Mid`) USING BTREE,
  KEY `BillNumber` (`BillNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 退货签名表';

-- ----------------------------
-- Table structure for ck13_replenish
-- ----------------------------
DROP TABLE IF EXISTS `ck13_replenish`;
CREATE TABLE `ck13_replenish` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '订单流水号',
  `sPOrderId` varchar(13) NOT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Remark` text NOT NULL COMMENT '备注说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Lid` int(11) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作日期',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Auditor` mediumint(9) DEFAULT '0',
  `AuditTime` datetime DEFAULT NULL,
  `ReturnReasons` text,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='补料表';

-- ----------------------------
-- Table structure for ck13_replenish_audit
-- ----------------------------
DROP TABLE IF EXISTS `ck13_replenish_audit`;
CREATE TABLE `ck13_replenish_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='补货审核';

-- ----------------------------
-- Table structure for ck1_rkmain
-- ----------------------------
DROP TABLE IF EXISTS `ck1_rkmain`;
CREATE TABLE `ck1_rkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(15) NOT NULL COMMENT '供应商单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  `rkDate` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `TaskId` varchar(20) DEFAULT NULL COMMENT '包装编号',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  FULLTEXT KEY `Remark` (`Remark`)
) ENGINE=InnoDB AUTO_INCREMENT=186 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库主表';

-- ----------------------------
-- Table structure for ck1_rksheet
-- ----------------------------
DROP TABLE IF EXISTS `ck1_rksheet`;
CREATE TABLE `ck1_rksheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `sPOrderId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Price` decimal(11,2) DEFAULT '0.00',
  `Qty` decimal(11,2) NOT NULL COMMENT '入库数量',
  `llQty` decimal(11,2) NOT NULL,
  `llSign` tinyint(3) NOT NULL DEFAULT '1',
  `gys_Id` int(10) DEFAULT NULL,
  `LocationId` int(10) DEFAULT '0',
  `Type` tinyint(3) NOT NULL COMMENT '入库类别：1、采购入库；2、备品转入;3、补仓入库，4、删单入库；5、车间退料入库',
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '采购单入库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `TaskId` varchar(20) DEFAULT NULL COMMENT '包装编号',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `gys_Id` (`gys_Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5822 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库明细表';

-- ----------------------------
-- Table structure for ck2_thmain
-- ----------------------------
DROP TABLE IF EXISTS `ck2_thmain`;
CREATE TABLE `ck2_thmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL COMMENT '退换单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Attached` tinyint(4) NOT NULL COMMENT '退货图片说明(jpg)',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='退货主表';

-- ----------------------------
-- Table structure for ck2_threview
-- ----------------------------
DROP TABLE IF EXISTS `ck2_threview`;
CREATE TABLE `ck2_threview` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联退货明细表,关联表：ck2_thsheet.ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商退货审核 ';

-- ----------------------------
-- Table structure for ck2_thsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck2_thsheet`;
CREATE TABLE `ck2_thsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联退货主表,关联表：ck2_thmain.ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `Qty` decimal(11,2) NOT NULL COMMENT '退货数量',
  `Remark` text NOT NULL,
  `ReturnReason` varchar(200) DEFAULT NULL,
  `Picture` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='退货明细表';

-- ----------------------------
-- Table structure for ck2_th_audit
-- ----------------------------
DROP TABLE IF EXISTS `ck2_th_audit`;
CREATE TABLE `ck2_th_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件退换审核';

-- ----------------------------
-- Table structure for ck3_bcmain
-- ----------------------------
DROP TABLE IF EXISTS `ck3_bcmain`;
CREATE TABLE `ck3_bcmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL COMMENT '补仓单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='补仓主表';

-- ----------------------------
-- Table structure for ck3_bcsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck3_bcsheet`;
CREATE TABLE `ck3_bcsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联补仓主表,关联表：ck3_bcmain._ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '补仓数量',
  `Remark` text NOT NULL,
  `RkId` int(10) NOT NULL DEFAULT '0',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `RkId` (`RkId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='补仓明细表';

-- ----------------------------
-- Table structure for ck4_ctmain
-- ----------------------------
DROP TABLE IF EXISTS `ck4_ctmain`;
CREATE TABLE `ck4_ctmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `BuyerId` mediumint(9) NOT NULL,
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ？？？？';

-- ----------------------------
-- Table structure for ck4_ctsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck4_ctsheet`;
CREATE TABLE `ck4_ctsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `StockId` varchar(14) NOT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `Qty` int(11) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ck5_llconfirm
-- ----------------------------
DROP TABLE IF EXISTS `ck5_llconfirm`;
CREATE TABLE `ck5_llconfirm` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ck5_llmain
-- ----------------------------
DROP TABLE IF EXISTS `ck5_llmain`;
CREATE TABLE `ck5_llmain` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Materieler` mediumint(9) NOT NULL COMMENT '领料人,关联表：staffmain.Number',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Time` time NOT NULL DEFAULT '00:00:00',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `created` (`created`) USING BTREE,
  KEY `Materieler` (`Materieler`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 领料主表';

-- ----------------------------
-- Table structure for ck5_llsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck5_llsheet`;
CREATE TABLE `ck5_llsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '关联仓库领料主表,关联表：ck5_llmain.ID',
  `sPOrderId` varchar(13) NOT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '关联采购单明细表',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Price` decimal(11,2) NOT NULL DEFAULT '0.00',
  `Qty` decimal(11,2) NOT NULL COMMENT '本次领料',
  `ComboxSign` tinyint(2) NOT NULL DEFAULT '0' COMMENT '子母配件标识，1为子配件',
  `Type` tinyint(4) NOT NULL DEFAULT '1' COMMENT '领料类型(1订单领料，2报废领料等,3物料退货领料，4删单领料,5车间退料，6车间补料)',
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) NOT NULL COMMENT '来自于哪种类型的领料',
  `RkId` int(10) NOT NULL DEFAULT '0' COMMENT '出库ID,ck1_rksheet ID',
  `Locks` tinyint(2) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(2) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Receiver` mediumint(9) NOT NULL DEFAULT '0' COMMENT '领料人',
  `Received` datetime DEFAULT NULL COMMENT '领料日期',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `FromId` (`FromId`) USING BTREE,
  KEY `RkId` (`RkId`) USING BTREE,
  KEY `Receiver` (`Receiver`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8939 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='领料明细表';

-- ----------------------------
-- Table structure for ck6_shremark
-- ----------------------------
DROP TABLE IF EXISTS `ck6_shremark`;
CREATE TABLE `ck6_shremark` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `ShId` int(10) NOT NULL COMMENT '供应商送货明细表,关联表：gys_shsheet.ID',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ShId` (`ShId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓管备注表';

-- ----------------------------
-- Table structure for ck7_bprk
-- ----------------------------
DROP TABLE IF EXISTS `ck7_bprk`;
CREATE TABLE `ck7_bprk` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `CompanyId` mediumint(9) NOT NULL DEFAULT '0',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Price` decimal(11,2) NOT NULL DEFAULT '0.00',
  `Remark` text NOT NULL COMMENT '备注说明',
  `RkId` int(10) NOT NULL DEFAULT '0',
  `LocationId` int(11) NOT NULL DEFAULT '0',
  `ReturnReason` varchar(200) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `LocationId` (`LocationId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='备品入库表';

-- ----------------------------
-- Table structure for ck8_bfremark
-- ----------------------------
DROP TABLE IF EXISTS `ck8_bfremark`;
CREATE TABLE `ck8_bfremark` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '供应商送货明细表,关联表：gys_shsheet.ID',
  `StuffId` mediumint(9) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓管备注表';

-- ----------------------------
-- Table structure for ck8_bfsheet
-- ----------------------------
DROP TABLE IF EXISTS `ck8_bfsheet`;
CREATE TABLE `ck8_bfsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProposerId` mediumint(9) NOT NULL COMMENT '申请人,关联表：staffmain.Number',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '报废数量',
  `LocationId` int(10) DEFAULT '0',
  `Remark` text NOT NULL,
  `Type` tinyint(4) NOT NULL DEFAULT '0' COMMENT '报废分类,关联表：ck8_bftype.ID',
  `Bill` tinyint(4) NOT NULL DEFAULT '0' COMMENT '报废单据(jpg)',
  `DealResult` text,
  `ReturnReason` varchar(200) DEFAULT NULL,
  `OutSign` tinyint(4) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='报废明细表';

-- ----------------------------
-- Table structure for ck8_bftype
-- ----------------------------
DROP TABLE IF EXISTS `ck8_bftype`;
CREATE TABLE `ck8_bftype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mainType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '主分类，报废，其它出库',
  `TypeName` varchar(30) NOT NULL COMMENT '类型名称',
  `TypeColor` varchar(7) NOT NULL COMMENT '类型颜色',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ck9_stocksheet
-- ----------------------------
DROP TABLE IF EXISTS `ck9_stocksheet`;
CREATE TABLE `ck9_stocksheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `dStockQty` decimal(11,2) NOT NULL COMMENT '初始库存',
  `tStockQty` decimal(11,2) NOT NULL COMMENT '实物库存',
  `oStockQty` decimal(11,2) NOT NULL COMMENT '订单库存',
  `mStockQty` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '最低库存',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2593 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件库存表';

-- ----------------------------
-- Table structure for ck_baskettype
-- ----------------------------
DROP TABLE IF EXISTS `ck_baskettype`;
CREATE TABLE `ck_baskettype` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `name` varchar(100) DEFAULT NULL,
  `image` text,
  `Estate` tinyint(1) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ck_bldate
-- ----------------------------
DROP TABLE IF EXISTS `ck_bldate`;
CREATE TABLE `ck_bldate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ableDate` date NOT NULL COMMENT '可备料时间',
  `unableDate` date NOT NULL COMMENT '上次可备料时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2371 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='可备料点间表（已弃用）';

-- ----------------------------
-- Table structure for ck_bldatetime
-- ----------------------------
DROP TABLE IF EXISTS `ck_bldatetime`;
CREATE TABLE `ck_bldatetime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) DEFAULT NULL,
  `sPOrderId` varchar(13) NOT NULL COMMENT '业务订单流水号',
  `ableDate` datetime NOT NULL COMMENT '可备料时间',
  `unableDate` datetime NOT NULL COMMENT '上次可备料时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓库可备料时间表';

-- ----------------------------
-- Table structure for ck_dfp_pjlq
-- ----------------------------
DROP TABLE IF EXISTS `ck_dfp_pjlq`;
CREATE TABLE `ck_dfp_pjlq` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `lqEstate` smallint(6) NOT NULL,
  `Operator` varchar(9) NOT NULL,
  `OPdatetime` varchar(20) NOT NULL,
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ck_location
-- ----------------------------
DROP TABLE IF EXISTS `ck_location`;
CREATE TABLE `ck_location` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL DEFAULT '0',
  `WorkAdd` mediumint(9) NOT NULL COMMENT '地址',
  `Floor` mediumint(6) NOT NULL COMMENT '楼层',
  `WarehouseId` int(6) NOT NULL DEFAULT '0',
  `Region` varchar(10) NOT NULL COMMENT '大区',
  `Location` varchar(10) NOT NULL COMMENT '小区',
  `ShelfSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '层架标识',
  `Identifier` varchar(30) NOT NULL COMMENT '库位标识',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Identifier` (`Identifier`) USING BTREE,
  KEY `Region` (`Region`) USING BTREE,
  KEY `WarehouseId` (`WarehouseId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓库库位表';

-- ----------------------------
-- Table structure for clientdata
-- ----------------------------
DROP TABLE IF EXISTS `clientdata`;
CREATE TABLE `clientdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL COMMENT '主/子系统标识',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Letter` varchar(1) NOT NULL,
  `Forshort` varchar(20) NOT NULL COMMENT '公司简称',
  `PayMode` tinyint(4) NOT NULL COMMENT '支付方式',
  `GysPayMode` tinyint(4) NOT NULL DEFAULT '99' COMMENT '供应商的结付方式',
  `Currency` tinyint(4) NOT NULL COMMENT '货币标识,关联表：currencydata.ID',
  `ExpNum` varchar(50) NOT NULL COMMENT '快递帐号',
  `PayType` tinyint(4) NOT NULL COMMENT '支付类型',
  `BankId` tinyint(4) NOT NULL DEFAULT '5' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `CompanySignXY` tinyint(2) NOT NULL DEFAULT '1' COMMENT '出货公司标识',
  `PriceTerm` varchar(100) NOT NULL COMMENT 'Price Term',
  `Staff_Number` mediumint(9) NOT NULL COMMENT '我公司联系人,关联表：staffmain.Number',
  `PickNumber` int(1) NOT NULL DEFAULT '7' COMMENT '标签',
  `FscNo` varchar(20) NOT NULL,
  `ProviderType` tinyint(4) NOT NULL DEFAULT '0',
  `Prepayment` tinyint(4) NOT NULL DEFAULT '0',
  `Judge` varchar(200) NOT NULL,
  `LimitTime` tinyint(4) NOT NULL DEFAULT '0',
  `PackFile` tinyint(4) NOT NULL DEFAULT '0',
  `TipsFile` tinyint(4) NOT NULL DEFAULT '0',
  `OrderBy` int(6) NOT NULL COMMENT '排序号',
  `ObjectSign` tinyint(2) NOT NULL DEFAULT '2' COMMENT '判读是客户还是供应商',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE,
  KEY `Staff_Number` (`Staff_Number`) USING BTREE,
  KEY `Currency` (`Currency`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户资料表';

-- ----------------------------
-- Table structure for clientimg
-- ----------------------------
DROP TABLE IF EXISTS `clientimg`;
CREATE TABLE `clientimg` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '公司ID',
  `Name` varchar(15) NOT NULL COMMENT '档案名称',
  `Picture` varchar(15) NOT NULL COMMENT '档案文件名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户档案存档表';

-- ----------------------------
-- Table structure for clientpaymode
-- ----------------------------
DROP TABLE IF EXISTS `clientpaymode`;
CREATE TABLE `clientpaymode` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '中文付款日期',
  `eName` varchar(200) DEFAULT NULL COMMENT '英文付款日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `days` mediumint(6) NOT NULL DEFAULT '0',
  `Keys` int(6) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户付款时间限制';

-- ----------------------------
-- Table structure for clientsub
-- ----------------------------
DROP TABLE IF EXISTS `clientsub`;
CREATE TABLE `clientsub` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL,
  `SubName` varchar(100) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户分公司表';

-- ----------------------------
-- Table structure for come_data
-- ----------------------------
DROP TABLE IF EXISTS `come_data`;
CREATE TABLE `come_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登录标示',
  `TypeId` tinyint(4) NOT NULL COMMENT '车辆类型,关联表：come_type.ID',
  `Name` varchar(30) NOT NULL COMMENT '车牌或相关信息',
  `Persons` tinyint(4) NOT NULL DEFAULT '0' COMMENT '人员',
  `ComeDate` date NOT NULL COMMENT '来访时间',
  `Remark` text COMMENT '详细说明',
  `InTime` datetime DEFAULT NULL COMMENT '进入时间',
  `InOperator` mediumint(9) NOT NULL DEFAULT '0',
  `OutTime` datetime DEFAULT NULL COMMENT '出去时间',
  `OutOperator` mediumint(9) NOT NULL DEFAULT '0',
  `CompanyId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '公司编号',
  `Mid` int(11) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `BuyAddress` (`OutTime`,`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 来访者信息';

-- ----------------------------
-- Table structure for come_type
-- ----------------------------
DROP TABLE IF EXISTS `come_type`;
CREATE TABLE `come_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '车辆类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='来访车辆类型';

-- ----------------------------
-- Table structure for companyinfo
-- ----------------------------
DROP TABLE IF EXISTS `companyinfo`;
CREATE TABLE `companyinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Type` tinyint(4) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID,关联表：CompanyID;providerdata.CompanyID',
  `Company` varchar(50) NOT NULL COMMENT '公司名称',
  `Tel` varchar(50) NOT NULL COMMENT '联系电话',
  `Fax` varchar(50) NOT NULL COMMENT '传真',
  `Area` varchar(20) NOT NULL COMMENT '区域',
  `Website` varchar(100) NOT NULL COMMENT '网址',
  `Address` varchar(200) NOT NULL COMMENT '地址',
  `ZIP` varchar(6) NOT NULL COMMENT '邮政编码',
  `Bank` text NOT NULL COMMENT '开户行',
  `BankUID` varchar(200) DEFAULT NULL,
  `BankAccounts` varchar(50) DEFAULT NULL,
  `IBAN` varchar(50) DEFAULT NULL,
  `Remark` text NOT NULL COMMENT '备注说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='公司详细信息表（客户、供应商、快递公司等共用）';

-- ----------------------------
-- Table structure for companys_group
-- ----------------------------
DROP TABLE IF EXISTS `companys_group`;
CREATE TABLE `companys_group` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Db` varchar(20) NOT NULL COMMENT '数据库名',
  `cSign` tinyint(4) NOT NULL COMMENT '登陆标示',
  `MCId` tinyint(4) NOT NULL COMMENT '研砼内部标示',
  `EShortName` varchar(50) NOT NULL COMMENT '英文简称',
  `CShortName` varchar(50) NOT NULL COMMENT '中文简称',
  `InIP` varchar(30) DEFAULT NULL COMMENT '内部ip',
  `OutIP` varchar(30) NOT NULL COMMENT '对外ip',
  `DomainName` varchar(30) NOT NULL COMMENT '对外ip和端口',
  `Level` tinyint(4) NOT NULL DEFAULT '0' COMMENT '主/子系统标识',
  `SubCompanyId` int(11) NOT NULL DEFAULT '0' COMMENT '客户Id',
  `SubMainCompanyId` int(11) NOT NULL DEFAULT '0' COMMENT '供应商Id',
  `ColorValue` varchar(7) NOT NULL COMMENT '颜色值',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `swap` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE,
  KEY `MCId` (`MCId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='内部公司分类表';

-- ----------------------------
-- Table structure for company_assets
-- ----------------------------
DROP TABLE IF EXISTS `company_assets`;
CREATE TABLE `company_assets` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL,
  `Company` varchar(50) NOT NULL COMMENT '公司名称',
  `Name` varchar(50) NOT NULL COMMENT '联系人',
  `Tel` varchar(50) NOT NULL COMMENT '电话',
  `Fax` varchar(20) NOT NULL COMMENT '传真',
  `Address` varchar(100) NOT NULL COMMENT '地址',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 公司详细资料';

-- ----------------------------
-- Table structure for countrydata
-- ----------------------------
DROP TABLE IF EXISTS `countrydata`;
CREATE TABLE `countrydata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Forshort` varchar(5) NOT NULL DEFAULT '',
  `EName` varchar(50) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `Code` varchar(255) NOT NULL DEFAULT '',
  `TimeLag` decimal(5,1) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ct_data
-- ----------------------------
DROP TABLE IF EXISTS `ct_data`;
CREATE TABLE `ct_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '店名',
  `Tel` varchar(50) NOT NULL COMMENT '电话',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 快餐店表';

-- ----------------------------
-- Table structure for ct_menu
-- ----------------------------
DROP TABLE IF EXISTS `ct_menu`;
CREATE TABLE `ct_menu` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CtId` int(11) NOT NULL COMMENT '关联店名,关联表：ct_data.ID',
  `mType` int(11) NOT NULL COMMENT '关联菜类型',
  `Name` varchar(20) NOT NULL COMMENT '菜名',
  `Price` decimal(6,2) NOT NULL COMMENT '价格',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`,`CtId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  快餐店菜单表';

-- ----------------------------
-- Table structure for ct_monthamount
-- ----------------------------
DROP TABLE IF EXISTS `ct_monthamount`;
CREATE TABLE `ct_monthamount` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '年月',
  `Number` mediumint(9) NOT NULL COMMENT '点菜人工号,关联表：staffmain.Number',
  `Amount` decimal(6,2) NOT NULL COMMENT '月消费总价格',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 月消费统计';

-- ----------------------------
-- Table structure for ct_myorder
-- ----------------------------
DROP TABLE IF EXISTS `ct_myorder`;
CREATE TABLE `ct_myorder` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联订单主表,关联表：ct_myordermain.ID',
  `CtId` int(11) NOT NULL COMMENT '关联字段',
  `MenuId` int(11) NOT NULL COMMENT '关联字段',
  `Price` decimal(6,2) NOT NULL COMMENT '价格',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Amount` decimal(6,2) NOT NULL COMMENT '总额',
  `remark` text COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 我的点菜单订';

-- ----------------------------
-- Table structure for ct_myordermain
-- ----------------------------
DROP TABLE IF EXISTS `ct_myordermain`;
CREATE TABLE `ct_myordermain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Bill` varchar(20) NOT NULL COMMENT '订单内容（图片）',
  `Remark` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 我的订单主表';

-- ----------------------------
-- Table structure for ct_type
-- ----------------------------
DROP TABLE IF EXISTS `ct_type`;
CREATE TABLE `ct_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '菜类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  菜类型';

-- ----------------------------
-- Table structure for currencydata
-- ----------------------------
DROP TABLE IF EXISTS `currencydata`;
CREATE TABLE `currencydata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PreChar` varchar(3) NOT NULL COMMENT '货币符号',
  `Name` varchar(12) NOT NULL COMMENT '货币名称',
  `Symbol` char(4) NOT NULL COMMENT '货币简写标志',
  `Rate` decimal(14,8) NOT NULL COMMENT '汇率',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Symbol` (`Symbol`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Operator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 货币信息表';

-- ----------------------------
-- Table structure for currencyrate
-- ----------------------------
DROP TABLE IF EXISTS `currencyrate`;
CREATE TABLE `currencyrate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '月份',
  `Currency` int(10) NOT NULL COMMENT '货币名称',
  `Rate` decimal(14,8) NOT NULL COMMENT '汇率',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `MonthCurrency` (`Month`,`Currency`) USING BTREE,
  KEY `Currency` (`Currency`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 货币月汇率表';

-- ----------------------------
-- Table structure for customscode
-- ----------------------------
DROP TABLE IF EXISTS `customscode`;
CREATE TABLE `customscode` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品分类',
  `HSCode` varchar(30) NOT NULL COMMENT '海关编码',
  `GoodsName` varchar(200) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='海关编码表';

-- ----------------------------
-- Table structure for cut_die
-- ----------------------------
DROP TABLE IF EXISTS `cut_die`;
CREATE TABLE `cut_die` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL,
  `StuffId` mediumint(9) NOT NULL,
  `GoodsId` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw10_samplemail
-- ----------------------------
DROP TABLE IF EXISTS `cw10_samplemail`;
CREATE TABLE `cw10_samplemail` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='寄样费用表';

-- ----------------------------
-- Table structure for cw11_jjmain
-- ----------------------------
DROP TABLE IF EXISTS `cw11_jjmain`;
CREATE TABLE `cw11_jjmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='奖全主表';

-- ----------------------------
-- Table structure for cw11_jjsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw11_jjsheet`;
CREATE TABLE `cw11_jjsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '奖金主表,关联表：cw11_jjmain.ID',
  `ItemName` varchar(20) NOT NULL COMMENT '奖金项目',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Month` varchar(7) NOT NULL COMMENT '月份',
  `MonthS` varchar(7) NOT NULL COMMENT '开始月份',
  `MonthE` varchar(7) NOT NULL COMMENT '结束月份',
  `Divisor` tinyint(4) NOT NULL COMMENT '除数(月份)',
  `JfRate` decimal(6,2) NOT NULL COMMENT '结付比率',
  `JfTime` tinyint(4) NOT NULL DEFAULT '1' COMMENT '结付时间',
  `Rate` decimal(6,2) NOT NULL COMMENT '比率参数',
  `jjAmount` decimal(8,0) NOT NULL DEFAULT '0',
  `RandP` decimal(8,2) DEFAULT '0.00',
  `Amount` decimal(8,0) NOT NULL COMMENT '本次结付金额',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='奖金明细表 ';

-- ----------------------------
-- Table structure for cw11_jjsheet_frist
-- ----------------------------
DROP TABLE IF EXISTS `cw11_jjsheet_frist`;
CREATE TABLE `cw11_jjsheet_frist` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `ItemName` varchar(20) NOT NULL COMMENT '奖金项目',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Month` varchar(7) NOT NULL COMMENT '年月',
  `MonthS` varchar(7) NOT NULL COMMENT '开始月份',
  `MonthE` varchar(7) NOT NULL COMMENT '结束月份',
  `Divisor` tinyint(4) NOT NULL COMMENT '除数(月份)',
  `Rate` decimal(6,2) NOT NULL COMMENT '比率参数',
  `Amount` decimal(8,0) NOT NULL COMMENT '总金额',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='奖金预算列表';

-- ----------------------------
-- Table structure for cw13_customsmain
-- ----------------------------
DROP TABLE IF EXISTS `cw13_customsmain`;
CREATE TABLE `cw13_customsmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `DeclarationNo` varchar(20) NOT NULL COMMENT '报关单号',
  `DeclarationEstate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '申报状态',
  `DeclarationDate` date NOT NULL COMMENT '报关日期',
  `CertificateNo` varchar(30) NOT NULL COMMENT '核销单号',
  `CertificateEstate` tinyint(4) NOT NULL DEFAULT '1' COMMENT '核实',
  `DeclarationCurrency` tinyint(4) NOT NULL DEFAULT '2' COMMENT '报关货币型,关联表：currencydata.ID',
  `DeclarationAmount` decimal(10,3) NOT NULL COMMENT '报关金额',
  `exportinvoiceNo` varchar(20) DEFAULT NULL COMMENT '出口发票',
  `exportinvoiceDate` date DEFAULT NULL COMMENT '发票日期',
  `BillNumber` varchar(20) DEFAULT NULL COMMENT '结汇凭证',
  `DeclarationFile` varchar(30) DEFAULT NULL COMMENT '报关文件',
  `CertificateFile` varchar(30) DEFAULT NULL COMMENT '核销文件',
  `exportinvoiceFile` varchar(30) DEFAULT NULL COMMENT '发票文件',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `DeclarationNo` (`DeclarationNo`) USING BTREE,
  UNIQUE KEY `CertificateNo` (`CertificateNo`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='报关出口主表';

-- ----------------------------
-- Table structure for cw13_customssheet
-- ----------------------------
DROP TABLE IF EXISTS `cw13_customssheet`;
CREATE TABLE `cw13_customssheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `DeclarationNo` varchar(20) NOT NULL COMMENT '报关单号',
  `shipmainNumber` int(10) NOT NULL COMMENT '出货主单流水号,关联表：ch1_shipmain.NO',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `shipmainNumber` (`shipmainNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='报关出口明细列表';

-- ----------------------------
-- Table structure for cw14_mdtaxfee
-- ----------------------------
DROP TABLE IF EXISTS `cw14_mdtaxfee`;
CREATE TABLE `cw14_mdtaxfee` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TaxNo` varchar(30) NOT NULL COMMENT '发票号',
  `otherfeeNumber` int(10) NOT NULL COMMENT '关联行政请款明细表,关联表：hzqksheet.ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `otherfeeNumber` (`otherfeeNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='行政费用免抵退税收益表';

-- ----------------------------
-- Table structure for cw14_mdtaxmain
-- ----------------------------
DROP TABLE IF EXISTS `cw14_mdtaxmain`;
CREATE TABLE `cw14_mdtaxmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` mediumint(6) NOT NULL DEFAULT '7',
  `TaxNo` varchar(20) NOT NULL COMMENT '免抵退税发票号',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `Taxdate` date NOT NULL COMMENT '国税时间',
  `Taxamount` decimal(10,3) NOT NULL COMMENT '免抵退税金额',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `endTax` decimal(10,3) NOT NULL COMMENT '期末留抵税额',
  `Taxgetdate` date NOT NULL COMMENT '收款日期',
  `Attached` varchar(20) NOT NULL COMMENT '发票附件',
  `Proof` varchar(20) NOT NULL COMMENT '结付凭证',
  `TaxIncome` decimal(10,3) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Remark` text NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Taxdate` (`Taxdate`) USING BTREE,
  KEY `TaxNo` (`TaxNo`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='免抵退税收益主表 ';

-- ----------------------------
-- Table structure for cw14_mdtaxsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw14_mdtaxsheet`;
CREATE TABLE `cw14_mdtaxsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TaxNo` varchar(30) NOT NULL COMMENT '免抵退税发票号',
  `shipmainNumber` int(10) NOT NULL COMMENT '出货流水号,关联表：ch1_shipmain.NO',
  `InvoiceNumber` varchar(20) NOT NULL COMMENT '出货Invoice号,关联表：ch1_shipmain.InvoiceNO',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `shipmainNumber` (`shipmainNumber`) USING BTREE,
  KEY `InvoiceNumber` (`InvoiceNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='免抵退税收益明细表 ';

-- ----------------------------
-- Table structure for cw14_mdtax_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw14_mdtax_audit`;
CREATE TABLE `cw14_mdtax_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Mid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='免抵退审核';

-- ----------------------------
-- Table structure for cw15_gyskkmain
-- ----------------------------
DROP TABLE IF EXISTS `cw15_gyskkmain`;
CREATE TABLE `cw15_gyskkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(30) NOT NULL COMMENT '扣款单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `TotalAmount` decimal(10,3) NOT NULL COMMENT '扣款总额',
  `BillFile` int(4) NOT NULL COMMENT '扣款文件(jpg)',
  `Picture` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `BillNumber` (`BillNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单扣款主表';

-- ----------------------------
-- Table structure for cw15_gyskksheet
-- ----------------------------
DROP TABLE IF EXISTS `cw15_gyskksheet`;
CREATE TABLE `cw15_gyskksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联采购单扣款主表,关联表：cw15_gyskkmain.ID',
  `PurchaseID` int(8) NOT NULL COMMENT '采购单号',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `StuffName` varchar(100) NOT NULL COMMENT '配件名称',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Remark` text NOT NULL,
  `GoodsId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '非BOM配件 模具---订单数到达一定量时，供应商必须退模具款',
  `Kid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `PurchaseID` (`PurchaseID`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单扣款明细表';

-- ----------------------------
-- Table structure for cw15_gyskk_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw15_gyskk_audit`;
CREATE TABLE `cw15_gyskk_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Mid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商扣款审核';

-- ----------------------------
-- Table structure for cw16_modelfee
-- ----------------------------
DROP TABLE IF EXISTS `cw16_modelfee`;
CREATE TABLE `cw16_modelfee` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `Moq` int(6) NOT NULL COMMENT '最低配件数量',
  `OutAmount` decimal(10,3) NOT NULL COMMENT '退回金额',
  `ItemName` varchar(100) NOT NULL COMMENT '项目名称',
  `Remark` varchar(150) NOT NULL,
  `Bill` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模具费用退回列表 ';

-- ----------------------------
-- Table structure for cw17_tjmain
-- ----------------------------
DROP TABLE IF EXISTS `cw17_tjmain`;
CREATE TABLE `cw17_tjmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工体验费用主表 ';

-- ----------------------------
-- Table structure for cw17_tjsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw17_tjsheet`;
CREATE TABLE `cw17_tjsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '员工体检费用主单,关联表：cw17_tjmain.ID',
  `tjType` tinyint(4) NOT NULL COMMENT '体检类型',
  `CheckT` int(4) NOT NULL DEFAULT '1' COMMENT '体检计数',
  `TypeId` tinyint(4) DEFAULT NULL COMMENT '体检类型',
  `CheckTimes` int(4) DEFAULT '1' COMMENT '体检计数',
  `PassId` tinyint(4) DEFAULT '1' COMMENT '合格与否',
  `CheckDate` date DEFAULT NULL COMMENT '体检日期',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Month` varchar(7) NOT NULL COMMENT '体检年月',
  `Amount` decimal(6,2) NOT NULL COMMENT '金额',
  `Remark` text NOT NULL,
  `Attached` varchar(20) NOT NULL COMMENT '体检单(jpg)',
  `HG` tinyint(4) NOT NULL DEFAULT '1' COMMENT '合格与否',
  `tjDate` date NOT NULL COMMENT '体检日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工体检费用明细表';

-- ----------------------------
-- Table structure for cw17_tj_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw17_tj_audit`;
CREATE TABLE `cw17_tj_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='体检费审核';

-- ----------------------------
-- Table structure for cw18_workhurtmain
-- ----------------------------
DROP TABLE IF EXISTS `cw18_workhurtmain`;
CREATE TABLE `cw18_workhurtmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `csign` tinyint(4) NOT NULL DEFAULT '7',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工工伤报销主表';

-- ----------------------------
-- Table structure for cw18_workhurtsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw18_workhurtsheet`;
CREATE TABLE `cw18_workhurtsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '关联员工工伤报销主单',
  `CheckT` int(4) NOT NULL DEFAULT '1' COMMENT '工伤计数',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Month` varchar(7) NOT NULL COMMENT '年月',
  `Amount` decimal(10,3) NOT NULL COMMENT '实付金额',
  `SSecurityAmout` decimal(10,3) NOT NULL COMMENT '社保金额(公)',
  `PSecurityAmout` decimal(10,3) NOT NULL COMMENT '社保金额(私)',
  `AllAmout` decimal(10,3) NOT NULL COMMENT '总金额',
  `Remark` text NOT NULL,
  `Attached` varchar(20) NOT NULL COMMENT '工伤凭证',
  `HostpitalInvoice` varchar(20) DEFAULT NULL COMMENT '医院费用凭证',
  `SSecurityInvoice` varchar(20) DEFAULT NULL COMMENT '社保凭证',
  `HurtDate` date NOT NULL COMMENT '工伤日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Operator` (`creator`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工工伤报销明细表';

-- ----------------------------
-- Table structure for cw18_workhurt_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw18_workhurt_audit`;
CREATE TABLE `cw18_workhurt_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='工伤费审核';

-- ----------------------------
-- Table structure for cw19_studyfeemain
-- ----------------------------
DROP TABLE IF EXISTS `cw19_studyfeemain`;
CREATE TABLE `cw19_studyfeemain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `PayDate` date NOT NULL,
  `PayAmount` decimal(10,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL,
  `Receipt` tinyint(4) NOT NULL,
  `Checksheet` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw19_studyfeesheet
-- ----------------------------
DROP TABLE IF EXISTS `cw19_studyfeesheet`;
CREATE TABLE `cw19_studyfeesheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL,
  `cId` int(10) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Amount` decimal(10,3) NOT NULL,
  `Remark` text NOT NULL,
  `NowSchool` int(4) NOT NULL,
  `Attached` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `cId` (`cId`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw19_studyfee_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw19_studyfee_audit`;
CREATE TABLE `cw19_studyfee_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='助学补助审核';

-- ----------------------------
-- Table structure for cw1_fkoutinvoice
-- ----------------------------
DROP TABLE IF EXISTS `cw1_fkoutinvoice`;
CREATE TABLE `cw1_fkoutinvoice` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `InvoiceNo` varchar(50) NOT NULL DEFAULT '0' COMMENT '发票编号',
  `InvoiceFile` varchar(50) NOT NULL DEFAULT '1' COMMENT '文件名称',
  `InvoiceDate` date DEFAULT NULL COMMENT '开票日期',
  `InvoiceAmount` decimal(11,2) NOT NULL DEFAULT '0.00',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商货款明细表';

-- ----------------------------
-- Table structure for cw1_fkoutmain
-- ----------------------------
DROP TABLE IF EXISTS `cw1_fkoutmain`;
CREATE TABLE `cw1_fkoutmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `djAmount` decimal(10,3) NOT NULL COMMENT '订金抵扣',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商货款主表';

-- ----------------------------
-- Table structure for cw1_fkoutsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw1_fkoutsheet`;
CREATE TABLE `cw1_fkoutsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL COMMENT '关联供应商货款主表,关联表：cw1_fkoutmain.ID',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '使用库存数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实际数量',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '总数',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Month` varchar(7) NOT NULL,
  `InvoiceId` int(9) NOT NULL DEFAULT '0',
  `AutoSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '请款操作标志',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商货款明细表';

-- ----------------------------
-- Table structure for cw1_fkout_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw1_fkout_audit`;
CREATE TABLE `cw1_fkout_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='审核';

-- ----------------------------
-- Table structure for cw1_tkoutmain
-- ----------------------------
DROP TABLE IF EXISTS `cw1_tkoutmain`;
CREATE TABLE `cw1_tkoutmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `djAmount` decimal(10,3) NOT NULL COMMENT '订金抵付',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户退款配件货款主表 ';

-- ----------------------------
-- Table structure for cw1_tkoutsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw1_tkoutsheet`;
CREATE TABLE `cw1_tkoutsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL COMMENT '关联客户退款配件货款主表,关联表：cw1_tkoutmain.ID',
  `StockId` varchar(15) NOT NULL COMMENT '采购明细表',
  `POrderId` varchar(12) NOT NULL COMMENT '出货明细表',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '业务订单数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '配件需求数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '配件库存数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实购数量',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购人,关联表：staffmain.Number',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Month` varchar(7) NOT NULL COMMENT '月份(YYYY-mm)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户退款配件货款明细表 ';

-- ----------------------------
-- Table structure for cw1_tkout_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw1_tkout_audit`;
CREATE TABLE `cw1_tkout_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户退款审核';

-- ----------------------------
-- Table structure for cw20_bonusmain
-- ----------------------------
DROP TABLE IF EXISTS `cw20_bonusmain`;
CREATE TABLE `cw20_bonusmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL COMMENT '银行账户编号,关联表：currencydata.ID',
  `PayDate` date NOT NULL COMMENT '支付时间',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL COMMENT '支付情况说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE,
  KEY `cSign_2` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其它奖金结付主表';

-- ----------------------------
-- Table structure for cw20_bonussheet
-- ----------------------------
DROP TABLE IF EXISTS `cw20_bonussheet`;
CREATE TABLE `cw20_bonussheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Mid` int(11) NOT NULL COMMENT '关联主表id,关联表：hzqkmain.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工ID',
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Content` text NOT NULL COMMENT '其它奖金内容',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '币别,关联表：currencydata.ID',
  `Bill` tinyint(4) NOT NULL COMMENT '票据',
  `ReturnReasons` text NOT NULL COMMENT '退回原因',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Auditor` mediumint(9) NOT NULL DEFAULT '0' COMMENT '审核人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间，取当前系统时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `Auditor` (`Auditor`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其它奖金子表';

-- ----------------------------
-- Table structure for cw21_housefeemain
-- ----------------------------
DROP TABLE IF EXISTS `cw21_housefeemain`;
CREATE TABLE `cw21_housefeemain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `PayDate` date NOT NULL,
  `PayAmount` decimal(10,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL,
  `Receipt` tinyint(4) NOT NULL,
  `Checksheet` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw21_housefeesheet
-- ----------------------------
DROP TABLE IF EXISTS `cw21_housefeesheet`;
CREATE TABLE `cw21_housefeesheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Amount` decimal(10,3) NOT NULL,
  `Remark` text NOT NULL,
  `Attached` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw22_investmentmain
-- ----------------------------
DROP TABLE IF EXISTS `cw22_investmentmain`;
CREATE TABLE `cw22_investmentmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `PayDate` date NOT NULL,
  `PayAmount` decimal(10,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL,
  `Receipt` tinyint(4) NOT NULL,
  `Checksheet` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cw22_investmentsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw22_investmentsheet`;
CREATE TABLE `cw22_investmentsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL,
  `Company` varchar(200) NOT NULL COMMENT '投资公司',
  `InvestName` varchar(200) NOT NULL COMMENT '投资项目',
  `Amount` decimal(9,2) NOT NULL COMMENT '金额',
  `Remark` text NOT NULL,
  `Attached` varchar(50) NOT NULL COMMENT '票据(jpg)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='长期股权投资';

-- ----------------------------
-- Table structure for cw2_fkdjmain
-- ----------------------------
DROP TABLE IF EXISTS `cw2_fkdjmain`;
CREATE TABLE `cw2_fkdjmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` tinyint(4) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商预付订金主表';

-- ----------------------------
-- Table structure for cw2_fkdjsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw2_fkdjsheet`;
CREATE TABLE `cw2_fkdjsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联供应商预付定金主表,关联表：cw2_fkdjmain.ID',
  `Did` int(11) NOT NULL COMMENT '供应商货款结付主表,关联表：cw1_fkoutmain.ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '订金分类',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `PurchaseID` int(8) DEFAULT NULL COMMENT '采购单号',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商预付订金明细表';

-- ----------------------------
-- Table structure for cw2_fkdj_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw2_fkdj_audit`;
CREATE TABLE `cw2_fkdj_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预付订金审核';

-- ----------------------------
-- Table structure for cw2_gysskmain
-- ----------------------------
DROP TABLE IF EXISTS `cw2_gysskmain`;
CREATE TABLE `cw2_gysskmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商税款主表 ';

-- ----------------------------
-- Table structure for cw2_gysskrelation
-- ----------------------------
DROP TABLE IF EXISTS `cw2_gysskrelation`;
CREATE TABLE `cw2_gysskrelation` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `nonbom6_sID` int(11) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `nonbom6_sID` (`nonbom6_sID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM表税款关联表';

-- ----------------------------
-- Table structure for cw2_gyssksheet
-- ----------------------------
DROP TABLE IF EXISTS `cw2_gyssksheet`;
CREATE TABLE `cw2_gyssksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '供应商税款主表,关联表：cw2_gysskmain.ID',
  `Forshort` varchar(50) NOT NULL COMMENT '供应商公司简称',
  `Month` varchar(7) DEFAULT NULL,
  `PayMonth` varchar(7) DEFAULT NULL COMMENT '对应结付货款月份',
  `Currency` tinyint(4) NOT NULL COMMENT '货币符号,关联表：currencydata.ID',
  `InvoiceNUM` varchar(20) NOT NULL COMMENT '发票号',
  `InvoiceFile` tinyint(4) NOT NULL COMMENT '发票文件(pdf)',
  `InvoiceCollect` tinyint(4) NOT NULL DEFAULT '1' COMMENT '发票确认',
  `Amount` decimal(10,3) NOT NULL COMMENT '税费',
  `Rate` decimal(10,3) NOT NULL COMMENT '税率',
  `Fpamount` decimal(10,3) NOT NULL COMMENT '发票金额',
  `Getdate` date NOT NULL COMMENT '发票日期',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`Forshort`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商税款明细表';

-- ----------------------------
-- Table structure for cw2_gyssk_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw2_gyssk_audit`;
CREATE TABLE `cw2_gyssk_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商税款审核';

-- ----------------------------
-- Table structure for cw2_hkmain
-- ----------------------------
DROP TABLE IF EXISTS `cw2_hkmain`;
CREATE TABLE `cw2_hkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` tinyint(4) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '收款日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '收款金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商其它扣款主单';

-- ----------------------------
-- Table structure for cw2_hksheet
-- ----------------------------
DROP TABLE IF EXISTS `cw2_hksheet`;
CREATE TABLE `cw2_hksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '供应商其它扣款主单,关联表：cw2_hkmain.ID',
  `Did` int(11) NOT NULL COMMENT '供应商货款主单,关联表：cw1_fkoutmain.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Rate` decimal(10,3) NOT NULL COMMENT '费率',
  `Attached` tinyint(4) NOT NULL DEFAULT '0' COMMENT '附件',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商其它扣款明单';

-- ----------------------------
-- Table structure for cw2_hk_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw2_hk_audit`;
CREATE TABLE `cw2_hk_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='审核';

-- ----------------------------
-- Table structure for cw3_basevalue
-- ----------------------------
DROP TABLE IF EXISTS `cw3_basevalue`;
CREATE TABLE `cw3_basevalue` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ValueCode` mediumint(9) NOT NULL COMMENT '津贴种类编号',
  `Remark` varchar(30) NOT NULL COMMENT '种类说明',
  `Value` decimal(10,3) NOT NULL COMMENT '金额',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ValueCode` (`ValueCode`) USING BTREE,
  UNIQUE KEY `Remark` (`Remark`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 员工津贴种类表';

-- ----------------------------
-- Table structure for cw3_forward
-- ----------------------------
DROP TABLE IF EXISTS `cw3_forward`;
CREATE TABLE `cw3_forward` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='Forward杂费结付表';

-- ----------------------------
-- Table structure for cw4_freight_declaration
-- ----------------------------
DROP TABLE IF EXISTS `cw4_freight_declaration`;
CREATE TABLE `cw4_freight_declaration` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `depotCharge` decimal(10,3) NOT NULL COMMENT '入仓费',
  `declarationCharge` decimal(10,3) NOT NULL COMMENT '报关费',
  `checkCharge` decimal(10,3) NOT NULL COMMENT '商检费',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='中港报关费用 ';

-- ----------------------------
-- Table structure for cw4_otherin
-- ----------------------------
DROP TABLE IF EXISTS `cw4_otherin`;
CREATE TABLE `cw4_otherin` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '其它收入分类,关联表：cw4_otherintype.ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '货币类别,关联表：currencydata.ID',
  `Bill` tinyint(4) NOT NULL COMMENT '凭证',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Auditor` mediumint(9) NOT NULL DEFAULT '0',
  `ReturnReasons` text,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`Date`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Currency` (`Currency`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其它收入表';

-- ----------------------------
-- Table structure for cw4_otherinmain
-- ----------------------------
DROP TABLE IF EXISTS `cw4_otherinmain`;
CREATE TABLE `cw4_otherinmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` tinyint(4) NOT NULL,
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其他收入主表';

-- ----------------------------
-- Table structure for cw4_otherinsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw4_otherinsheet`;
CREATE TABLE `cw4_otherinsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联其它收入主表,关联表：cw4_otherinmain.ID',
  `Month` varchar(7) DEFAULT NULL,
  `TypeId` tinyint(4) NOT NULL COMMENT '其它收入分类,关联表：cw4_otherintype.ID',
  `getmoneyNO` varchar(40) NOT NULL COMMENT '收款单号',
  `Amount` decimal(10,3) NOT NULL COMMENT '收款金额',
  `Currency` tinyint(4) NOT NULL COMMENT '货币类型,关联表：currencydata.ID',
  `payDate` date NOT NULL COMMENT '收款日期',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `InvoiceNO` (`getmoneyNO`) USING BTREE,
  KEY `Date` (`payDate`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其他收入明细表';

-- ----------------------------
-- Table structure for cw4_otherintype
-- ----------------------------
DROP TABLE IF EXISTS `cw4_otherintype`;
CREATE TABLE `cw4_otherintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `hzID` smallint(6) NOT NULL COMMENT '对应行政分类编号',
  `Name` varchar(30) NOT NULL COMMENT '收入名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 其他收入类型';

-- ----------------------------
-- Table structure for cw4_otherin_audit
-- ----------------------------
DROP TABLE IF EXISTS `cw4_otherin_audit`;
CREATE TABLE `cw4_otherin_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其他收入审核';

-- ----------------------------
-- Table structure for cw5_customsfbdh
-- ----------------------------
DROP TABLE IF EXISTS `cw5_customsfbdh`;
CREATE TABLE `cw5_customsfbdh` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(20) NOT NULL COMMENT '结汇凭证',
  `CertificateNo` varchar(20) NOT NULL COMMENT '核销单号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CertificateNo` (`CertificateNo`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='报关出口明细列表 ';

-- ----------------------------
-- Table structure for cw5_fbdh
-- ----------------------------
DROP TABLE IF EXISTS `cw5_fbdh`;
CREATE TABLE `cw5_fbdh` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PayDate` date NOT NULL COMMENT '汇兑日期',
  `OutBankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '汇出银行,关联表：my2_bankinfo.ID',
  `OutCurrency` tinyint(4) NOT NULL COMMENT '汇率',
  `OutAmount` decimal(10,3) NOT NULL COMMENT '汇出金额',
  `Rate` decimal(12,9) NOT NULL COMMENT '费率',
  `InBankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '汇入银行,关联表：my2_bankinfo.ID',
  `InCurrency` tinyint(4) NOT NULL COMMENT '货币类型',
  `InAmount` decimal(10,3) NOT NULL COMMENT '汇入金额',
  `BillNumber` varchar(30) NOT NULL COMMENT '结汇凭证',
  `Bill` tinyint(4) NOT NULL COMMENT '是否有文件(jpg)',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BillNumber` (`BillNumber`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='货币汇兑记录表';

-- ----------------------------
-- Table structure for cw6_advancesreceived
-- ----------------------------
DROP TABLE IF EXISTS `cw6_advancesreceived`;
CREATE TABLE `cw6_advancesreceived` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) DEFAULT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `Mid` int(11) NOT NULL COMMENT '关联预收货款主表,关联表：cw6_orderinmain.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '预收金额',
  `Remark` text NOT NULL,
  `PayDate` date NOT NULL COMMENT '时间',
  `Attached` varchar(20) NOT NULL COMMENT '附件(jpg)',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预收货款列表';

-- ----------------------------
-- Table structure for cw6_orderinmain
-- ----------------------------
DROP TABLE IF EXISTS `cw6_orderinmain`;
CREATE TABLE `cw6_orderinmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '银行ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `PreAmount` decimal(10,3) NOT NULL COMMENT '抵预付款金额',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '实收金额',
  `Handingfee` decimal(10,3) NOT NULL COMMENT '手续费',
  `Remark` text NOT NULL,
  `PayDate` date NOT NULL COMMENT '结付日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户订单收款主表';

-- ----------------------------
-- Table structure for cw6_orderinsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw6_orderinsheet`;
CREATE TABLE `cw6_orderinsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '主表ID,关联表：cw6_orderinmain.w6_orderinmain_ID',
  `chId` int(11) NOT NULL COMMENT '出货主表ID,关联表：ch1_shipmain.ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '收款金额',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户订单收款明细表';

-- ----------------------------
-- Table structure for cw9_expsheet
-- ----------------------------
DROP TABLE IF EXISTS `cw9_expsheet`;
CREATE TABLE `cw9_expsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '付款日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '金额',
  `Payee` tinyint(4) NOT NULL COMMENT '回执',
  `Receipt` tinyint(4) NOT NULL COMMENT '对账单',
  `Checksheet` tinyint(4) NOT NULL COMMENT '核实单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='快递费用结付表';

-- ----------------------------
-- Table structure for cwdyfmain
-- ----------------------------
DROP TABLE IF EXISTS `cwdyfmain`;
CREATE TABLE `cwdyfmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行账户ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '付款日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '付款总额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='开发费用主表 ';

-- ----------------------------
-- Table structure for cwdyfsheet
-- ----------------------------
DROP TABLE IF EXISTS `cwdyfsheet`;
CREATE TABLE `cwdyfsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Mid` int(11) NOT NULL COMMENT '关联开发费用主表,关联表：cwdyfmain.ID',
  `ItemId` int(11) NOT NULL COMMENT '项目ID',
  `ItemName` varchar(50) DEFAULT NULL COMMENT '项目名称',
  `CompanyId` mediumint(9) DEFAULT NULL,
  `TypeID` tinyint(4) NOT NULL DEFAULT '13' COMMENT '开项目类别,关联表：kftypedata.ID',
  `ModelDetail` varchar(60) NOT NULL,
  `Description` text NOT NULL COMMENT '详细描述',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `OutAmount` decimal(10,3) NOT NULL COMMENT '退回金额',
  `Currency` tinyint(4) NOT NULL DEFAULT '1' COMMENT '货币符号,关联表：currencydata.ID',
  `Remark` text NOT NULL,
  `Provider` varchar(30) NOT NULL COMMENT '供应商',
  `Bill` tinyint(4) NOT NULL COMMENT '开发单据',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='开发费用明细表';

-- ----------------------------
-- Table structure for cwxzmain
-- ----------------------------
DROP TABLE IF EXISTS `cwxzmain`;
CREATE TABLE `cwxzmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '支付银行卡ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '支付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='薪资总表 ';

-- ----------------------------
-- Table structure for cwxzsheet
-- ----------------------------
DROP TABLE IF EXISTS `cwxzsheet`;
CREATE TABLE `cwxzsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` int(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '关联薪资主表,关联表：cwxzmain.ID',
  `Currency` tinyint(4) NOT NULL DEFAULT '1' COMMENT '币别,关联表：currencydata.ID',
  `Month` varchar(7) NOT NULL COMMENT '月份(YYYY-mm)',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `GroupId` smallint(6) NOT NULL COMMENT '小组ID',
  `Grade` tinyint(4) NOT NULL COMMENT '员工等级,关联表：gradedata.ID',
  `KqSign` tinyint(4) NOT NULL COMMENT '考勤标志',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Dx` decimal(10,3) NOT NULL COMMENT '底薪',
  `Commision` decimal(10,3) DEFAULT '0.000' COMMENT '提成',
  `Gljt` decimal(10,3) NOT NULL COMMENT '工龄津贴',
  `Gwjt` decimal(10,3) NOT NULL COMMENT '岗位津贴',
  `Jj` decimal(10,3) NOT NULL COMMENT '奖金',
  `Shbz` decimal(10,3) NOT NULL COMMENT '生活补助',
  `Zsbz` decimal(10,3) NOT NULL COMMENT '住宿补助',
  `Jtbz` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '交通补助',
  `Studybz` decimal(10,3) DEFAULT '0.000' COMMENT '助学补助',
  `Housebz` decimal(10,3) DEFAULT '0.000' COMMENT '购房补助',
  `OtherSubsidy` decimal(10,3) DEFAULT '0.000' COMMENT '其它补助',
  `Jbf` decimal(10,3) NOT NULL COMMENT '加班费',
  `Jbjj` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '加班奖金',
  `Ywjj` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Yxbz` decimal(10,3) NOT NULL COMMENT '夜宵补助',
  `taxbz` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '税费补助',
  `Jz` decimal(10,3) NOT NULL COMMENT '借支扣款',
  `Sb` decimal(10,3) NOT NULL COMMENT '社保扣款',
  `Gjj` decimal(10,3) NOT NULL COMMENT '公积金扣款',
  `Ct` decimal(10,3) NOT NULL COMMENT '餐费扣款',
  `Kqkk` decimal(10,3) NOT NULL COMMENT '旷工扣款',
  `dkfl` decimal(10,3) NOT NULL COMMENT '津贴扣款',
  `RandP` decimal(10,0) NOT NULL COMMENT '个税扣款',
  `HouseDebit` decimal(10,3) DEFAULT '0.000' COMMENT '房租扣款',
  `WaterElectricDebit` decimal(10,3) DEFAULT '0.000' COMMENT '水电扣款',
  `Otherkk` decimal(10,3) NOT NULL COMMENT '其它扣款',
  `Amount` decimal(10,0) NOT NULL,
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='薪资明细表 ';

-- ----------------------------
-- Table structure for cwxz_bonus
-- ----------------------------
DROP TABLE IF EXISTS `cwxz_bonus`;
CREATE TABLE `cwxz_bonus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Month` varchar(8) NOT NULL,
  `Number` mediumint(9) NOT NULL COMMENT '员工ID',
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Content` text NOT NULL COMMENT '其它奖金内容',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '币别,关联表：currencydata.ID',
  `Bill` tinyint(4) NOT NULL COMMENT '票据',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Auditor` mediumint(9) NOT NULL DEFAULT '0' COMMENT '审核人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间，取当前系统时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Auditor` (`Auditor`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其它奖金登记表';

-- ----------------------------
-- Table structure for cwxz_remark
-- ----------------------------
DROP TABLE IF EXISTS `cwxz_remark`;
CREATE TABLE `cwxz_remark` (
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Remark` text NOT NULL COMMENT '详细说明'
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for cwygjz
-- ----------------------------
DROP TABLE IF EXISTS `cwygjz`;
CREATE TABLE `cwygjz` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) DEFAULT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行账号ID,关联表：my2_bankinfo.ID',
  `Mid` int(11) NOT NULL COMMENT '关联薪资明细表,关联表：cwxzsheet.ID',
  `PayDate` date NOT NULL COMMENT '付款时间',
  `InDate` date NOT NULL COMMENT '还款日期',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Payee` tinyint(4) NOT NULL COMMENT '借据',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工借支列表';

-- ----------------------------
-- Table structure for cw_advanced
-- ----------------------------
DROP TABLE IF EXISTS `cw_advanced`;
CREATE TABLE `cw_advanced` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Teller` mediumint(9) NOT NULL COMMENT '取款人,关联表：staffmain.Number',
  `BankId` int(11) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '货币符号,关联表：currencydata.ID',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预结付取款明细 ';

-- ----------------------------
-- Table structure for cw_operation
-- ----------------------------
DROP TABLE IF EXISTS `cw_operation`;
CREATE TABLE `cw_operation` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL COMMENT '操作记录',
  `Rec_ID` varchar(250) NOT NULL COMMENT '数据更新ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='财务操作记录表';

-- ----------------------------
-- Table structure for dealerdata
-- ----------------------------
DROP TABLE IF EXISTS `dealerdata`;
CREATE TABLE `dealerdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '公司编号',
  `Forshort` varchar(20) NOT NULL COMMENT '公司简称',
  `Currency` tinyint(4) NOT NULL COMMENT '结付货币',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 经销商及其它公司资料';

-- ----------------------------
-- Table structure for deliverydate
-- ----------------------------
DROP TABLE IF EXISTS `deliverydate`;
CREATE TABLE `deliverydate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `DeliveryDate` date NOT NULL DEFAULT '0000-00-00',
  `DeliveryWeek` mediumint(6) NOT NULL DEFAULT '0',
  `Remark` text COMMENT '内容说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `DateTime` datetime NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `DeliveryDate` (`DeliveryDate`) USING BTREE,
  KEY `DateTime` (`DateTime`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单交期表';

-- ----------------------------
-- Table structure for development
-- ----------------------------
DROP TABLE IF EXISTS `development`;
CREATE TABLE `development` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '项目编号',
  `ItemName` varchar(50) NOT NULL COMMENT '项目名称',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Qty` int(10) NOT NULL COMMENT '数量',
  `Content` text NOT NULL COMMENT '内容',
  `Plan` text NOT NULL COMMENT '开发进度',
  `Attached` varchar(20) NOT NULL COMMENT '产品效果图',
  `Gfile` varchar(20) NOT NULL COMMENT 'AI图档',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `sFrom` tinyint(4) NOT NULL COMMENT '开发审核',
  `StartDate` date NOT NULL COMMENT '开始时间',
  `EndDate` date NOT NULL COMMENT '结束时间',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Developer` varchar(8) NOT NULL COMMENT '开发者,关联表：staffmain.Number',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='打样产品表';

-- ----------------------------
-- Table structure for developsheet
-- ----------------------------
DROP TABLE IF EXISTS `developsheet`;
CREATE TABLE `developsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '关联打样主表',
  `StuffCname` varchar(100) NOT NULL COMMENT '配件名',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `TypeId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件类型',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Relation` varchar(15) NOT NULL COMMENT '对应数量比例',
  `Diecut` varchar(10) DEFAULT NULL COMMENT '刀模编号',
  `Cutrelation` tinyint(4) DEFAULT '0' COMMENT '刀模对应数量比例',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购人员,关联表：staffmain.Number',
  `CompanyId` mediumint(9) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='打样产品的配件关联表';

-- ----------------------------
-- Table structure for dimissiondata
-- ----------------------------
DROP TABLE IF EXISTS `dimissiondata`;
CREATE TABLE `dimissiondata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `outDate` date NOT NULL COMMENT '离职时间',
  `Type` tinyint(4) DEFAULT NULL COMMENT '员工类型',
  `Reason` text NOT NULL COMMENT '离职原因',
  `LeaveType` tinyint(4) NOT NULL COMMENT '离职类型',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` int(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Check` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `outDate` (`outDate`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Operator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 离职资料表';

-- ----------------------------
-- Table structure for dimissiongl
-- ----------------------------
DROP TABLE IF EXISTS `dimissiongl`;
CREATE TABLE `dimissiongl` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `outDate` date NOT NULL COMMENT '离职时间',
  `BackDate` date NOT NULL COMMENT '再入职时间',
  `delGL` tinyint(4) NOT NULL COMMENT '工龄（月）',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `outDate` (`outDate`) USING BTREE,
  KEY `BackDate` (`BackDate`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 扣除工龄表';

-- ----------------------------
-- Table structure for dimissiontype
-- ----------------------------
DROP TABLE IF EXISTS `dimissiontype`;
CREATE TABLE `dimissiontype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='离职类型表';

-- ----------------------------
-- Table structure for disablecheckid
-- ----------------------------
DROP TABLE IF EXISTS `disablecheckid`;
CREATE TABLE `disablecheckid` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `checkId` varchar(10) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `checkId` (`checkId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for doc1_technical
-- ----------------------------
DROP TABLE IF EXISTS `doc1_technical`;
CREATE TABLE `doc1_technical` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Title` text NOT NULL COMMENT '报错信息主题',
  `Content` text NOT NULL COMMENT '详细内容',
  `Type` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报错文档表';

-- ----------------------------
-- Table structure for doc1_type
-- ----------------------------
DROP TABLE IF EXISTS `doc1_type`;
CREATE TABLE `doc1_type` (
  `Id` tinyint(4) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '类型名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 出错类型';

-- ----------------------------
-- Table structure for doc_standarddrawing
-- ----------------------------
DROP TABLE IF EXISTS `doc_standarddrawing`;
CREATE TABLE `doc_standarddrawing` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `FileType` int(11) NOT NULL COMMENT '图分类,关联表：doc_type.ID',
  `FileRemark` varchar(100) NOT NULL COMMENT '内容',
  `FileName` varchar(30) NOT NULL COMMENT '文件名',
  `CompanyId` int(10) NOT NULL COMMENT '客户ID',
  `ProductType` int(11) NOT NULL COMMENT '产品类型,关联表：productdata.TypeId',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductType` (`ProductType`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5808 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='标准图图档表';

-- ----------------------------
-- Table structure for doc_stuffdrawing
-- ----------------------------
DROP TABLE IF EXISTS `doc_stuffdrawing`;
CREATE TABLE `doc_stuffdrawing` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `FileType` int(11) NOT NULL,
  `FileRemark` varchar(100) NOT NULL,
  `FileName` varchar(30) NOT NULL,
  `CompanyId` int(10) NOT NULL,
  `StuffType` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件图档类型表(未用)';

-- ----------------------------
-- Table structure for doc_type
-- ----------------------------
DROP TABLE IF EXISTS `doc_type`;
CREATE TABLE `doc_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL COMMENT '名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品、配件图类型';

-- ----------------------------
-- Table structure for dsrc_door
-- ----------------------------
DROP TABLE IF EXISTS `dsrc_door`;
CREATE TABLE `dsrc_door` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Address` varchar(20) NOT NULL COMMENT '地址',
  `Name` varchar(20) NOT NULL COMMENT '位置',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='粤通卡门';

-- ----------------------------
-- Table structure for dsrc_list
-- ----------------------------
DROP TABLE IF EXISTS `dsrc_list`;
CREATE TABLE `dsrc_list` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CardNumber` varchar(16) NOT NULL COMMENT '粤通卡号',
  `CarNum` varchar(10) NOT NULL COMMENT '车牌',
  `CardHolder` varchar(20) NOT NULL COMMENT '持卡人',
  `Type` tinyint(2) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CardNumber` (`CardNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='粤通卡号表';

-- ----------------------------
-- Table structure for dsrc_queue
-- ----------------------------
DROP TABLE IF EXISTS `dsrc_queue`;
CREATE TABLE `dsrc_queue` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CardNumber` varchar(12) NOT NULL COMMENT '粤通卡号',
  `CheckTime` datetime NOT NULL COMMENT '刷卡时间',
  `Door` int(11) NOT NULL COMMENT '门号,关联表：dsrc_door.ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='粤通卡号刷卡表';

-- ----------------------------
-- Table structure for education
-- ----------------------------
DROP TABLE IF EXISTS `education`;
CREATE TABLE `education` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL COMMENT '中文首字母',
  `Name` varchar(20) NOT NULL COMMENT '名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 学历等级表';

-- ----------------------------
-- Table structure for epfdata
-- ----------------------------
DROP TABLE IF EXISTS `epfdata`;
CREATE TABLE `epfdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `Type` tinyint(4) NOT NULL DEFAULT '1' COMMENT '公积金类型,关联表：d0.rs_sbtype',
  `Month` varchar(7) DEFAULT NULL,
  `Base` decimal(6,2) DEFAULT '0.00' COMMENT '缴存基数',
  `cProportion` decimal(6,2) DEFAULT '0.00' COMMENT '单位比例',
  `mProportion` decimal(6,2) DEFAULT '0.00' COMMENT '个人比例',
  `Money` decimal(6,2) DEFAULT '0.00' COMMENT '月缴存额',
  `sMonth` varchar(7) DEFAULT '' COMMENT '开始年月',
  `eMonth` varchar(7) DEFAULT '' COMMENT '结束年月',
  `Note` varchar(200) DEFAULT '' COMMENT '详细说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for errorcasedata
-- ----------------------------
DROP TABLE IF EXISTS `errorcasedata`;
CREATE TABLE `errorcasedata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Type` int(11) NOT NULL COMMENT '出错案例类别,关联表：errorcasetype.ID',
  `Title` text NOT NULL COMMENT '内容',
  `Picture` text NOT NULL COMMENT '案例图(jpg)',
  `Owner` text NOT NULL COMMENT '相关人员',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `ReadState` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出错案例表';

-- ----------------------------
-- Table structure for errorcasetype
-- ----------------------------
DROP TABLE IF EXISTS `errorcasetype`;
CREATE TABLE `errorcasetype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '报告类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报告类型表';

-- ----------------------------
-- Table structure for event_recordsheet
-- ----------------------------
DROP TABLE IF EXISTS `event_recordsheet`;
CREATE TABLE `event_recordsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `EventId` mediumint(9) NOT NULL,
  `EndTime` datetime DEFAULT NULL,
  `FileNames` text,
  `Record` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `ModifyTimes` int(11) DEFAULT '0',
  `ShareWith` text,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='-- 行事历会议记录iphoneAPP使用';

-- ----------------------------
-- Table structure for event_sheet
-- ----------------------------
DROP TABLE IF EXISTS `event_sheet`;
CREATE TABLE `event_sheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` varchar(500) NOT NULL,
  `EventType` tinyint(4) NOT NULL,
  `DateTime` datetime NOT NULL,
  `Notified` tinyint(1) NOT NULL DEFAULT '0',
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `Target` varchar(5000) NOT NULL DEFAULT 'all',
  `Place` varchar(200) DEFAULT '',
  `NotifyTime` smallint(6) NOT NULL DEFAULT '15',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for event_type
-- ----------------------------
DROP TABLE IF EXISTS `event_type`;
CREATE TABLE `event_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='事件类型';

-- ----------------------------
-- Table structure for faxdata
-- ----------------------------
DROP TABLE IF EXISTS `faxdata`;
CREATE TABLE `faxdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `InDateTime` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `FileName` varchar(100) NOT NULL COMMENT '关联文档',
  `Claimer` varchar(8) NOT NULL COMMENT '传真接收人',
  `ClaimDate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `Sign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '主题标记',
  `Title` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `FileName` (`FileName`) USING BTREE,
  KEY `Claimer` (`Claimer`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='未处理传真列表';

-- ----------------------------
-- Table structure for file_codeandlable
-- ----------------------------
DROP TABLE IF EXISTS `file_codeandlable`;
CREATE TABLE `file_codeandlable` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `CodeType` tinyint(4) NOT NULL COMMENT '所属分类',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `CodeType` (`CodeType`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='条码标签文件表';

-- ----------------------------
-- Table structure for fixed_assetsdata
-- ----------------------------
DROP TABLE IF EXISTS `fixed_assetsdata`;
CREATE TABLE `fixed_assetsdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登陆标示,关联表：companys_group.cSign',
  `CpName` varchar(20) DEFAULT NULL COMMENT '资产类型',
  `TypeId` tinyint(4) NOT NULL,
  `Sign` tinyint(4) NOT NULL DEFAULT '1',
  `Qty` tinyint(4) NOT NULL DEFAULT '1' COMMENT '数量',
  `price` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '价格',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司名称',
  `Model` varchar(50) NOT NULL COMMENT '设备名称-型号',
  `SSNumber` varchar(20) NOT NULL COMMENT '条码',
  `BuyDate` date NOT NULL COMMENT '购买日期',
  `ServiceLife` decimal(3,1) NOT NULL COMMENT '服务编号',
  `MTCycle` int(4) NOT NULL DEFAULT '365',
  `Warranty` tinyint(4) NOT NULL COMMENT '保修期',
  `BranchId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '使用什么部门号购买',
  `BuycSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '使用什么公司购买',
  `Buyer` varchar(20) NOT NULL COMMENT '购买人',
  `Remark` text NOT NULL COMMENT '备注',
  `Attached` varchar(20) NOT NULL COMMENT '附件',
  `Retiredate` date DEFAULT '0000-00-00',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `BuycSign` (`BuycSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 公司固定资产清单';

-- ----------------------------
-- Table structure for fixed_file
-- ----------------------------
DROP TABLE IF EXISTS `fixed_file`;
CREATE TABLE `fixed_file` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `FileName` varchar(50) NOT NULL COMMENT '文件名（图片）',
  `Type` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for fixed_m_check
-- ----------------------------
DROP TABLE IF EXISTS `fixed_m_check`;
CREATE TABLE `fixed_m_check` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登陆公司标示,关联表：companys_group.cSign',
  `FixedID` int(10) NOT NULL,
  `DaysID` int(10) NOT NULL COMMENT '检查周期编号',
  `Days` int(5) NOT NULL DEFAULT '365' COMMENT '检查时间',
  `CycleDate` date NOT NULL COMMENT '解决日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for fixed_m_main
-- ----------------------------
DROP TABLE IF EXISTS `fixed_m_main`;
CREATE TABLE `fixed_m_main` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登陆标示,关联表：companys_group.cSign',
  `FixedID` int(10) NOT NULL COMMENT '修理编号',
  `DaysID` int(10) NOT NULL COMMENT '检查周期编号',
  `Days` int(5) NOT NULL DEFAULT '365' COMMENT '检查时间',
  `CycleDate` date NOT NULL COMMENT '解决日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for fixed_m_sheet
-- ----------------------------
DROP TABLE IF EXISTS `fixed_m_sheet`;
CREATE TABLE `fixed_m_sheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `MID` int(10) NOT NULL,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登陆标示,关联表：companys_group.cSign',
  `maitainID` int(10) NOT NULL COMMENT '维护编号',
  `Question` varchar(300) DEFAULT NULL COMMENT '问题',
  `Solution` text COMMENT '解决办法',
  `CycleDate` date NOT NULL COMMENT '解决日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for fixed_userdata
-- ----------------------------
DROP TABLE IF EXISTS `fixed_userdata`;
CREATE TABLE `fixed_userdata` (
  `ID` int(11) NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '登陆标示,关联表：companys_group.cSign',
  `User` varchar(20) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `MID` int(10) unsigned NOT NULL DEFAULT '0',
  `SDate` date NOT NULL,
  `UserType` tinyint(1) NOT NULL COMMENT '修理人类型',
  `Remark` text,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`ID`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for fixturetool
-- ----------------------------
DROP TABLE IF EXISTS `fixturetool`;
CREATE TABLE `fixturetool` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ToolsId` int(6) NOT NULL,
  `GoodsId` int(11) NOT NULL,
  `ToolsName` varchar(50) NOT NULL,
  `ToolsCode` varchar(13) NOT NULL,
  `UseTimes` smallint(6) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Remark` varchar(50) DEFAULT NULL,
  `Picture` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `PLocks` tinyint(4) NOT NULL DEFAULT '0',
  `creator` int(10) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ToolsId` (`ToolsId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='治工具资料表';

-- ----------------------------
-- Table structure for formula_fob
-- ----------------------------
DROP TABLE IF EXISTS `formula_fob`;
CREATE TABLE `formula_fob` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Boxs` smallint(6) NOT NULL COMMENT '计算箱数',
  `UnitYf` decimal(10,3) NOT NULL COMMENT '运费单价',
  `UnitZf` decimal(10,3) NOT NULL COMMENT '杂费单价',
  `Gdzf` decimal(10,3) NOT NULL COMMENT '固定杂费',
  `Rcf` decimal(10,3) NOT NULL COMMENT '入仓费',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' FOB计算器参数资料表';

-- ----------------------------
-- Table structure for forwardcharge
-- ----------------------------
DROP TABLE IF EXISTS `forwardcharge`;
CREATE TABLE `forwardcharge` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司编号',
  `CFSCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT 'CFS费',
  `THCCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT 'THC费',
  `WJCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '文件费',
  `SXCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '手续费',
  `ENSCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT 'ENS费',
  `BXCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '保险费',
  `GQCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '过桥费',
  `DFCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '电放费',
  `TDCharge` decimal(11,3) NOT NULL DEFAULT '0.000' COMMENT '提单费',
  `Type` tinyint(4) NOT NULL COMMENT '空运还是海运',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='forward 默认标准收费表';

-- ----------------------------
-- Table structure for forwarddata
-- ----------------------------
DROP TABLE IF EXISTS `forwarddata`;
CREATE TABLE `forwarddata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Forshort` varchar(50) NOT NULL COMMENT '公司简称',
  `Model` int(11) NOT NULL DEFAULT '0',
  `Currency` tinyint(4) NOT NULL COMMENT '结付货币,关联表：currencydata.ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='forward公司主表';

-- ----------------------------
-- Table structure for freightdata
-- ----------------------------
DROP TABLE IF EXISTS `freightdata`;
CREATE TABLE `freightdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司编号',
  `Forshort` varchar(20) NOT NULL COMMENT '公司简称',
  `Model` tinyint(4) NOT NULL DEFAULT '0',
  `Currency` tinyint(4) NOT NULL COMMENT '付款货币',
  `MType` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 物流信息表';

-- ----------------------------
-- Table structure for freightdatatype
-- ----------------------------
DROP TABLE IF EXISTS `freightdatatype`;
CREATE TABLE `freightdatatype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT '0',
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='货运公司分类';

-- ----------------------------
-- Table structure for funmodule
-- ----------------------------
DROP TABLE IF EXISTS `funmodule`;
CREATE TABLE `funmodule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL COMMENT '登陆标记,关联表：companys_group.cSign',
  `ModuleId` mediumint(9) NOT NULL COMMENT '模块id',
  `ModuleName` varchar(30) NOT NULL COMMENT '模块名称',
  `Parameter` varchar(100) NOT NULL COMMENT '参数',
  `KeyWebPage` varchar(100) NOT NULL COMMENT '主要页面',
  `TypeId` tinyint(4) NOT NULL COMMENT '类型编号,关联表：funmoduletype.ID',
  `OrderId` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `icon` varchar(255) NOT NULL DEFAULT '',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=787 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for funmoduletype
-- ----------------------------
DROP TABLE IF EXISTS `funmoduletype`;
CREATE TABLE `funmoduletype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '功能类型ID',
  `Name` varchar(30) NOT NULL COMMENT '功能类型名称',
  `Color` varchar(7) NOT NULL COMMENT '功能类型颜色',
  `level` tinyint(3) unsigned NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 功能模块类型';

-- ----------------------------
-- Table structure for gradedata
-- ----------------------------
DROP TABLE IF EXISTS `gradedata`;
CREATE TABLE `gradedata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `JobId` smallint(6) NOT NULL,
  `Low` tinyint(4) NOT NULL COMMENT '最低等级',
  `Hight` tinyint(4) NOT NULL COMMENT '最高等级',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 职位等级范围';

-- ----------------------------
-- Table structure for gradesubsidy
-- ----------------------------
DROP TABLE IF EXISTS `gradesubsidy`;
CREATE TABLE `gradesubsidy` (
  `Id` int(20) unsigned NOT NULL AUTO_INCREMENT,
  `Grade` tinyint(4) NOT NULL COMMENT '等级',
  `Subsidy` decimal(6,2) NOT NULL COMMENT '别名',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Grade` (`Grade`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 奖金和工龄对照表';

-- ----------------------------
-- Table structure for gys_shback
-- ----------------------------
DROP TABLE IF EXISTS `gys_shback`;
CREATE TABLE `gys_shback` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BillNumber` varchar(15) NOT NULL COMMENT '送货单号',
  `sPOrderId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `SendDate` date NOT NULL COMMENT '送货日期',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` int(10) NOT NULL COMMENT '数量',
  `remark` text NOT NULL COMMENT '退回情况说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商送货单退回表';

-- ----------------------------
-- Table structure for gys_shdate
-- ----------------------------
DROP TABLE IF EXISTS `gys_shdate`;
CREATE TABLE `gys_shdate` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Sid` int(11) NOT NULL COMMENT '送货单Id,关联表：gys_shsheet.ID',
  `shDate` datetime NOT NULL COMMENT '收货时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Sid` (`Sid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=314 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商送货单审核通过表';

-- ----------------------------
-- Table structure for gys_shmain
-- ----------------------------
DROP TABLE IF EXISTS `gys_shmain`;
CREATE TABLE `gys_shmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(12) NOT NULL COMMENT '自动生成的送货单号',
  `GysNumber` varchar(20) DEFAULT NULL COMMENT '供应商送货单',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL,
  `Floor` int(1) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=188 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商送货主表';

-- ----------------------------
-- Table structure for gys_shremark
-- ----------------------------
DROP TABLE IF EXISTS `gys_shremark`;
CREATE TABLE `gys_shremark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Sid` int(11) NOT NULL COMMENT '采购流水号',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购备注表';

-- ----------------------------
-- Table structure for gys_shsheet
-- ----------------------------
DROP TABLE IF EXISTS `gys_shsheet`;
CREATE TABLE `gys_shsheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '供应商送货主表,关联表：gys_shmain.ID',
  `sPOrderId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号,关联表：cg1_stocksheet.StockId',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID,关联表：stuffdata.StuffId',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `SendSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '送货标识',
  `shDate` datetime DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5843 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商送货明细表';

-- ----------------------------
-- Table structure for hdjbmain
-- ----------------------------
DROP TABLE IF EXISTS `hdjbmain`;
CREATE TABLE `hdjbmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行账号ID,关联表：currencydata.ID',
  `PayDate` date NOT NULL COMMENT '支付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总金额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL COMMENT '支付款项说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE,
  KEY `cSign_2` (`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='假日加班结付主表';

-- ----------------------------
-- Table structure for hdjbsheet
-- ----------------------------
DROP TABLE IF EXISTS `hdjbsheet`;
CREATE TABLE `hdjbsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '假日加班主表,关联表：hdjbmain.ID',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门编号,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位编号,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Month` varchar(7) NOT NULL COMMENT '月份',
  `oHours` decimal(4,1) NOT NULL DEFAULT '0.0',
  `oWage` decimal(5,2) NOT NULL DEFAULT '0.00',
  `xHours` decimal(4,1) NOT NULL COMMENT '2倍工时',
  `xWage` decimal(5,2) NOT NULL COMMENT '2倍时薪',
  `fHours` decimal(4,1) NOT NULL COMMENT '3倍工时',
  `fWage` decimal(5,2) NOT NULL COMMENT '3倍时薪',
  `oRandP` decimal(10,0) NOT NULL DEFAULT '0',
  `Amount` decimal(4,0) NOT NULL COMMENT '总金额',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 假日加班明细表';

-- ----------------------------
-- Table structure for hzqkmain
-- ----------------------------
DROP TABLE IF EXISTS `hzqkmain`;
CREATE TABLE `hzqkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL COMMENT '银行账户编号,关联表：currencydata.ID',
  `PayDate` date NOT NULL COMMENT '支付时间',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL COMMENT '支付情况说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 行政请款结付主表';

-- ----------------------------
-- Table structure for hzqksheet
-- ----------------------------
DROP TABLE IF EXISTS `hzqksheet`;
CREATE TABLE `hzqksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BillNumber` int(10) NOT NULL DEFAULT '0',
  `Mid` int(11) NOT NULL COMMENT '关联主表id,关联表：hzqkmain.ID',
  `Content` text NOT NULL COMMENT '请款内容',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Currency` tinyint(4) NOT NULL COMMENT '币别,关联表：currencydata.ID',
  `Bill` tinyint(4) NOT NULL COMMENT '票据',
  `ReturnReasons` text NOT NULL COMMENT '退回原因',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `TypeId` mediumint(9) NOT NULL COMMENT '款项类别,关联表：d0.adminitype',
  `OtherId` int(10) NOT NULL DEFAULT '0',
  `Property` tinyint(4) NOT NULL DEFAULT '0' COMMENT '款项类型',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Auditor` mediumint(9) NOT NULL DEFAULT '0' COMMENT '审核人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间，取当前系统时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `OtherId` (`OtherId`) USING BTREE,
  KEY `Currency` (`Currency`) USING BTREE,
  KEY `Operator` (`creator`) USING BTREE,
  KEY `Auditor` (`Auditor`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 行政请款结付明细表';

-- ----------------------------
-- Table structure for hzqk_audit
-- ----------------------------
DROP TABLE IF EXISTS `hzqk_audit`;
CREATE TABLE `hzqk_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='行政费用审核';

-- ----------------------------
-- Table structure for info1_business
-- ----------------------------
DROP TABLE IF EXISTS `info1_business`;
CREATE TABLE `info1_business` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Businesser` int(11) NOT NULL,
  `StartTime` datetime NOT NULL,
  `EndTime` datetime NOT NULL,
  `CarId` smallint(6) DEFAULT NULL,
  `Drivers` mediumint(9) DEFAULT NULL,
  `Remark` text,
  `Duration` decimal(6,1) DEFAULT NULL,
  `CheckJobId` int(10) DEFAULT NULL,
  `sCourses` int(11) NOT NULL,
  `eCourses` int(11) NOT NULL,
  `Checker` int(10) DEFAULT NULL COMMENT '审核人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Businesser` (`Businesser`,`StartTime`,`EndTime`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for info2_telmsg
-- ----------------------------
DROP TABLE IF EXISTS `info2_telmsg`;
CREATE TABLE `info2_telmsg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for info3_gmmsg
-- ----------------------------
DROP TABLE IF EXISTS `info3_gmmsg`;
CREATE TABLE `info3_gmmsg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` text NOT NULL COMMENT '留言内容',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Days` tinyint(4) NOT NULL COMMENT '保留天数',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 经理留言表';

-- ----------------------------
-- Table structure for info4_cgmsg
-- ----------------------------
DROP TABLE IF EXISTS `info4_cgmsg`;
CREATE TABLE `info4_cgmsg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` text NOT NULL COMMENT '内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `CompanyId` varchar(8) NOT NULL COMMENT '供应商公司Id',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for it_mac
-- ----------------------------
DROP TABLE IF EXISTS `it_mac`;
CREATE TABLE `it_mac` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Num` int(10) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `IPad` varchar(20) NOT NULL,
  `IPhone` varchar(20) NOT NULL,
  `Mac` varchar(20) NOT NULL,
  `PC` varchar(20) NOT NULL,
  `Other` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  菜类型';

-- ----------------------------
-- Table structure for it_workitem
-- ----------------------------
DROP TABLE IF EXISTS `it_workitem`;
CREATE TABLE `it_workitem` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemName` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for it_worktask
-- ----------------------------
DROP TABLE IF EXISTS `it_worktask`;
CREATE TABLE `it_worktask` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TaskDate` date NOT NULL,
  `TaskType` tinyint(4) NOT NULL,
  `TaskLevel` tinyint(4) NOT NULL,
  `TaskContent` text NOT NULL,
  `Sponsor` varchar(10) NOT NULL,
  `Handled` mediumint(9) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text NOT NULL,
  `BonusS` decimal(8,2) NOT NULL,
  `BonusH` decimal(8,2) NOT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for it_worktype
-- ----------------------------
DROP TABLE IF EXISTS `it_worktype`;
CREATE TABLE `it_worktype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for jobdata
-- ----------------------------
DROP TABLE IF EXISTS `jobdata`;
CREATE TABLE `jobdata` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `WorkNote` text NOT NULL,
  `WorkTime` text NOT NULL,
  `SortId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '排序',
  `pId` int(11) DEFAULT '0' COMMENT '上级职务',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=108 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='职位表';

-- ----------------------------
-- Table structure for jobmanager
-- ----------------------------
DROP TABLE IF EXISTS `jobmanager`;
CREATE TABLE `jobmanager` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：d0.jobdata_id',
  `LeaderNumber` mediumint(9) NOT NULL COMMENT '上司工号,关联表：staffmain.Number',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='领导职位表';

-- ----------------------------
-- Table structure for jobtitle
-- ----------------------------
DROP TABLE IF EXISTS `jobtitle`;
CREATE TABLE `jobtitle` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `SortId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '排序',
  `Color` varchar(7) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kftypedata
-- ----------------------------
DROP TABLE IF EXISTS `kftypedata`;
CREATE TABLE `kftypedata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL,
  `Name` varchar(40) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqchangedate
-- ----------------------------
DROP TABLE IF EXISTS `kqchangedate`;
CREATE TABLE `kqchangedate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `jbTimes` tinyint(4) NOT NULL COMMENT '工作时间',
  `Type` tinyint(4) NOT NULL,
  `Sign` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表 ';

-- ----------------------------
-- Table structure for kqdata
-- ----------------------------
DROP TABLE IF EXISTS `kqdata`;
CREATE TABLE `kqdata` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL DEFAULT '0' COMMENT '员工号,关联表：staffmain.Number',
  `Dhours` float NOT NULL DEFAULT '0' COMMENT '应到工时',
  `Whours` float NOT NULL DEFAULT '0' COMMENT '实到工时',
  `Ghours` float NOT NULL DEFAULT '0' COMMENT '加班工时',
  `GOverTime` float NOT NULL DEFAULT '0' COMMENT '超规工时',
  `GDropTime` float NOT NULL DEFAULT '0' COMMENT '直落工时',
  `Xhours` float NOT NULL DEFAULT '0' COMMENT '标准工时',
  `XOverTime` float NOT NULL DEFAULT '0' COMMENT '超规工时',
  `XDropTime` float NOT NULL DEFAULT '0' COMMENT '直落工时',
  `Fhours` float NOT NULL DEFAULT '0' COMMENT '标准工时',
  `FOverTime` float NOT NULL DEFAULT '0' COMMENT '超规工时',
  `FDropTime` float NOT NULL DEFAULT '0' COMMENT '直落工时',
  `InLates` int(11) NOT NULL DEFAULT '0' COMMENT '迟到分钟',
  `OutEarlys` int(11) NOT NULL DEFAULT '0' COMMENT '早退分钟',
  `SJhours` float NOT NULL DEFAULT '0' COMMENT '事假工时',
  `SJhours1` float NOT NULL DEFAULT '0' COMMENT '淡季请事假工时',
  `BJhours` float NOT NULL DEFAULT '0' COMMENT '病假工时',
  `YXJhours` float NOT NULL DEFAULT '0' COMMENT '年休假工时',
  `WXJhours` float NOT NULL DEFAULT '0' COMMENT '无薪假工时',
  `QQhours` float NOT NULL DEFAULT '0' COMMENT '缺勤工时',
  `YBs` tinyint(4) NOT NULL DEFAULT '0' COMMENT '夜班数',
  `WXhours` float NOT NULL DEFAULT '0' COMMENT '无薪工时',
  `KGhours` float NOT NULL DEFAULT '0' COMMENT '旷工工时',
  `dkhours` float NOT NULL DEFAULT '0' COMMENT '扣补助工时',
  `Month` varchar(7) NOT NULL COMMENT '考勤月份',
  `Score` tinyint(4) DEFAULT '100',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `ConfirmSign` int(1) NOT NULL DEFAULT '1' COMMENT '?????',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤月统计表';

-- ----------------------------
-- Table structure for kqdataother
-- ----------------------------
DROP TABLE IF EXISTS `kqdataother`;
CREATE TABLE `kqdataother` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL DEFAULT '0',
  `Dhours` float NOT NULL DEFAULT '0',
  `Whours` float NOT NULL DEFAULT '0',
  `Ghours` float NOT NULL DEFAULT '0',
  `GOverTime` float NOT NULL DEFAULT '0',
  `GDropTime` float NOT NULL DEFAULT '0',
  `Xhours` float NOT NULL DEFAULT '0',
  `XOverTime` float NOT NULL DEFAULT '0',
  `XDropTime` float NOT NULL DEFAULT '0',
  `Fhours` float NOT NULL DEFAULT '0',
  `FOverTime` float NOT NULL DEFAULT '0',
  `FDropTime` float NOT NULL DEFAULT '0',
  `InLates` tinyint(4) NOT NULL DEFAULT '0',
  `OutEarlys` tinyint(4) NOT NULL DEFAULT '0',
  `SJhours` float NOT NULL DEFAULT '0',
  `BJhours` float NOT NULL DEFAULT '0',
  `YXJhours` float NOT NULL DEFAULT '0',
  `WXJhours` float NOT NULL DEFAULT '0',
  `QQhours` float NOT NULL DEFAULT '0',
  `YBs` tinyint(4) NOT NULL DEFAULT '0',
  `WXhours` float NOT NULL DEFAULT '0',
  `KGhours` float NOT NULL DEFAULT '0',
  `dkhours` float NOT NULL DEFAULT '0',
  `Month` varchar(7) NOT NULL DEFAULT '',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `ConfirmSign` int(1) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表:验厂时使用';

-- ----------------------------
-- Table structure for kqdaytemptj
-- ----------------------------
DROP TABLE IF EXISTS `kqdaytemptj`;
CREATE TABLE `kqdaytemptj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GroupId` int(10) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `SdTime` decimal(3,1) NOT NULL,
  `JbTime` decimal(3,1) NOT NULL,
  `JbTime2` decimal(3,1) NOT NULL,
  `JbTime3` decimal(3,1) NOT NULL,
  `Ybs` int(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for kqdaytj
-- ----------------------------
DROP TABLE IF EXISTS `kqdaytj`;
CREATE TABLE `kqdaytj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GroupId` int(10) NOT NULL COMMENT '小组ID,关联表：d0.staffgroup',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `SdTime` decimal(3,1) NOT NULL COMMENT '实到工时',
  `JbTime` decimal(3,1) NOT NULL COMMENT '加班工时',
  `JbTime2` decimal(3,1) NOT NULL COMMENT '2倍工时',
  `JbTime3` decimal(3,1) NOT NULL COMMENT '3倍工时',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤日统计表';

-- ----------------------------
-- Table structure for kqholiday
-- ----------------------------
DROP TABLE IF EXISTS `kqholiday`;
CREATE TABLE `kqholiday` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `jbTimes` tinyint(4) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Sign` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqlspbb
-- ----------------------------
DROP TABLE IF EXISTS `kqlspbb`;
CREATE TABLE `kqlspbb` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `InTime` datetime NOT NULL COMMENT '临时签到时间',
  `OutTime` datetime NOT NULL COMMENT '临时签退时间',
  `InLate` smallint(6) NOT NULL COMMENT '计迟到时间(分钟)',
  `OutEarly` smallint(6) NOT NULL COMMENT '计早退时间(分钟)',
  `TimeType` tinyint(4) NOT NULL COMMENT '加班类别',
  `RestTime` smallint(6) NOT NULL COMMENT '中间休息时间',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='临时班次设定 ';

-- ----------------------------
-- Table structure for kqovertime
-- ----------------------------
DROP TABLE IF EXISTS `kqovertime`;
CREATE TABLE `kqovertime` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `otDate` date NOT NULL COMMENT '日期',
  `workday` decimal(2,1) NOT NULL DEFAULT '0.0' COMMENT '1倍工时',
  `weekday` decimal(2,1) NOT NULL DEFAULT '0.0' COMMENT '2倍工时',
  `holiday` decimal(2,1) NOT NULL DEFAULT '0.0' COMMENT '3倍工时',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `otDate` (`otDate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=90 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqqjsheet
-- ----------------------------
DROP TABLE IF EXISTS `kqqjsheet`;
CREATE TABLE `kqqjsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL,
  `StartDate` datetime NOT NULL,
  `EndDate` datetime NOT NULL,
  `Reason` text,
  `Proof` tinyint(4) DEFAULT NULL,
  `Type` tinyint(4) NOT NULL,
  `bcType` tinyint(4) DEFAULT NULL,
  `Duration` decimal(6,1) DEFAULT NULL,
  `CheckJobId` int(10) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Opdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Checker` int(11) DEFAULT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqqj_audit
-- ----------------------------
DROP TABLE IF EXISTS `kqqj_audit`;
CREATE TABLE `kqqj_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqrqdd
-- ----------------------------
DROP TABLE IF EXISTS `kqrqdd`;
CREATE TABLE `kqrqdd` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `GDate` date NOT NULL COMMENT '工作日',
  `XDate` date NOT NULL COMMENT '休息日',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `GDate` (`GDate`) USING BTREE,
  KEY `XDate` (`XDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 上班日期对调表';

-- ----------------------------
-- Table structure for kqrqdd_pt
-- ----------------------------
DROP TABLE IF EXISTS `kqrqdd_pt`;
CREATE TABLE `kqrqdd_pt` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `GDate` date NOT NULL,
  `XDate` date NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `GDate` (`GDate`) USING BTREE,
  KEY `XDate` (`XDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqrtj
-- ----------------------------
DROP TABLE IF EXISTS `kqrtj`;
CREATE TABLE `kqrtj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `YdTime` decimal(3,1) NOT NULL COMMENT '应到工时',
  `SdTime` decimal(3,1) NOT NULL COMMENT '实到工时',
  `JbTime` decimal(3,1) NOT NULL COMMENT '1.5倍工时',
  `JbTime2` decimal(3,1) NOT NULL COMMENT '2倍工时',
  `JbTime3` decimal(3,1) NOT NULL COMMENT '3倍工时',
  `InLates` tinyint(4) NOT NULL COMMENT '迟到工时',
  `OutEarlys` tinyint(4) NOT NULL COMMENT '早退工时',
  `SJhours` decimal(3,1) NOT NULL COMMENT '请、休假工时',
  `BJhours` decimal(3,1) NOT NULL COMMENT '病假工时',
  `YXJhours` decimal(3,1) NOT NULL COMMENT '年休假工时',
  `WXJhours` decimal(3,1) NOT NULL COMMENT '无薪工时',
  `QQhours` decimal(3,1) NOT NULL COMMENT '缺勤工时',
  `YBs` tinyint(4) NOT NULL COMMENT '夜班次数',
  `KGhours` decimal(3,1) NOT NULL COMMENT '旷工工时',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤日统计表';

-- ----------------------------
-- Table structure for kqtempdata
-- ----------------------------
DROP TABLE IF EXISTS `kqtempdata`;
CREATE TABLE `kqtempdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Ahours` float NOT NULL,
  `Bhours` float NOT NULL,
  `Chours` float NOT NULL,
  `Dhours` float NOT NULL,
  `YBs` tinyint(4) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表:临时工考勤月统计表';

-- ----------------------------
-- Table structure for kqtype
-- ----------------------------
DROP TABLE IF EXISTS `kqtype`;
CREATE TABLE `kqtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT '0',
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kqzltime
-- ----------------------------
DROP TABLE IF EXISTS `kqzltime`;
CREATE TABLE `kqzltime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `Stime` varchar(5) NOT NULL DEFAULT '',
  `Etime` varchar(5) NOT NULL DEFAULT '',
  `Hours` float NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kq_ddsheet
-- ----------------------------
DROP TABLE IF EXISTS `kq_ddsheet`;
CREATE TABLE `kq_ddsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ddItem` int(11) NOT NULL,
  `Number` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for kq_office
-- ----------------------------
DROP TABLE IF EXISTS `kq_office`;
CREATE TABLE `kq_office` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL COMMENT '部门编号',
  `JobId` smallint(6) NOT NULL COMMENT '职位编号,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `CheckTime` datetime NOT NULL COMMENT '考勤时间',
  `CheckType` char(1) NOT NULL COMMENT '上下班标志',
  `dFrom` varchar(50) NOT NULL COMMENT '考勤记录源',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `ZlSign` tinyint(4) NOT NULL COMMENT '直落标志',
  `KrSign` tinyint(4) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `CheckTime` (`CheckTime`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='固定工资员工考勤考勤记录';

-- ----------------------------
-- Table structure for kq_officenum
-- ----------------------------
DROP TABLE IF EXISTS `kq_officenum`;
CREATE TABLE `kq_officenum` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `SortId` int(6) NOT NULL COMMENT '随机序号',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='固定工资员工考勤每天顺序设定表';

-- ----------------------------
-- Table structure for kq_office_data
-- ----------------------------
DROP TABLE IF EXISTS `kq_office_data`;
CREATE TABLE `kq_office_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL DEFAULT '0' COMMENT '员工号,关联表：staffmain.Number',
  `Dhours` float NOT NULL DEFAULT '0' COMMENT '应到工时',
  `Whours` float NOT NULL DEFAULT '0' COMMENT '实到工时',
  `Ghours` float NOT NULL DEFAULT '0' COMMENT '加班工时',
  `InLates` tinyint(4) NOT NULL DEFAULT '0' COMMENT '退到工时',
  `OutEarlys` tinyint(4) NOT NULL DEFAULT '0' COMMENT '早退工时',
  `SJhours` float NOT NULL DEFAULT '0' COMMENT '事假工时',
  `BJhours` float NOT NULL DEFAULT '0' COMMENT '病假工时',
  `YXJhours` float NOT NULL COMMENT '年休假工时',
  `WXJhours` float NOT NULL DEFAULT '0' COMMENT '无薪假工时',
  `QQhours` float NOT NULL DEFAULT '0' COMMENT '缺勤工时',
  `YBs` tinyint(4) NOT NULL DEFAULT '0' COMMENT '夜班次数',
  `WXhours` float NOT NULL DEFAULT '0' COMMENT '无薪工时',
  `KGhours` float NOT NULL DEFAULT '0' COMMENT '旷工工时',
  `dkhours` float NOT NULL COMMENT '扣补助工时',
  `Month` varchar(7) NOT NULL COMMENT '考勤月份',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `ConfirmSign` int(1) NOT NULL DEFAULT '1' COMMENT '确认标记',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='固定工资员工考勤月统计表';

-- ----------------------------
-- Table structure for kq_rqddnew
-- ----------------------------
DROP TABLE IF EXISTS `kq_rqddnew`;
CREATE TABLE `kq_rqddnew` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `GDate` varchar(11) NOT NULL DEFAULT '',
  `GTime` varchar(11) NOT NULL,
  `XDate` varchar(11) DEFAULT NULL,
  `XTime` varchar(11) DEFAULT NULL,
  `Estate` tinyint(3) unsigned DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='新的工作日对调';

-- ----------------------------
-- Table structure for labelprintformatter
-- ----------------------------
DROP TABLE IF EXISTS `labelprintformatter`;
CREATE TABLE `labelprintformatter` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) DEFAULT NULL,
  `ClientId` varchar(50) NOT NULL,
  `Parameters` text,
  `Value` text,
  `qrFormat` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for linkmandata
-- ----------------------------
DROP TABLE IF EXISTS `linkmandata`;
CREATE TABLE `linkmandata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Name` varchar(20) NOT NULL COMMENT '联系人名字',
  `Sex` tinyint(4) NOT NULL COMMENT '性别',
  `Nickname` varchar(20) NOT NULL COMMENT '别名',
  `Headship` varchar(30) NOT NULL COMMENT '职位称呼',
  `Mobile` varchar(20) NOT NULL COMMENT '移动电话',
  `Tel` varchar(50) NOT NULL COMMENT '座机电话',
  `MSN` varchar(200) NOT NULL COMMENT 'msn邮箱',
  `SKYPE` varchar(40) NOT NULL,
  `Email` varchar(50) NOT NULL COMMENT '邮箱',
  `Remark` text NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Defaults` tinyint(4) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1001542 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 联系人资料表';

-- ----------------------------
-- Table structure for loginlog
-- ----------------------------
DROP TABLE IF EXISTS `loginlog`;
CREATE TABLE `loginlog` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uId` int(11) NOT NULL COMMENT '用户ID,关联表：usertable.ID',
  `uType` tinyint(4) NOT NULL COMMENT '用户类型',
  `uName` varchar(50) NOT NULL COMMENT '用户名',
  `uFrom` tinyint(4) NOT NULL DEFAULT '1' COMMENT '内外网标志',
  `uIP` varchar(50) NOT NULL COMMENT '用户ip',
  `sTime` datetime NOT NULL COMMENT '开始时间',
  `eTime` datetime NOT NULL COMMENT '结束时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `uId` (`uId`) USING BTREE,
  KEY `uType` (`uType`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1638 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='用户登录记录表';

-- ----------------------------
-- Table structure for logocuppy
-- ----------------------------
DROP TABLE IF EXISTS `logocuppy`;
CREATE TABLE `logocuppy` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `SqlText` text NOT NULL COMMENT '执行的sql语句',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????????????';

-- ----------------------------
-- Table structure for lw_checkinout
-- ----------------------------
DROP TABLE IF EXISTS `lw_checkinout`;
CREATE TABLE `lw_checkinout` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID,关联表：jobdata.ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmian.NO',
  `CheckTime` datetime NOT NULL COMMENT '考勤时间',
  `CheckType` char(1) NOT NULL COMMENT '上下班标识',
  `dFrom` varchar(50) NOT NULL DEFAULT '' COMMENT '打卡楼层,关联表:attendance_floor',
  `dFromId` tinyint(2) NOT NULL DEFAULT '0' COMMENT '打卡楼层Id,关联表:attendanceipadsheet',
  `ZlSign` tinyint(4) NOT NULL COMMENT '直落标志',
  `KrSign` tinyint(4) NOT NULL COMMENT '跨日标志',
  `otReason` varchar(100) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '创建人',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL COMMENT '修改人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `CheckTime` (`CheckTime`) USING BTREE
) ENGINE=MyISAM DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='正式员工考勤记录表';

-- ----------------------------
-- Table structure for lw_company
-- ----------------------------
DROP TABLE IF EXISTS `lw_company`;
CREATE TABLE `lw_company` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID,关联表：CompanyID;providerdata.CompanyID',
  `Company` varchar(100) NOT NULL COMMENT '公司名称',
  `Forshort` varchar(50) NOT NULL,
  `LinkMan` varchar(20) NOT NULL,
  `Tel` varchar(50) NOT NULL COMMENT '联系电话',
  `Address` varchar(200) NOT NULL COMMENT '区域',
  `Bank` varchar(50) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Company` (`Company`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='劳务公司';

-- ----------------------------
-- Table structure for lw_dimissiondata
-- ----------------------------
DROP TABLE IF EXISTS `lw_dimissiondata`;
CREATE TABLE `lw_dimissiondata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `outDate` date NOT NULL COMMENT '离职时间',
  `Type` tinyint(4) DEFAULT NULL COMMENT '员工类型',
  `Reason` text NOT NULL COMMENT '离职原因',
  `LeaveType` tinyint(4) NOT NULL COMMENT '离职类型',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `outDate` (`outDate`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Operator` (`creator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 离职资料表';

-- ----------------------------
-- Table structure for lw_kqdata
-- ----------------------------
DROP TABLE IF EXISTS `lw_kqdata`;
CREATE TABLE `lw_kqdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL DEFAULT '0' COMMENT '员工号,关联表：staffmain.Number',
  `Whours` float NOT NULL DEFAULT '0' COMMENT '实到工时',
  `Month` varchar(7) NOT NULL COMMENT '考勤月份',
  `ConfirmSign` int(1) NOT NULL DEFAULT '1' COMMENT '?????',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤月统计表';

-- ----------------------------
-- Table structure for lw_kqdaytj
-- ----------------------------
DROP TABLE IF EXISTS `lw_kqdaytj`;
CREATE TABLE `lw_kqdaytj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GroupId` int(10) NOT NULL COMMENT '小组ID,关联表：d0.staffgroup',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `SdTime` decimal(3,1) NOT NULL COMMENT '实到工时',
  `JbTime` decimal(3,1) NOT NULL COMMENT '加班工时',
  `JbTime2` decimal(3,1) NOT NULL COMMENT '2倍工时',
  `JbTime3` decimal(3,1) NOT NULL COMMENT '3倍工时',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤日统计表';

-- ----------------------------
-- Table structure for lw_staffmain
-- ----------------------------
DROP TABLE IF EXISTS `lw_staffmain`;
CREATE TABLE `lw_staffmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '劳务公司',
  `WorkAdd` tinyint(4) NOT NULL DEFAULT '3' COMMENT '工作地点',
  `Number` mediumint(9) NOT NULL,
  `IdNum` varchar(10) NOT NULL,
  `Name` varchar(8) NOT NULL DEFAULT '',
  `Nickname` varchar(50) NOT NULL,
  `KqSign` tinyint(4) NOT NULL,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `GroupId` int(11) NOT NULL DEFAULT '0',
  `ComeIn` date NOT NULL,
  `AttendanceFloor` tinyint(4) DEFAULT NULL COMMENT '考勤楼层',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE,
  KEY `BJN` (`BranchId`,`JobId`,`Number`) USING BTREE,
  KEY `Estate` (`Estate`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `WorkAdd` (`WorkAdd`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for lw_staffsheet
-- ----------------------------
DROP TABLE IF EXISTS `lw_staffsheet`;
CREATE TABLE `lw_staffsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录行号',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号',
  `Sex` tinyint(4) NOT NULL COMMENT '性别',
  `Nation` tinyint(4) NOT NULL COMMENT '民族',
  `Rpr` tinyint(4) NOT NULL,
  `Education` tinyint(4) NOT NULL,
  `Married` tinyint(4) NOT NULL,
  `Birthday` date NOT NULL,
  `Photo` tinyint(4) NOT NULL,
  `IdcardPhoto` tinyint(4) NOT NULL,
  `HealthPhoto` tinyint(4) NOT NULL,
  `Idcard` varchar(18) NOT NULL DEFAULT '',
  `Address` varchar(150) NOT NULL DEFAULT '',
  `Tel` varchar(30) NOT NULL DEFAULT '',
  `eMail` varchar(50) NOT NULL,
  `Mobile` varchar(16) NOT NULL DEFAULT '',
  `Weixin` varchar(50) NOT NULL,
  `Bank` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Rpr` (`Rpr`) USING BTREE,
  KEY `Nation` (`Nation`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for modelfeestuff
-- ----------------------------
DROP TABLE IF EXISTS `modelfeestuff`;
CREATE TABLE `modelfeestuff` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `mId` int(10) NOT NULL COMMENT '关联模具费用退回自动ID,关联表：cw16_modelfee.ID',
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `mId` (`mId`) USING BTREE,
  KEY `StuffId_2` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件模具记录表';

-- ----------------------------
-- Table structure for modulenexus
-- ----------------------------
DROP TABLE IF EXISTS `modulenexus`;
CREATE TABLE `modulenexus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ModuleId` mediumint(9) NOT NULL,
  `dModuleId` mediumint(9) NOT NULL,
  `OrderId` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE,
  KEY `dModuleId` (`dModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=611 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='功能模块关系表';

-- ----------------------------
-- Table structure for msg1_bulletin
-- ----------------------------
DROP TABLE IF EXISTS `msg1_bulletin`;
CREATE TABLE `msg1_bulletin` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Title` varchar(60) NOT NULL,
  `Content` text NOT NULL,
  `Type` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `SMSTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for msg1_picture
-- ----------------------------
DROP TABLE IF EXISTS `msg1_picture`;
CREATE TABLE `msg1_picture` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `Picture` varchar(60) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for msg2_overtime
-- ----------------------------
DROP TABLE IF EXISTS `msg2_overtime`;
CREATE TABLE `msg2_overtime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Content` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for msg3_notice
-- ----------------------------
DROP TABLE IF EXISTS `msg3_notice`;
CREATE TABLE `msg3_notice` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Content` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `SMSTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for msg4_remind
-- ----------------------------
DROP TABLE IF EXISTS `msg4_remind`;
CREATE TABLE `msg4_remind` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `Content` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for msg5_question
-- ----------------------------
DROP TABLE IF EXISTS `msg5_question`;
CREATE TABLE `msg5_question` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Type` char(1) NOT NULL,
  `Content` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `State` int(11) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `State` (`State`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for my1_companyinfo
-- ----------------------------
DROP TABLE IF EXISTS `my1_companyinfo`;
CREATE TABLE `my1_companyinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Type` char(1) NOT NULL COMMENT '类型',
  `Company` text NOT NULL COMMENT '公司全名称',
  `Forshort` varchar(100) NOT NULL COMMENT '简称',
  `Tel` varchar(20) NOT NULL COMMENT '电话',
  `Fax` varchar(20) NOT NULL COMMENT '传真',
  `Address` varchar(100) NOT NULL COMMENT '地址',
  `ZIP` varchar(6) NOT NULL COMMENT '邮编',
  `WebSite` varchar(50) NOT NULL COMMENT '网址',
  `LinkMan` varchar(20) NOT NULL COMMENT '联系人',
  `Mobile` varchar(20) NOT NULL COMMENT '移动电话',
  `Email` varchar(50) NOT NULL COMMENT '邮箱',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='公司信息表';

-- ----------------------------
-- Table structure for my2_bankinfo
-- ----------------------------
DROP TABLE IF EXISTS `my2_bankinfo`;
CREATE TABLE `my2_bankinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Title` varchar(20) NOT NULL,
  `ShortTitle` varchar(10) DEFAULT NULL,
  `Currency` tinyint(4) NOT NULL DEFAULT '0',
  `Beneficary` varchar(60) NOT NULL,
  `Bank` text NOT NULL,
  `BankAdd` text NOT NULL,
  `SwiftID` varchar(50) NOT NULL,
  `ACNO` varchar(50) NOT NULL,
  `CnapsCode` varchar(255) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='公司银行信息表';

-- ----------------------------
-- Table structure for my3_exadd
-- ----------------------------
DROP TABLE IF EXISTS `my3_exadd`;
CREATE TABLE `my3_exadd` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `Company` varchar(50) NOT NULL,
  `PayerNo` varchar(30) NOT NULL,
  `Address` text NOT NULL,
  `ZIP` varchar(10) NOT NULL,
  `Country` varchar(20) NOT NULL,
  `Tel` varchar(50) NOT NULL,
  `Mobile` varchar(20) NOT NULL,
  `Email` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for my3_express
-- ----------------------------
DROP TABLE IF EXISTS `my3_express`;
CREATE TABLE `my3_express` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `SendDate` date NOT NULL,
  `BillNumber` varchar(50) NOT NULL,
  `Shipper` mediumint(9) NOT NULL,
  `Receiver` mediumint(9) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `expressType` tinyint(4) NOT NULL DEFAULT '1',
  `ShipType` tinyint(4) NOT NULL,
  `PayType` tinyint(4) NOT NULL,
  `PayerNo` varchar(20) NOT NULL,
  `Contents` text NOT NULL,
  `SendContent` text NOT NULL,
  `Pieces` int(11) NOT NULL,
  `Length` smallint(6) NOT NULL,
  `Width` smallint(6) NOT NULL,
  `Height` smallint(6) NOT NULL,
  `cWeight` decimal(5,1) NOT NULL,
  `dWeight` decimal(5,1) NOT NULL,
  `Amount` decimal(8,2) NOT NULL,
  `CFSAmount` decimal(10,3) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `HandledBy` mediumint(9) NOT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for my3_expresstype
-- ----------------------------
DROP TABLE IF EXISTS `my3_expresstype`;
CREATE TABLE `my3_expresstype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Opertor` mediumint(9) NOT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nationdata
-- ----------------------------
DROP TABLE IF EXISTS `nationdata`;
CREATE TABLE `nationdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=59 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net2_sbwh
-- ----------------------------
DROP TABLE IF EXISTS `net2_sbwh`;
CREATE TABLE `net2_sbwh` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `LinkAdd` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_cpbylaw
-- ----------------------------
DROP TABLE IF EXISTS `net_cpbylaw`;
CREATE TABLE `net_cpbylaw` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Type` tinyint(1) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_cpcheckdiary
-- ----------------------------
DROP TABLE IF EXISTS `net_cpcheckdiary`;
CREATE TABLE `net_cpcheckdiary` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `hdId` int(11) NOT NULL,
  `Remark` text NOT NULL,
  `Opinion` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_cpdata
-- ----------------------------
DROP TABLE IF EXISTS `net_cpdata`;
CREATE TABLE `net_cpdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CpName` varchar(20) NOT NULL,
  `TypeId` tinyint(4) NOT NULL,
  `IpAddress` varchar(20) NOT NULL,
  `MacAddress` varchar(20) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `Model` varchar(50) NOT NULL,
  `SSNumber` varchar(20) NOT NULL,
  `BuyDate` date NOT NULL,
  `Warranty` tinyint(4) NOT NULL,
  `User` varchar(20) NOT NULL,
  `Remark` text NOT NULL,
  `Attached` varchar(20) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_cpsfdata
-- ----------------------------
DROP TABLE IF EXISTS `net_cpsfdata`;
CREATE TABLE `net_cpsfdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `hdId` int(11) NOT NULL,
  `Sid` int(11) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_facilitytype
-- ----------------------------
DROP TABLE IF EXISTS `net_facilitytype`;
CREATE TABLE `net_facilitytype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_lawtype
-- ----------------------------
DROP TABLE IF EXISTS `net_lawtype`;
CREATE TABLE `net_lawtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_softwarelist
-- ----------------------------
DROP TABLE IF EXISTS `net_softwarelist`;
CREATE TABLE `net_softwarelist` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Sign` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for net_softwaretype
-- ----------------------------
DROP TABLE IF EXISTS `net_softwaretype`;
CREATE TABLE `net_softwaretype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=17 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for new_arrivaldata
-- ----------------------------
DROP TABLE IF EXISTS `new_arrivaldata`;
CREATE TABLE `new_arrivaldata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` text NOT NULL COMMENT '品名',
  `CompanyId` mediumint(9) DEFAULT NULL,
  `CompanyName` varchar(100) DEFAULT NULL,
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Material` text COMMENT '材质',
  `MOQ` int(11) DEFAULT '0' COMMENT '   最低订货量',
  `Images` text COMMENT 'Images',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` timestamp NOT NULL DEFAULT '0000-00-00 00:00:00',
  `Pushed` tinyint(3) DEFAULT '0',
  `mTimes` mediumint(7) DEFAULT '0' COMMENT '修改次数',
  `TypeId` int(11) DEFAULT '0',
  `Description` text,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='新品表';

-- ----------------------------
-- Table structure for new_forward
-- ----------------------------
DROP TABLE IF EXISTS `new_forward`;
CREATE TABLE `new_forward` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Description` text NOT NULL COMMENT '产品名',
  `Rule` text NOT NULL COMMENT '报价规则',
  `NewId` int(10) NOT NULL,
  `CompanyName` varchar(100) DEFAULT NULL,
  `Price` text NOT NULL COMMENT '价格',
  `IsEN` tinyint(3) NOT NULL COMMENT 'EN:1 or CH:0',
  `Way` tinyint(4) NOT NULL COMMENT 'Ways of forward',
  `MOQ` int(11) DEFAULT '0' COMMENT '   最低订货量',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `NewId` (`NewId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='新品转发纪录表';

-- ----------------------------
-- Table structure for new_liked
-- ----------------------------
DROP TABLE IF EXISTS `new_liked`;
CREATE TABLE `new_liked` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `NewId` int(10) NOT NULL COMMENT ' new_arrivaldata.Id ',
  `Liked` tinyint(3) NOT NULL COMMENT 'like:1 or dislike:0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Liker` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `NewId` (`NewId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='新品收藏纪录表';

-- ----------------------------
-- Table structure for new_readed
-- ----------------------------
DROP TABLE IF EXISTS `new_readed`;
CREATE TABLE `new_readed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `NewId` int(10) NOT NULL COMMENT ' new_arrivaldata.Id ',
  `Readed` tinyint(3) NOT NULL COMMENT 'Readed:1  Unreaded:0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Reader` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `NewId` (`NewId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='新品阅读纪录表';

-- ----------------------------
-- Table structure for nonbom0_assettype
-- ----------------------------
DROP TABLE IF EXISTS `nonbom0_assettype`;
CREATE TABLE `nonbom0_assettype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='资产折旧期';

-- ----------------------------
-- Table structure for nonbom0_ck
-- ----------------------------
DROP TABLE IF EXISTS `nonbom0_ck`;
CREATE TABLE `nonbom0_ck` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` tinyint(4) NOT NULL,
  `Name` varchar(12) NOT NULL COMMENT '存储位置',
  `Number` mediumint(9) NOT NULL COMMENT '负责人,关联表：staffmain.Number',
  `Remark` text NOT NULL COMMENT '楼层',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM仓库位置表';

-- ----------------------------
-- Table structure for nonbom10_bffixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom10_bffixed`;
CREATE TABLE `nonbom10_bffixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BfId` int(11) NOT NULL COMMENT '关联非bom配件报废主表ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `BarCode` varchar(20) NOT NULL,
  `Picture` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Remark` text NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `BfId` (`BfId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件报废固定资产明细';

-- ----------------------------
-- Table structure for nonbom10_outsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom10_outsheet`;
CREATE TABLE `nonbom10_outsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Remark` text NOT NULL COMMENT '说明',
  `ReturnReasons` text NOT NULL COMMENT '退回原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `GoodsId_2` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件报废明细表 ';

-- ----------------------------
-- Table structure for nonbom11_djmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom11_djmain`;
CREATE TABLE `nonbom11_djmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` tinyint(4) NOT NULL,
  `PayDate` date NOT NULL,
  `PayAmount` decimal(10,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL,
  `Receipt` tinyint(4) NOT NULL,
  `Checksheet` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM订金主表(数据不更新)';

-- ----------------------------
-- Table structure for nonbom11_djsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom11_djsheet`;
CREATE TABLE `nonbom11_djsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `Did` int(11) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `PurchaseID` int(8) DEFAULT NULL,
  `Amount` decimal(11,2) NOT NULL,
  `ContractFile` tinyint(4) NOT NULL DEFAULT '0',
  `Remark` text NOT NULL,
  `ReturnReasons` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM订金明细表(数据不更新)';

-- ----------------------------
-- Table structure for nonbom11_qkmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom11_qkmain`;
CREATE TABLE `nonbom11_qkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '结付银行,关联表：my2_bankinfo.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '非BOM供应商ID',
  `PayDate` date NOT NULL COMMENT '请款日期',
  `hkAmount` decimal(12,3) NOT NULL COMMENT '货款金额',
  `djAmount` decimal(10,3) NOT NULL DEFAULT '0.000',
  `taxAmount` decimal(12,3) NOT NULL DEFAULT '0.000',
  `shipAmount` decimal(12,3) NOT NULL DEFAULT '0.000',
  `PayAmount` decimal(12,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单(jpg)',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM请款主单';

-- ----------------------------
-- Table structure for nonbom11_qksheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom11_qksheet`;
CREATE TABLE `nonbom11_qksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL COMMENT '关联非BOM请款主表,关联表：nonbom11_qkmain.ID',
  `cgMid` int(11) NOT NULL COMMENT '采购主单ID,关联表：nonbom6_cgmain.ID',
  `mainType` int(11) NOT NULL,
  `TypeId` int(11) NOT NULL,
  `CompanyId` mediumint(11) NOT NULL COMMENT '非BOM供应商ID',
  `hkAmount` decimal(12,3) NOT NULL COMMENT '货款金额',
  `taxAmount` decimal(12,3) NOT NULL DEFAULT '0.000',
  `shipAmount` decimal(12,3) NOT NULL DEFAULT '0.000',
  `Amount` decimal(12,3) NOT NULL COMMENT '请款金额',
  `Month` varchar(7) NOT NULL COMMENT '请款月份',
  `Remark` text NOT NULL,
  `ReturnReasons` text NOT NULL COMMENT '请款退回原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM请款明细表';

-- ----------------------------
-- Table structure for nonbom11_type
-- ----------------------------
DROP TABLE IF EXISTS `nonbom11_type`;
CREATE TABLE `nonbom11_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom12_cwmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom12_cwmain`;
CREATE TABLE `nonbom12_cwmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '结付银行ID,关联表：my2_bankinfo.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '非BOM供应商ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `djAmount` decimal(10,3) NOT NULL,
  `taxAmount` decimal(12,3) NOT NULL,
  `shipAmount` decimal(12,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '结付回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM结付主单';

-- ----------------------------
-- Table structure for nonbom12_cwsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom12_cwsheet`;
CREATE TABLE `nonbom12_cwsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL COMMENT '关联结付主表,关联表：nonbom12_cwmain.ID',
  `cgMid` int(11) NOT NULL COMMENT '关联非BOM采购明细表,关联表：nonbom6_cgsheet.ID',
  `cgId` int(11) NOT NULL COMMENT '关联非BOM采购明细表,关联表：nonbom6_cgsheet.ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `CompanyId` mediumint(11) NOT NULL COMMENT '非BOM供应商ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Month` varchar(7) NOT NULL COMMENT '请款月份',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `cgId` (`cgId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM结付明细表';

-- ----------------------------
-- Table structure for nonbom13_cwmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom13_cwmain`;
CREATE TABLE `nonbom13_cwmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `PayDate` date NOT NULL,
  `PayAmount` decimal(10,3) NOT NULL,
  `djAmount` decimal(10,3) NOT NULL,
  `taxAmount` decimal(12,3) NOT NULL,
  `shipAmount` decimal(12,3) NOT NULL,
  `Payee` tinyint(4) NOT NULL,
  `Receipt` tinyint(4) NOT NULL,
  `Checksheet` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表 ';

-- ----------------------------
-- Table structure for nonbom13_cwsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom13_cwsheet`;
CREATE TABLE `nonbom13_cwsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL,
  `cgMid` int(11) NOT NULL,
  `cgId` int(11) NOT NULL,
  `GoodsId` mediumint(9) NOT NULL,
  `CompanyId` mediumint(11) NOT NULL,
  `Qty` decimal(11,2) NOT NULL,
  `Price` decimal(10,3) NOT NULL,
  `Amount` decimal(10,3) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `cgId` (`cgId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for nonbom1_maintype
-- ----------------------------
DROP TABLE IF EXISTS `nonbom1_maintype`;
CREATE TABLE `nonbom1_maintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Remark` text,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom2_subtype
-- ----------------------------
DROP TABLE IF EXISTS `nonbom2_subtype`;
CREATE TABLE `nonbom2_subtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '0',
  `SendFloor` int(11) NOT NULL DEFAULT '5',
  `BuyerId` mediumint(9) NOT NULL,
  `CheckerId` mediumint(9) NOT NULL,
  `mainType` tinyint(4) NOT NULL,
  `FirstId` varchar(20) NOT NULL,
  `TypeName` varchar(30) NOT NULL,
  `NameRule` text NOT NULL,
  `Remark` text,
  `GetSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '款项是否收回',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_buyer
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_buyer`;
CREATE TABLE `nonbom3_buyer` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BuyerId` int(11) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BuyerId` (`BuyerId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_link
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_link`;
CREATE TABLE `nonbom3_link` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `TypeId` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商和子分类连接';

-- ----------------------------
-- Table structure for nonbom3_retailer0
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_retailer0`;
CREATE TABLE `nonbom3_retailer0` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL,
  `Company` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Linkman` varchar(10) NOT NULL,
  `Tel` varchar(20) NOT NULL,
  `Currency` tinyint(4) NOT NULL DEFAULT '1',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `cName` (`Company`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_retailerlink
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_retailerlink`;
CREATE TABLE `nonbom3_retailerlink` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `Name` varchar(20) NOT NULL DEFAULT '',
  `Sex` tinyint(4) NOT NULL,
  `Nickname` varchar(20) NOT NULL DEFAULT '',
  `Headship` varchar(30) NOT NULL DEFAULT '',
  `Mobile` varchar(20) NOT NULL DEFAULT '',
  `Tel` varchar(20) NOT NULL DEFAULT '',
  `MSN` varchar(40) NOT NULL,
  `SKYPE` varchar(40) NOT NULL,
  `Email` varchar(50) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Defaults` tinyint(4) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_retailermain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_retailermain`;
CREATE TABLE `nonbom3_retailermain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `FscNo` varchar(20) NOT NULL,
  `Letter` varchar(1) NOT NULL,
  `Forshort` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `PayMode` tinyint(4) NOT NULL,
  `Judge` varchar(200) NOT NULL,
  `Currency` tinyint(4) NOT NULL,
  `PackFile` tinyint(4) NOT NULL DEFAULT '0',
  `AddTaxValue` smallint(6) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_retailerother
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_retailerother`;
CREATE TABLE `nonbom3_retailerother` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `LegalPerson` varchar(10) NOT NULL,
  `BLdate` varchar(20) NOT NULL,
  `TRCdate` varchar(20) NOT NULL,
  `PLdate` varchar(20) NOT NULL,
  `Description` text NOT NULL,
  `Aptitudes` text NOT NULL,
  `EAQF` text NOT NULL,
  `Quality` tinyint(4) NOT NULL,
  `Normative` tinyint(4) NOT NULL,
  `Effect` tinyint(4) NOT NULL,
  `Qos` tinyint(4) NOT NULL,
  `Results` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom3_retailersheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom3_retailersheet`;
CREATE TABLE `nonbom3_retailersheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `Company` varchar(50) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Tel` varchar(50) NOT NULL DEFAULT '',
  `Fax` varchar(50) NOT NULL,
  `Area` varchar(20) NOT NULL DEFAULT '',
  `Website` varchar(100) NOT NULL,
  `Address` varchar(100) NOT NULL DEFAULT '',
  `ZIP` varchar(6) NOT NULL,
  `Bank` text NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom4_bomcompany
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_bomcompany`;
CREATE TABLE `nonbom4_bomcompany` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` int(11) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `cSign` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom4_defaultcompany
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_defaultcompany`;
CREATE TABLE `nonbom4_defaultcompany` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` int(11) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `Price` decimal(10,3) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商和子分类连接';

-- ----------------------------
-- Table structure for nonbom4_goodchange
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_goodchange`;
CREATE TABLE `nonbom4_goodchange` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL DEFAULT '0',
  `oldGoodsName` varchar(100) NOT NULL,
  `GoodsName` varchar(100) NOT NULL,
  `oldPrice` decimal(10,3) NOT NULL,
  `Price` decimal(10,3) NOT NULL,
  `oldCompanyId` mediumint(9) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL,
  `Reason` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom4_goodsdata
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_goodsdata`;
CREATE TABLE `nonbom4_goodsdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` int(11) NOT NULL,
  `GoodsName` varchar(100) NOT NULL,
  `BarCode` varchar(15) NOT NULL,
  `TypeId` int(10) NOT NULL,
  `Attached` tinyint(4) NOT NULL,
  `AppIcon` tinyint(4) NOT NULL DEFAULT '0',
  `Price` decimal(12,2) NOT NULL,
  `Currency` tinyint(4) NOT NULL DEFAULT '1',
  `Unit` varchar(6) NOT NULL,
  `CkId` tinyint(4) NOT NULL,
  `nxId` tinyint(4) NOT NULL,
  `pdDate` tinyint(4) NOT NULL,
  `ByNumber` mediumint(9) NOT NULL DEFAULT '0',
  `ByCompanyId` mediumint(9) NOT NULL DEFAULT '0',
  `WxNumber` mediumint(9) NOT NULL DEFAULT '0',
  `WxCompanyId` mediumint(9) NOT NULL DEFAULT '0',
  `AssetType` tinyint(4) NOT NULL DEFAULT '1' COMMENT '费用化还是资产化',
  `DepreciationId` tinyint(4) NOT NULL DEFAULT '0' COMMENT '折旧期',
  `Salvage` decimal(11,2) NOT NULL DEFAULT '0.05' COMMENT '残值率',
  `ReturnReasons` text NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `GetSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '款项是否收回',
  `GetQty` int(10) NOT NULL DEFAULT '0' COMMENT '款项收回的条件（满足多少PCS）',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Introduction` text,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`GoodsName`) USING BTREE,
  UNIQUE KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=142 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom4_goodsproperty
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_goodsproperty`;
CREATE TABLE `nonbom4_goodsproperty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL DEFAULT '0',
  `Property` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom4_propertytype
-- ----------------------------
DROP TABLE IF EXISTS `nonbom4_propertytype`;
CREATE TABLE `nonbom4_propertytype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `TypeColor` varchar(7) NOT NULL,
  `rColor` smallint(6) NOT NULL,
  `gColor` smallint(6) NOT NULL,
  `bColor` smallint(6) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom5_goodsstock
-- ----------------------------
DROP TABLE IF EXISTS `nonbom5_goodsstock`;
CREATE TABLE `nonbom5_goodsstock` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL,
  `wStockQty` decimal(11,2) NOT NULL,
  `lStockQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `oStockQty` decimal(11,2) NOT NULL,
  `mStockQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `CompanyId` mediumint(9) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=401 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom6_cgmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom6_cgmain`;
CREATE TABLE `nonbom6_cgmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mainType` int(11) NOT NULL,
  `PurchaseID` int(11) NOT NULL COMMENT '非BOM采购单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '非BOM供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '购买人,关联表：staffmain.Number',
  `taxAmount` decimal(12,3) NOT NULL DEFAULT '0.000',
  `shipAmount` decimal(12,3) NOT NULL,
  `Attached` tinyint(4) NOT NULL DEFAULT '0' COMMENT '采件附件(jpg)',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件采购单主表';

-- ----------------------------
-- Table structure for nonbom6_cgsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom6_cgsheet`;
CREATE TABLE `nonbom6_cgsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联非BOM采购主表,关联表：nonbom6_cgmain.ID',
  `fromMid` int(11) NOT NULL DEFAULT '0',
  `qkId` int(11) NOT NULL DEFAULT '0' COMMENT '请款后，用请款ID更新此字段',
  `mainType` int(11) NOT NULL,
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '非BOM供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '购买人,关联表：staffmain.Number',
  `Qty` decimal(11,2) NOT NULL COMMENT '采购数量',
  `Price` decimal(12,2) NOT NULL COMMENT '价格',
  `AddTaxValue` smallint(6) NOT NULL DEFAULT '1' COMMENT '增值税税率',
  `Remark` text NOT NULL,
  `ReturnReasons` text NOT NULL COMMENT '取消采购原因',
  `rkSign` tinyint(4) NOT NULL COMMENT '入库标志',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `mainType` (`mainType`) USING BTREE,
  KEY `fromMid` (`fromMid`) USING BTREE,
  KEY `AddTaxValue` (`AddTaxValue`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=85 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件采购单明细表';

-- ----------------------------
-- Table structure for nonbom6_depreciation
-- ----------------------------
DROP TABLE IF EXISTS `nonbom6_depreciation`;
CREATE TABLE `nonbom6_depreciation` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Depreciation` varchar(100) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `ListName` varchar(100) NOT NULL,
  `dValues` varchar(50) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='资产折旧期';

-- ----------------------------
-- Table structure for nonbom6_invoice
-- ----------------------------
DROP TABLE IF EXISTS `nonbom6_invoice`;
CREATE TABLE `nonbom6_invoice` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cgMid` int(10) NOT NULL COMMENT '采购主表ID',
  `InvoiceNo` varchar(50) NOT NULL DEFAULT '0' COMMENT '发票编号',
  `InvoiceFile` varchar(50) NOT NULL DEFAULT '1' COMMENT '文件名称',
  `InvoiceDate` date DEFAULT NULL COMMENT '开票日期',
  `InvoiceAmount` decimal(11,2) NOT NULL DEFAULT '0.00',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `cgMid` (`cgMid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单发票表';

-- ----------------------------
-- Table structure for nonbom6_nx
-- ----------------------------
DROP TABLE IF EXISTS `nonbom6_nx`;
CREATE TABLE `nonbom6_nx` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Frequency` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `days` int(8) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for nonbom7_care
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_care`;
CREATE TABLE `nonbom7_care` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `ByNumber` mediumint(9) NOT NULL COMMENT '保养人',
  `ByCompanyId` mediumint(9) NOT NULL COMMENT '保养公司',
  `ByReason` text NOT NULL COMMENT '保养原因',
  `ByDate` date NOT NULL,
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `ByNumber` (`ByNumber`) USING BTREE,
  KEY `ByCompanyId` (`ByCompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM固定资产保养';

-- ----------------------------
-- Table structure for nonbom7_code
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_code`;
CREATE TABLE `nonbom7_code` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `rkId` int(11) NOT NULL COMMENT '关联非bom配件入库表ID/转入表ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `GoodsNum` varchar(30) NOT NULL COMMENT '资产编号',
  `CkId` tinyint(4) NOT NULL COMMENT '入库地点',
  `TypeSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '入库/转入分类，入库为1，转入为2',
  `Number` mediumint(9) NOT NULL DEFAULT '0' COMMENT '最新使用人',
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `rkId` (`rkId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库配件条码/机器编号表';

-- ----------------------------
-- Table structure for nonbom7_code_copy
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_code_copy`;
CREATE TABLE `nonbom7_code_copy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `rkId` int(11) NOT NULL COMMENT '关联非bom配件入库表ID/转入表ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `GoodsNum` varchar(30) NOT NULL COMMENT '资产编号',
  `CkId` tinyint(4) NOT NULL COMMENT '入库地点',
  `TypeSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '入库/转入分类，入库为1，转入为2',
  `Number` mediumint(9) NOT NULL DEFAULT '0' COMMENT '最新使用人',
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `rkId` (`rkId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库配件条码/机器编号表';

-- ----------------------------
-- Table structure for nonbom7_depreciationcharge
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_depreciationcharge`;
CREATE TABLE `nonbom7_depreciationcharge` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '折旧月份',
  `BarCode` varchar(20) NOT NULL COMMENT '资料编号',
  `GoodsId` mediumint(9) NOT NULL COMMENT '资产ID',
  `Depreciation` mediumint(6) NOT NULL COMMENT '折旧期数',
  `Times` mediumint(6) NOT NULL COMMENT '当前期数',
  `Amount` decimal(11,2) NOT NULL COMMENT '折旧费',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCodeMonth` (`BarCode`,`Month`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `BarCode` (`BarCode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for nonbom7_fixedassets
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_fixedassets`;
CREATE TABLE `nonbom7_fixedassets` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `PostingDate` date NOT NULL,
  `BranchId` mediumint(9) NOT NULL COMMENT '使用部门',
  `AddType` tinyint(4) NOT NULL COMMENT '增加方式:1、购入 2、接受捐赠',
  `DepreciationType` tinyint(4) NOT NULL,
  `DepreciationId` mediumint(6) NOT NULL,
  `Depreciation` mediumint(6) NOT NULL,
  `Salvage` decimal(5,2) NOT NULL COMMENT '残值率',
  `Amount` decimal(12,2) NOT NULL COMMENT '原值',
  `Devalue` decimal(12,2) NOT NULL DEFAULT '0.00' COMMENT '减值准备',
  `InvoiceFile` varchar(50) DEFAULT NULL,
  `ContractFile` varchar(50) DEFAULT NULL,
  `Remark` text NOT NULL COMMENT '备注信息',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `BranchId` (`BranchId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库配件条码/机器编号表';

-- ----------------------------
-- Table structure for nonbom7_fixedassets_audit
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_fixedassets_audit`;
CREATE TABLE `nonbom7_fixedassets_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='其他收入审核';

-- ----------------------------
-- Table structure for nonbom7_inmain
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_inmain`;
CREATE TABLE `nonbom7_inmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '非BOM供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '购买人,关联表：staffmain.Number',
  `BillNumber` varchar(20) NOT NULL COMMENT '非BOM采购单号',
  `Bill` tinyint(4) NOT NULL COMMENT '是否有入库文件(jpg)',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件入库记录主表';

-- ----------------------------
-- Table structure for nonbom7_insheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_insheet`;
CREATE TABLE `nonbom7_insheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联非bom配件入库主记录表,关联表：nonbom7_inmain.ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `cgId` int(11) NOT NULL COMMENT '关联非BOM采购明细表',
  `Qty` decimal(11,2) NOT NULL COMMENT '入库数量',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `GoodsId_2` (`GoodsId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件入库记录明细表 ';

-- ----------------------------
-- Table structure for nonbom7_repair
-- ----------------------------
DROP TABLE IF EXISTS `nonbom7_repair`;
CREATE TABLE `nonbom7_repair` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `WxNumber` mediumint(9) NOT NULL COMMENT '维修人员',
  `WxCompanyId` mediumint(9) NOT NULL COMMENT '维修公司',
  `WxReason` text NOT NULL COMMENT '维修原因',
  `WxDate` date NOT NULL,
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非BOM固定资产保养';

-- ----------------------------
-- Table structure for nonbom8_bf
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_bf`;
CREATE TABLE `nonbom8_bf` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(10) NOT NULL COMMENT '报废单号',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `Qty` decimal(10,3) NOT NULL COMMENT '报废数量',
  `Remark` text NOT NULL COMMENT '报废备注',
  `bfNumber` mediumint(9) NOT NULL COMMENT '报废人员',
  `Picture` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `bfNumber` (`bfNumber`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件领用报废';

-- ----------------------------
-- Table structure for nonbom8_bffixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_bffixed`;
CREATE TABLE `nonbom8_bffixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BfId` int(11) NOT NULL COMMENT 'nonbom8_outbf表的ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '配件ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `BfId` (`BfId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='个人领用报废的固定资产';

-- ----------------------------
-- Table structure for nonbom8_outfixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_outfixed`;
CREATE TABLE `nonbom8_outfixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OutId` int(11) NOT NULL COMMENT '关联非bom配件领用表ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `BarCode` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `LyMan` mediumint(9) NOT NULL COMMENT '领用人',
  `Remark` text NOT NULL COMMENT '领用备注',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `LyMan` (`LyMan`) USING BTREE,
  KEY `OutId` (`OutId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件领用固定资产明细';

-- ----------------------------
-- Table structure for nonbom8_outsheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_outsheet`;
CREATE TABLE `nonbom8_outsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `WorkAdd` tinyint(4) NOT NULL COMMENT '领用地点,关联表：staffworkadd.ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '领用数量',
  `Remark` text NOT NULL,
  `ReturnReasons` text NOT NULL,
  `GetNumber` mediumint(9) NOT NULL DEFAULT '0',
  `OutOperator` mediumint(9) NOT NULL COMMENT '领用人,关联表：staffmain.Number',
  `OutDate` datetime NOT NULL COMMENT '领用日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Confirm` tinyint(4) NOT NULL DEFAULT '0',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件领用明细 ';

-- ----------------------------
-- Table structure for nonbom8_pd
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_pd`;
CREATE TABLE `nonbom8_pd` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(10) NOT NULL COMMENT '盘点单号',
  `GoodsId` mediumint(9) NOT NULL COMMENT '非BOM配件ID',
  `TotalQty` decimal(10,3) NOT NULL COMMENT '盘点总数',
  `Qty` decimal(10,3) NOT NULL COMMENT '盘点数量',
  `Remark` text NOT NULL,
  `PdNumber` mediumint(9) NOT NULL COMMENT '盘点人员',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `bfNumber` (`PdNumber`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件领用个人盘点';

-- ----------------------------
-- Table structure for nonbom8_pdfixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_pdfixed`;
CREATE TABLE `nonbom8_pdfixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PdId` int(11) NOT NULL COMMENT 'nonbom8_pd表的ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '配件ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `rkId` (`PdId`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='个人领用盘点的固定资产';

-- ----------------------------
-- Table structure for nonbom8_reback
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_reback`;
CREATE TABLE `nonbom8_reback` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(10) NOT NULL COMMENT '退回单号',
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '退回仓库数量',
  `Remark` text NOT NULL COMMENT '退回原因',
  `BackNumber` mediumint(9) NOT NULL COMMENT '退回人员',
  `Picture` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `BackNumber` (`BackNumber`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件领用退回仓库';

-- ----------------------------
-- Table structure for nonbom8_rebackfixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_rebackfixed`;
CREATE TABLE `nonbom8_rebackfixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BackId` int(11) NOT NULL COMMENT '关联非bom配件领用退回表的ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '配件ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `BackId` (`BackId`) USING BTREE,
  KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='个人领用退回的固定资产';

-- ----------------------------
-- Table structure for nonbom8_turn
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_turn`;
CREATE TABLE `nonbom8_turn` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(10) NOT NULL,
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '领用数量',
  `Remark` text NOT NULL,
  `OutNumber` mediumint(9) NOT NULL COMMENT '转出人',
  `InNumber` mediumint(9) NOT NULL COMMENT '接收人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `InNumber` (`InNumber`) USING BTREE,
  KEY `FromNumber` (`OutNumber`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom领用配件转出表';

-- ----------------------------
-- Table structure for nonbom8_turnfixed
-- ----------------------------
DROP TABLE IF EXISTS `nonbom8_turnfixed`;
CREATE TABLE `nonbom8_turnfixed` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TurnId` int(11) NOT NULL COMMENT '关联非bom配件个人领用转出表的ID',
  `GoodsId` mediumint(9) NOT NULL COMMENT '配件ID',
  `BarCode` varchar(20) NOT NULL COMMENT '资产条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BarCode` (`BarCode`) USING BTREE,
  KEY `rkId` (`TurnId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='个人领用后转出的固定资产';

-- ----------------------------
-- Table structure for nonbom9_insheet
-- ----------------------------
DROP TABLE IF EXISTS `nonbom9_insheet`;
CREATE TABLE `nonbom9_insheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GoodsId` mediumint(9) NOT NULL COMMENT '物品ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '转入数量',
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `GoodsId` (`GoodsId`) USING BTREE,
  KEY `GoodsId_2` (`GoodsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='非bom配件转入明细表 ';

-- ----------------------------
-- Table structure for oa1_fixedmaintype
-- ----------------------------
DROP TABLE IF EXISTS `oa1_fixedmaintype`;
CREATE TABLE `oa1_fixedmaintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL DEFAULT '',
  `Letter` char(1) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=22 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for oa2_fixedsubtype
-- ----------------------------
DROP TABLE IF EXISTS `oa2_fixedsubtype`;
CREATE TABLE `oa2_fixedsubtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL DEFAULT '',
  `Letter` char(1) NOT NULL,
  `MainTypeID` int(10) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `MainTypeID` (`MainTypeID`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for oa3_maitaindays
-- ----------------------------
DROP TABLE IF EXISTS `oa3_maitaindays`;
CREATE TABLE `oa3_maitaindays` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `EName` varchar(100) NOT NULL,
  `CName` varchar(100) NOT NULL,
  `Days` int(5) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`CName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for oa3_maitaintype
-- ----------------------------
DROP TABLE IF EXISTS `oa3_maitaintype`;
CREATE TABLE `oa3_maitaintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL DEFAULT '',
  `Letter` char(1) NOT NULL,
  `TypeID` int(10) NOT NULL,
  `DaysID` tinyint(4) NOT NULL DEFAULT '6',
  `Days` int(5) NOT NULL DEFAULT '365',
  `Order` int(4) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=202 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for online
-- ----------------------------
DROP TABLE IF EXISTS `online`;
CREATE TABLE `online` (
  `sId` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uId` int(11) NOT NULL COMMENT '用户iD,关联表：usertable.ID',
  `uFrom` tinyint(4) NOT NULL DEFAULT '1' COMMENT '内外网标志',
  `IP` varchar(20) NOT NULL COMMENT '登录IP',
  `LastTime` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`sId`) USING BTREE,
  KEY `bj` (`uId`,`IP`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=148239 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 在线记录表';

-- ----------------------------
-- Table structure for oprationlog
-- ----------------------------
DROP TABLE IF EXISTS `oprationlog`;
CREATE TABLE `oprationlog` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) DEFAULT '7',
  `DateTime` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `Item` varchar(50) NOT NULL COMMENT '操作主内容说明',
  `Funtion` varchar(20) NOT NULL COMMENT '操作标志',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Log` text NOT NULL COMMENT '执行内容或结果',
  `OperationResult` char(1) NOT NULL DEFAULT 'Y',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `DateTime` (`DateTime`) USING BTREE,
  KEY `cSign` (`cSign`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=17059 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 操作日志表';

-- ----------------------------
-- Table structure for ot1_service
-- ----------------------------
DROP TABLE IF EXISTS `ot1_service`;
CREATE TABLE `ot1_service` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark1` text NOT NULL,
  `Remark2` text NOT NULL,
  `Remark3` text NOT NULL,
  `Servicer` mediumint(9) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ot2_cam
-- ----------------------------
DROP TABLE IF EXISTS `ot2_cam`;
CREATE TABLE `ot2_cam` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Floor` tinyint(4) NOT NULL,
  `Info` varchar(10) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `IP` varchar(20) NOT NULL,
  `OutIP` varchar(30) NOT NULL,
  `Port` varchar(4) NOT NULL,
  `Params` varchar(100) NOT NULL,
  `Order` smallint(6) NOT NULL,
  `From` varchar(5) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ot2_display
-- ----------------------------
DROP TABLE IF EXISTS `ot2_display`;
CREATE TABLE `ot2_display` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `WorkAdd` tinyint(4) NOT NULL,
  `Floor` tinyint(4) NOT NULL,
  `Identifier` varchar(30) DEFAULT NULL,
  `Name` varchar(50) NOT NULL,
  `IP` varchar(20) NOT NULL,
  `Port` varchar(10) NOT NULL,
  `Url` varchar(100) NOT NULL DEFAULT '',
  `ImageSign` tinyint(3) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ot5_printer
-- ----------------------------
DROP TABLE IF EXISTS `ot5_printer`;
CREATE TABLE `ot5_printer` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `WorkAdd` tinyint(4) NOT NULL,
  `Floor` mediumint(6) NOT NULL,
  `Identifier` varchar(30) DEFAULT NULL,
  `Name` varchar(50) NOT NULL,
  `IP` varchar(20) NOT NULL,
  `Port` varchar(10) NOT NULL,
  `PrintSign` tinyint(3) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for otdata
-- ----------------------------
DROP TABLE IF EXISTS `otdata`;
CREATE TABLE `otdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(100) NOT NULL,
  `TypeId` tinyint(4) NOT NULL,
  `FileName` varchar(30) NOT NULL,
  `ImageFlag` tinyint(4) NOT NULL DEFAULT '0',
  `ImageName` varchar(50) DEFAULT '',
  `CompanyId` int(10) DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for otdata_kfinfo
-- ----------------------------
DROP TABLE IF EXISTS `otdata_kfinfo`;
CREATE TABLE `otdata_kfinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ListName` varchar(10) NOT NULL,
  `Company` varchar(50) NOT NULL,
  `Name` varchar(50) NOT NULL,
  `Tel` varchar(50) NOT NULL DEFAULT '',
  `Fax` varchar(20) DEFAULT '',
  `Address` varchar(100) DEFAULT '',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ot_staff
-- ----------------------------
DROP TABLE IF EXISTS `ot_staff`;
CREATE TABLE `ot_staff` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Forshort` varchar(20) NOT NULL DEFAULT '其他公司',
  `Number` mediumint(9) NOT NULL COMMENT '编号',
  `Name` varchar(10) NOT NULL COMMENT '姓名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='外部人员表';

-- ----------------------------
-- Table structure for packingunit
-- ----------------------------
DROP TABLE IF EXISTS `packingunit`;
CREATE TABLE `packingunit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for pands
-- ----------------------------
DROP TABLE IF EXISTS `pands`;
CREATE TABLE `pands` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'pands自增字段ID',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Relation` varchar(15) NOT NULL COMMENT '产品与配件比例',
  `Diecut` varchar(10) DEFAULT NULL COMMENT '切割刀模',
  `Cutrelation` tinyint(4) DEFAULT '0' COMMENT '切割关系',
  `bpRate` tinyint(4) DEFAULT '0' COMMENT '备品率,关联表：d0.standbyrate',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `bpRate` (`bpRate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=18751 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='bom表设置表';

-- ----------------------------
-- Table structure for pandscharge
-- ----------------------------
DROP TABLE IF EXISTS `pandscharge`;
CREATE TABLE `pandscharge` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品Id',
  `newStuffId` mediumint(9) NOT NULL COMMENT '新配件Id',
  `oldStuffId` mediumint(9) NOT NULL COMMENT '旧配件Id',
  `relation` varchar(15) NOT NULL COMMENT '成品与配件关系',
  `diecut` varchar(10) DEFAULT NULL COMMENT '切割刀模',
  `cutrelation` tinyint(4) NOT NULL DEFAULT '0' COMMENT '切割刀模关系',
  `bpRate` tinyint(4) NOT NULL DEFAULT '0' COMMENT '备品率',
  `unitStuffs` varchar(100) DEFAULT NULL COMMENT '关联配件',
  `ChargeDate` datetime NOT NULL COMMENT '日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=98 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for pands_oldmain
-- ----------------------------
DROP TABLE IF EXISTS `pands_oldmain`;
CREATE TABLE `pands_oldmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ProductId` mediumint(9) NOT NULL,
  `VersionNo` decimal(6,2) NOT NULL DEFAULT '1.00' COMMENT '版本号',
  `Remark` text NOT NULL COMMENT '修改说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 社保结付主表';

-- ----------------------------
-- Table structure for pands_oldsheet
-- ----------------------------
DROP TABLE IF EXISTS `pands_oldsheet`;
CREATE TABLE `pands_oldsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT 'pands自增字段ID',
  `Mid` int(10) NOT NULL,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Relation` varchar(15) NOT NULL COMMENT '产品与配件比例',
  `Diecut` varchar(10) DEFAULT NULL COMMENT '切割刀模',
  `Cutrelation` tinyint(4) DEFAULT '0' COMMENT '切割关系',
  `bpRate` tinyint(4) DEFAULT '0' COMMENT '备品率,关联表：d0.standbyrate',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `bpRate` (`bpRate`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=46 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='bom表设置表';

-- ----------------------------
-- Table structure for pands_process
-- ----------------------------
DROP TABLE IF EXISTS `pands_process`;
CREATE TABLE `pands_process` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '工序名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProcessName` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='加工工序表';

-- ----------------------------
-- Table structure for pands_unite
-- ----------------------------
DROP TABLE IF EXISTS `pands_unite`;
CREATE TABLE `pands_unite` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `uStuffId` mediumint(9) NOT NULL COMMENT '次关联配件ID',
  `Relation` varchar(15) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL COMMENT '记录操作人',
  `created` datetime DEFAULT NULL COMMENT '记录生成日期',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='外发加工配件关联表';

-- ----------------------------
-- Table structure for paybase
-- ----------------------------
DROP TABLE IF EXISTS `paybase`;
CREATE TABLE `paybase` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` varchar(20) NOT NULL,
  `Dx` decimal(9,2) NOT NULL DEFAULT '0.00',
  `Jj` decimal(9,2) NOT NULL DEFAULT '0.00',
  `Jtbz` decimal(7,2) NOT NULL DEFAULT '0.00',
  `Sbkk` decimal(7,2) NOT NULL DEFAULT '0.00',
  `Taxkk` decimal(7,2) NOT NULL DEFAULT '0.00',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1696 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for pbsetsheet
-- ----------------------------
DROP TABLE IF EXISTS `pbsetsheet`;
CREATE TABLE `pbsetsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL,
  `pbType` int(11) NOT NULL COMMENT '排班类型,关联表：d0.pbsheet',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='考勤人员排班';

-- ----------------------------
-- Table structure for pbsheet
-- ----------------------------
DROP TABLE IF EXISTS `pbsheet`;
CREATE TABLE `pbsheet` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `StartTime` time NOT NULL,
  `EndTime` time NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='临时测试排班';

-- ----------------------------
-- Table structure for physicaltype
-- ----------------------------
DROP TABLE IF EXISTS `physicaltype`;
CREATE TABLE `physicaltype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for printerset
-- ----------------------------
DROP TABLE IF EXISTS `printerset`;
CREATE TABLE `printerset` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `LineNumber` varchar(10) NOT NULL COMMENT '拉线号',
  `IP` varchar(20) NOT NULL COMMENT 'IP设置',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='拉线IP设定表';

-- ----------------------------
-- Table structure for printformatter
-- ----------------------------
DROP TABLE IF EXISTS `printformatter`;
CREATE TABLE `printformatter` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ClientId` varchar(50) NOT NULL,
  `Parameters` text NOT NULL,
  `Value` text NOT NULL,
  `qrFormat` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='记录喷码机参数';

-- ----------------------------
-- Table structure for printparameters
-- ----------------------------
DROP TABLE IF EXISTS `printparameters`;
CREATE TABLE `printparameters` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Lotto` varchar(20) NOT NULL,
  `itf` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='对于有特殊参数的喷码设置';

-- ----------------------------
-- Table structure for printsync
-- ----------------------------
DROP TABLE IF EXISTS `printsync`;
CREATE TABLE `printsync` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ShipId` int(11) DEFAULT NULL,
  `POrderId` varchar(12) DEFAULT NULL,
  `printQty` int(11) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for process_bom
-- ----------------------------
DROP TABLE IF EXISTS `process_bom`;
CREATE TABLE `process_bom` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL,
  `ProcessId` mediumint(9) NOT NULL,
  `Relation` varchar(10) NOT NULL,
  `BeforeProcessId` varchar(200) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for process_data
-- ----------------------------
DROP TABLE IF EXISTS `process_data`;
CREATE TABLE `process_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProcessId` mediumint(9) NOT NULL,
  `ProcessName` varchar(30) NOT NULL,
  `gxTypeId` mediumint(9) NOT NULL,
  `TypeId` mediumint(9) NOT NULL,
  `BassLoss` decimal(10,3) NOT NULL,
  `Price` decimal(10,3) NOT NULL,
  `Picture` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProcessId` (`ProcessId`) USING BTREE,
  UNIQUE KEY `ProcessName` (`ProcessName`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `gxTypeId` (`gxTypeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for process_file
-- ----------------------------
DROP TABLE IF EXISTS `process_file`;
CREATE TABLE `process_file` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProcessId` int(11) NOT NULL COMMENT '工序ID',
  `Type` tinyint(4) NOT NULL COMMENT '????',
  `FileName` varchar(20) NOT NULL COMMENT '文件名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 加工工序文件表';

-- ----------------------------
-- Table structure for process_leader
-- ----------------------------
DROP TABLE IF EXISTS `process_leader`;
CREATE TABLE `process_leader` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `WorkShopId` mediumint(9) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `gxTypeId` smallint(6) NOT NULL DEFAULT '0',
  `ProcessId` mediumint(9) NOT NULL,
  `Leader` mediumint(9) NOT NULL COMMENT '部门负责人,关联表：staffmain.Number',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProcessId` (`WorkShopId`,`ProcessId`,`gxTypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 部门表';

-- ----------------------------
-- Table structure for process_type
-- ----------------------------
DROP TABLE IF EXISTS `process_type`;
CREATE TABLE `process_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `gxTypeId` mediumint(9) NOT NULL,
  `gxTypeName` varchar(30) NOT NULL,
  `Remark` text NOT NULL,
  `SortId` int(5) NOT NULL DEFAULT '0',
  `Color` varchar(10) NOT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `gxTypeId` (`gxTypeId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for productdata
-- ----------------------------
DROP TABLE IF EXISTS `productdata`;
CREATE TABLE `productdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `cName` varchar(60) NOT NULL COMMENT '中文名',
  `eCode` varchar(100) NOT NULL COMMENT '英文名',
  `TypeId` mediumint(9) NOT NULL COMMENT '产品分类ID',
  `Price` decimal(10,3) NOT NULL COMMENT '产品价格',
  `OutPrice` decimal(10,3) NOT NULL DEFAULT '0.000',
  `Unit` tinyint(4) NOT NULL COMMENT '单位,关联表：productunit.id',
  `Moq` int(11) NOT NULL COMMENT '最低下单量',
  `MainWeight` decimal(9,2) NOT NULL DEFAULT '0.00' COMMENT '单品重(g)',
  `Weight` decimal(9,2) NOT NULL DEFAULT '0.00' COMMENT '成品重',
  `maxWeight` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '产品整箱重量上限',
  `minWeight` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '产品整箱重量下限',
  `MisWeight` decimal(9,2) NOT NULL DEFAULT '0.00' COMMENT '误差值(±g)',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户CompanyId',
  `profitvalue` decimal(10,3) DEFAULT NULL,
  `Description` text NOT NULL COMMENT '产品描述',
  `Remark` text NOT NULL COMMENT '包装说明',
  `pRemark` text NOT NULL COMMENT '产品备注',
  `bjRemark` text NOT NULL COMMENT '报价规则',
  `LoadQty` int(10) NOT NULL DEFAULT '0' COMMENT '装框数量',
  `TestStandard` tinyint(4) NOT NULL COMMENT '检验标准图(jpg)',
  `Img_H` tinyint(4) NOT NULL DEFAULT '0' COMMENT '高清图',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `PackingUnit` int(10) unsigned DEFAULT NULL COMMENT '装箱单位,关联表：packingunit.ID',
  `dzSign` tinyint(4) NOT NULL COMMENT '是否电子类',
  `taxtypeId` int(4) NOT NULL DEFAULT '0',
  `buySign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '购买属性',
  `productsize` varchar(50) NOT NULL COMMENT '产品尺寸',
  `ReturnReasons` text NOT NULL,
  `InspectionSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '客户验货',
  `MaterialQ` int(6) NOT NULL DEFAULT '0' COMMENT '材料质量',
  `UseWay` int(6) NOT NULL DEFAULT '0' COMMENT '产品用途',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Code` varchar(100) DEFAULT NULL COMMENT '外箱标签条码',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `drawingId` varchar(20) DEFAULT NULL COMMENT 'trade_drawing.Id',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `eCode` (`eCode`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Unit` (`Unit`) USING BTREE,
  KEY `PackingUnit` (`PackingUnit`) USING BTREE,
  KEY `bgType` (`taxtypeId`) USING BTREE,
  KEY `buySign` (`buySign`) USING BTREE,
  KEY `Estate` (`Estate`) USING BTREE,
  KEY `MaterialQ` (`MaterialQ`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6080 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品数据表';

-- ----------------------------
-- Table structure for productdata_audit
-- ----------------------------
DROP TABLE IF EXISTS `productdata_audit`;
CREATE TABLE `productdata_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品资料审核';

-- ----------------------------
-- Table structure for productimg
-- ----------------------------
DROP TABLE IF EXISTS `productimg`;
CREATE TABLE `productimg` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Picture` varchar(50) NOT NULL COMMENT '图片文件名(jpg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Type` tinyint(4) NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品高清图表';

-- ----------------------------
-- Table structure for productmaintype
-- ----------------------------
DROP TABLE IF EXISTS `productmaintype`;
CREATE TABLE `productmaintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `Name` varchar(30) NOT NULL COMMENT '主分类名称',
  `Color` varchar(7) NOT NULL COMMENT '产品分类颜色',
  `rColor` smallint(6) NOT NULL COMMENT '红',
  `gColor` smallint(6) NOT NULL COMMENT '绿',
  `bColor` smallint(6) NOT NULL COMMENT '蓝',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品主分类表';

-- ----------------------------
-- Table structure for productmq
-- ----------------------------
DROP TABLE IF EXISTS `productmq`;
CREATE TABLE `productmq` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(100) NOT NULL COMMENT '材质名称',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品材质表';

-- ----------------------------
-- Table structure for productprintparameter
-- ----------------------------
DROP TABLE IF EXISTS `productprintparameter`;
CREATE TABLE `productprintparameter` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `productId` int(11) NOT NULL,
  `Lotto` varchar(20) NOT NULL,
  `itf` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `productId` (`productId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for productqcimg
-- ----------------------------
DROP TABLE IF EXISTS `productqcimg`;
CREATE TABLE `productqcimg` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID/产品类型ID',
  `Picture` varchar(20) NOT NULL COMMENT '图片文件名(jpg)',
  `Type` tinyint(4) NOT NULL COMMENT '类型',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品QC检验标准图表';

-- ----------------------------
-- Table structure for productstandimg
-- ----------------------------
DROP TABLE IF EXISTS `productstandimg`;
CREATE TABLE `productstandimg` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Picture` varchar(20) NOT NULL COMMENT '图片文件名(jpg)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '更新时间',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3539 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品标准图表';

-- ----------------------------
-- Table structure for productstock
-- ----------------------------
DROP TABLE IF EXISTS `productstock`;
CREATE TABLE `productstock` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL COMMENT '配件ID',
  `tStockQty` int(6) NOT NULL COMMENT '实物库存',
  `oStockQty` int(6) DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=468 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品库存表';

-- ----------------------------
-- Table structure for producttest
-- ----------------------------
DROP TABLE IF EXISTS `producttest`;
CREATE TABLE `producttest` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ItemId` int(11) NOT NULL COMMENT '测试项目ID',
  `ItemName` varchar(50) NOT NULL COMMENT '项目名称',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Content` text NOT NULL COMMENT '项目内容',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品测试项目登记表';

-- ----------------------------
-- Table structure for producttype
-- ----------------------------
DROP TABLE IF EXISTS `producttype`;
CREATE TABLE `producttype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `mainType` int(11) NOT NULL COMMENT '产品主分类ID',
  `TypeId` mediumint(9) NOT NULL COMMENT '产品分类ID',
  `TypeName` varchar(30) NOT NULL COMMENT '分类名称',
  `Letter` char(1) NOT NULL COMMENT '名称首字母',
  `OrderId` smallint(2) NOT NULL DEFAULT '0',
  `SortId` tinyint(4) NOT NULL COMMENT '排序ID',
  `scType` tinyint(4) NOT NULL COMMENT '生产商',
  `NameRule` text NOT NULL COMMENT '命名规则',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeId` (`TypeId`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=123 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品二级分类表';

-- ----------------------------
-- Table structure for productunit
-- ----------------------------
DROP TABLE IF EXISTS `productunit`;
CREATE TABLE `productunit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品单位';

-- ----------------------------
-- Table structure for productuseway
-- ----------------------------
DROP TABLE IF EXISTS `productuseway`;
CREATE TABLE `productuseway` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(100) NOT NULL COMMENT '产品用途名称',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品用途表';

-- ----------------------------
-- Table structure for product_certification
-- ----------------------------
DROP TABLE IF EXISTS `product_certification`;
CREATE TABLE `product_certification` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Picture` varchar(15) NOT NULL COMMENT '图片文件名(pdf)',
  `Remark` varchar(15) NOT NULL COMMENT '备注说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品认证书表';

-- ----------------------------
-- Table structure for product_ckadress
-- ----------------------------
DROP TABLE IF EXISTS `product_ckadress`;
CREATE TABLE `product_ckadress` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Adress` varchar(200) NOT NULL COMMENT '客户库存存储位置',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品库存的存储位置';

-- ----------------------------
-- Table structure for product_estleadtime
-- ----------------------------
DROP TABLE IF EXISTS `product_estleadtime`;
CREATE TABLE `product_estleadtime` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Estleadtime` varchar(30) NOT NULL COMMENT '交货时间段',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户产品交货时间（用于客户页面）';

-- ----------------------------
-- Table structure for product_pj
-- ----------------------------
DROP TABLE IF EXISTS `product_pj`;
CREATE TABLE `product_pj` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `pj_times` tinyint(4) NOT NULL COMMENT '评价等级',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品登记评价(用于客户CEL）';

-- ----------------------------
-- Table structure for product_proinfo
-- ----------------------------
DROP TABLE IF EXISTS `product_proinfo`;
CREATE TABLE `product_proinfo` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `ProInfo` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for product_property
-- ----------------------------
DROP TABLE IF EXISTS `product_property`;
CREATE TABLE `product_property` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(20) NOT NULL COMMENT '参数名称',
  `Color` varchar(7) NOT NULL DEFAULT '#FFFFFF',
  `pValue` decimal(10,3) NOT NULL COMMENT '参数值',
  `Remark` text NOT NULL COMMENT '参数说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品购买属性表';

-- ----------------------------
-- Table structure for product_returned
-- ----------------------------
DROP TABLE IF EXISTS `product_returned`;
CREATE TABLE `product_returned` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID,关联表：clientdata.CompanyId',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `ReturnMonth` varchar(7) NOT NULL COMMENT '退回月份',
  `eCode` varchar(20) NOT NULL COMMENT '产品英文代码',
  `Qty` bigint(20) NOT NULL COMMENT '退货数量',
  `Price` decimal(8,4) NOT NULL COMMENT '退货价格',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `ReturnMonth` (`ReturnMonth`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品退货表';

-- ----------------------------
-- Table structure for product_size
-- ----------------------------
DROP TABLE IF EXISTS `product_size`;
CREATE TABLE `product_size` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `Width` decimal(6,1) NOT NULL COMMENT '宽度',
  `Length` decimal(6,1) NOT NULL COMMENT '长度',
  `height` decimal(6,1) NOT NULL COMMENT '高度',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户产品规格（用于客户页面)';

-- ----------------------------
-- Table structure for product_weightlist
-- ----------------------------
DROP TABLE IF EXISTS `product_weightlist`;
CREATE TABLE `product_weightlist` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `weight` decimal(9,2) NOT NULL,
  `DateTime` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for projectset_log
-- ----------------------------
DROP TABLE IF EXISTS `projectset_log`;
CREATE TABLE `projectset_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '?',
  `Mid` int(10) NOT NULL DEFAULT '0' COMMENT '?,关联表：stuffdevelop.ID',
  `Remark` text NOT NULL COMMENT '?',
  `Picture` varchar(500) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件开发过程记录表';

-- ----------------------------
-- Table structure for projectset_progress
-- ----------------------------
DROP TABLE IF EXISTS `projectset_progress`;
CREATE TABLE `projectset_progress` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '?',
  `Mid` int(10) NOT NULL DEFAULT '0' COMMENT '?,关联表：stuffdevelop.ID',
  `StratDate` date NOT NULL,
  `EndDate` date NOT NULL,
  `Remark` text NOT NULL COMMENT '?',
  `Picture` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件开发过程记录表';

-- ----------------------------
-- Table structure for projectset_sheet
-- ----------------------------
DROP TABLE IF EXISTS `projectset_sheet`;
CREATE TABLE `projectset_sheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` int(11) NOT NULL COMMENT '项目ID',
  `ItemName` varchar(50) DEFAULT NULL COMMENT '项目名称',
  `TypeId` tinyint(4) NOT NULL DEFAULT '13' COMMENT '研发项目类别,关联表：projectset.Id',
  `Principal` mediumint(9) NOT NULL COMMENT '负责人',
  `Participant` varchar(60) DEFAULT NULL COMMENT '参与者',
  `Description` text NOT NULL COMMENT '项目说明',
  `Attached` varchar(50) DEFAULT NULL COMMENT '上传文件',
  `Currency` tinyint(4) NOT NULL DEFAULT '1' COMMENT '货币符号,关联表：currencydata.ID',
  `Amount` decimal(11,0) NOT NULL DEFAULT '0' COMMENT '费用预算',
  `StartDate` date NOT NULL,
  `EstimatedDate` date NOT NULL COMMENT '预估完成日期',
  `EndDate` date DEFAULT NULL COMMENT '项目完成日期',
  `Remark` text COMMENT '备注',
  `Approval` mediumint(9) DEFAULT NULL COMMENT '审批人',
  `ApprovalDate` date DEFAULT NULL COMMENT '审批时间',
  `ApprovalLog` text COMMENT '审批意见',
  `Accepter` mediumint(9) DEFAULT NULL COMMENT '验收人',
  `AcceptorDate` date DEFAULT NULL COMMENT '验收时间',
  `AcceptorLog` text COMMENT '验收信息',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '1' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='立项';

-- ----------------------------
-- Table structure for projectset_type
-- ----------------------------
DROP TABLE IF EXISTS `projectset_type`;
CREATE TABLE `projectset_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL,
  `Name` varchar(40) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='立项分类';

-- ----------------------------
-- Table structure for providerdata
-- ----------------------------
DROP TABLE IF EXISTS `providerdata`;
CREATE TABLE `providerdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `cSign` tinyint(4) NOT NULL COMMENT '所属公司标识',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Letter` varchar(1) NOT NULL COMMENT '首字母',
  `Forshort` varchar(20) NOT NULL COMMENT '公司简称',
  `PayMode` tinyint(4) NOT NULL COMMENT '付款模式',
  `GysPayMode` tinyint(4) NOT NULL COMMENT '供应商的结付方式',
  `Currency` tinyint(4) NOT NULL COMMENT '结付货币,关联表：currencydata.ID',
  `ExpNum` varchar(50) NOT NULL,
  `PayType` tinyint(4) NOT NULL DEFAULT '0',
  `BankId` tinyint(4) NOT NULL,
  `CompanySignXY` tinyint(2) NOT NULL DEFAULT '0',
  `PriceTerm` varchar(100) NOT NULL,
  `Staff_Number` mediumint(9) NOT NULL,
  `PickNumber` int(1) NOT NULL DEFAULT '0',
  `FscNo` varchar(20) NOT NULL COMMENT 'FSC证书编号',
  `ProviderType` tinyint(4) NOT NULL COMMENT '供应商类型',
  `Prepayment` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否先付款',
  `Judge` varchar(200) NOT NULL COMMENT '评审',
  `LimitTime` tinyint(4) NOT NULL DEFAULT '2' COMMENT '限交货期(天)',
  `PackFile` tinyint(4) NOT NULL DEFAULT '0' COMMENT '胶框图',
  `TipsFile` tinyint(4) NOT NULL DEFAULT '0' COMMENT '提示图',
  `OrderBy` int(6) NOT NULL,
  `ObjectSign` tinyint(2) NOT NULL DEFAULT '3',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 供应商信息表';

-- ----------------------------
-- Table structure for providerpaymode
-- ----------------------------
DROP TABLE IF EXISTS `providerpaymode`;
CREATE TABLE `providerpaymode` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `SortId` int(10) NOT NULL,
  `Name` varchar(30) NOT NULL COMMENT '中文付款日期',
  `Remark` varchar(200) NOT NULL COMMENT '英文付款日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Keys` int(6) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户付款时间限制';

-- ----------------------------
-- Table structure for providerreview
-- ----------------------------
DROP TABLE IF EXISTS `providerreview`;
CREATE TABLE `providerreview` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Year` smallint(4) NOT NULL,
  `Quality` tinyint(4) NOT NULL,
  `Normative` tinyint(4) NOT NULL,
  `Effect` tinyint(4) NOT NULL,
  `Qos` tinyint(4) NOT NULL,
  `Results` tinyint(4) NOT NULL,
  `Reason` text NOT NULL,
  `Verifier` mediumint(9) NOT NULL,
  `Approver` mediumint(9) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`,`Year`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 供应商评估记录表';

-- ----------------------------
-- Table structure for providersheet
-- ----------------------------
DROP TABLE IF EXISTS `providersheet`;
CREATE TABLE `providersheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `LegalPerson` varchar(10) NOT NULL COMMENT '法人代表',
  `BulidTime` date NOT NULL DEFAULT '0000-00-00',
  `ValidTime` varchar(20) NOT NULL COMMENT '有效期',
  `Capital` varchar(20) NOT NULL COMMENT '注册资本',
  `CompanySize` varchar(20) NOT NULL COMMENT '公司规模',
  `StaffNum` varchar(20) NOT NULL COMMENT '员工人数',
  `CompanyNature` tinyint(4) NOT NULL DEFAULT '0' COMMENT '公司性质',
  `CompanyCategory` tinyint(4) NOT NULL DEFAULT '0' COMMENT '公司类别',
  `BLdate` varchar(20) NOT NULL COMMENT '营业执照有效期',
  `TRCdate` varchar(20) NOT NULL COMMENT '税务登记证有效期',
  `PLdate` varchar(20) NOT NULL COMMENT '生产许可证有效期',
  `BusinessLicence` tinyint(2) NOT NULL DEFAULT '0' COMMENT '营业执照(jpg)',
  `TaxCertificate` tinyint(2) NOT NULL DEFAULT '0' COMMENT '税务登记证(jpg)',
  `ProductionCertificate` tinyint(2) NOT NULL DEFAULT '0' COMMENT '生产许可证(jpg)',
  `BankPermit` tinyint(4) NOT NULL DEFAULT '0',
  `SalesAgreement` tinyint(4) NOT NULL DEFAULT '0',
  `PaymentOrder` tinyint(4) NOT NULL DEFAULT '0',
  `TaxpayerIdentifi` tinyint(4) NOT NULL DEFAULT '0' COMMENT '一般纳税人认定书',
  `AddValueTax` tinyint(4) NOT NULL DEFAULT '1',
  `InvoiceTax` decimal(6,2) NOT NULL DEFAULT '0.00',
  `Description` text NOT NULL COMMENT '公司简介',
  `Aptitudes` text NOT NULL COMMENT '资质',
  `EAQF` text NOT NULL COMMENT '质量能力',
  `Quality` tinyint(4) NOT NULL COMMENT '质      量',
  `Normative` tinyint(4) NOT NULL COMMENT '送货时间以及规范性',
  `Effect` tinyint(4) NOT NULL COMMENT '投入生产后的效果',
  `Qos` tinyint(4) NOT NULL COMMENT '服务情况',
  `Results` tinyint(4) NOT NULL COMMENT '评定结论',
  `CompanyPicture` varchar(20) NOT NULL,
  `MainBusiness` text NOT NULL COMMENT '主营业务',
  `DealRange` text NOT NULL COMMENT '经营范围',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `AddValueTax` (`AddValueTax`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商资料明细表';

-- ----------------------------
-- Table structure for providertype
-- ----------------------------
DROP TABLE IF EXISTS `providertype`;
CREATE TABLE `providertype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProviderType` tinyint(4) NOT NULL,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL,
  `OrderBy` int(10) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for provider_addtax
-- ----------------------------
DROP TABLE IF EXISTS `provider_addtax`;
CREATE TABLE `provider_addtax` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Value` decimal(11,2) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for pt_cut_data
-- ----------------------------
DROP TABLE IF EXISTS `pt_cut_data`;
CREATE TABLE `pt_cut_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CutName` varchar(50) NOT NULL,
  `CutSize` varchar(50) DEFAULT NULL,
  `Picture` tinyint(4) NOT NULL DEFAULT '0',
  `Date` datetime NOT NULL,
  `cutSign` tinyint(4) NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `NewSign` tinyint(4) NOT NULL DEFAULT '1',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CutName` (`CutName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for pt_slice_drawing
-- ----------------------------
DROP TABLE IF EXISTS `pt_slice_drawing`;
CREATE TABLE `pt_slice_drawing` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL,
  `CutId` varchar(10) NOT NULL,
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '2',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Diecut` (`CutId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for push_app
-- ----------------------------
DROP TABLE IF EXISTS `push_app`;
CREATE TABLE `push_app` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `token` varchar(128) NOT NULL COMMENT '推送设备钥匙',
  `bundleId` varchar(100) NOT NULL COMMENT '推送项目',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 设备信息推送登记表';

-- ----------------------------
-- Table structure for push_clientapp
-- ----------------------------
DROP TABLE IF EXISTS `push_clientapp`;
CREATE TABLE `push_clientapp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `token` varchar(100) NOT NULL COMMENT '设备钥匙',
  `bundleId` varchar(20) NOT NULL COMMENT 'APP程序ID',
  `userId` varchar(10) NOT NULL COMMENT '用户ID,关联表：usertable.userid',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `token` (`token`,`bundleId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户APP推送注册信息表';

-- ----------------------------
-- Table structure for push_dfp_nopic
-- ----------------------------
DROP TABLE IF EXISTS `push_dfp_nopic`;
CREATE TABLE `push_dfp_nopic` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `DateTime` varchar(20) DEFAULT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for push_gyssh
-- ----------------------------
DROP TABLE IF EXISTS `push_gyssh`;
CREATE TABLE `push_gyssh` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ModuleId` int(9) NOT NULL COMMENT '功能模块ID',
  `StuffId` int(9) NOT NULL COMMENT '配件ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商送货到达信息推送(APP)';

-- ----------------------------
-- Table structure for push_mainapp
-- ----------------------------
DROP TABLE IF EXISTS `push_mainapp`;
CREATE TABLE `push_mainapp` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `token` varchar(100) NOT NULL COMMENT '设备钥匙',
  `bundleId` varchar(20) NOT NULL COMMENT 'APP程序ID',
  `userId` varchar(10) NOT NULL COMMENT '用户ID,关联表：staffmain.Number',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `token` (`token`,`bundleId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' APP推送注册信息表';

-- ----------------------------
-- Table structure for push_stuff
-- ----------------------------
DROP TABLE IF EXISTS `push_stuff`;
CREATE TABLE `push_stuff` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ModuleId` int(9) NOT NULL COMMENT '功能模块ID',
  `StuffId` int(9) NOT NULL COMMENT '配件ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=66 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件需处理信息推送(APP)';

-- ----------------------------
-- Table structure for qcdatarecord
-- ----------------------------
DROP TABLE IF EXISTS `qcdatarecord`;
CREATE TABLE `qcdatarecord` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `stuffId` int(11) DEFAULT NULL,
  `qty` int(11) DEFAULT NULL,
  `relation` int(11) DEFAULT NULL,
  `date` datetime DEFAULT NULL,
  `operator` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for qcstandarddata
-- ----------------------------
DROP TABLE IF EXISTS `qcstandarddata`;
CREATE TABLE `qcstandarddata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` int(11) NOT NULL COMMENT '产品类型,关联表：producttype.TypeId',
  `Title` text NOT NULL COMMENT '说明',
  `Picture` text NOT NULL COMMENT '类图文件名(pdf)',
  `IsType` tinyint(4) NOT NULL COMMENT '图的分类',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' QC检验标准图表';

-- ----------------------------
-- Table structure for qcstandardimg
-- ----------------------------
DROP TABLE IF EXISTS `qcstandardimg`;
CREATE TABLE `qcstandardimg` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `QcId` int(10) NOT NULL COMMENT 'QC标准备自动ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' QC标准图链接表';

-- ----------------------------
-- Table structure for qcstandardless
-- ----------------------------
DROP TABLE IF EXISTS `qcstandardless`;
CREATE TABLE `qcstandardless` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品ID',
  `QcId` int(10) NOT NULL COMMENT 'QC标准备自动ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='标准图关联类图产品剔除记录表';

-- ----------------------------
-- Table structure for qc_badrecord
-- ----------------------------
DROP TABLE IF EXISTS `qc_badrecord`;
CREATE TABLE `qc_badrecord` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Sid` int(10) NOT NULL DEFAULT '0',
  `shMid` int(10) NOT NULL COMMENT '供应商送货单明细Mid',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `shQty` decimal(11,2) NOT NULL COMMENT '收货数',
  `checkQty` decimal(11,2) NOT NULL COMMENT '品检数',
  `Qty` decimal(11,2) NOT NULL COMMENT '不良数量',
  `AQL` varchar(6) NOT NULL COMMENT '品检标准',
  `Remark` text NOT NULL COMMENT '检验备注',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Sid` (`Sid`) USING BTREE,
  KEY `StockId` (`StockId`,`StuffId`) USING BTREE,
  KEY `AQL` (`AQL`) USING BTREE,
  KEY `shMid` (`shMid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5860 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件不良记录原因主表';

-- ----------------------------
-- Table structure for qc_badrecordfile
-- ----------------------------
DROP TABLE IF EXISTS `qc_badrecordfile`;
CREATE TABLE `qc_badrecordfile` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '不良记录主表自动ID,关联表：qc_badrecord.ID',
  `Picture` varchar(50) NOT NULL COMMENT '是否有图标志',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不良记录原因文件表';

-- ----------------------------
-- Table structure for qc_badrecordsheet
-- ----------------------------
DROP TABLE IF EXISTS `qc_badrecordsheet`;
CREATE TABLE `qc_badrecordsheet` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '不良记录主表自动ID,关联表：qc_badrecord.ID',
  `CauseId` int(10) NOT NULL COMMENT '不良原因ID',
  `Qty` int(11) NOT NULL,
  `Reason` text,
  `Picture` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `CauseId` (`CauseId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不良记录原因明细表';

-- ----------------------------
-- Table structure for qc_causetype
-- ----------------------------
DROP TABLE IF EXISTS `qc_causetype`;
CREATE TABLE `qc_causetype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Cause` varchar(50) NOT NULL COMMENT '不良原因',
  `Type` mediumint(6) NOT NULL COMMENT '配件分类',
  `Picture` varchar(50) NOT NULL COMMENT '不良图片文件件(pdf)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='不良原因分类表';

-- ----------------------------
-- Table structure for qc_cjtj
-- ----------------------------
DROP TABLE IF EXISTS `qc_cjtj`;
CREATE TABLE `qc_cjtj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Sid` int(11) NOT NULL COMMENT 'gys_shsheet.Id',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `StuffId` int(11) NOT NULL COMMENT '配件Id',
  `Qty` decimal(11,2) NOT NULL COMMENT '本次登记数量',
  `LineId` tinyint(4) NOT NULL,
  `Remark` text NOT NULL COMMENT '品检备注',
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `stacked` datetime DEFAULT NULL,
  `recordId` int(11) DEFAULT '0' COMMENT '抽检登记的批量Id',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='品检登记表';

-- ----------------------------
-- Table structure for qc_currentcheck
-- ----------------------------
DROP TABLE IF EXISTS `qc_currentcheck`;
CREATE TABLE `qc_currentcheck` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `line` varchar(10) DEFAULT NULL,
  `LineId` int(11) NOT NULL DEFAULT '0',
  `gys_Id` int(11) NOT NULL DEFAULT '0',
  `StockId` varchar(20) DEFAULT NULL,
  `stuffId` int(11) DEFAULT NULL,
  `datetime` datetime DEFAULT NULL,
  `line_app` text,
  `number` int(11) DEFAULT NULL,
  `weight` decimal(10,3) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for qc_delete
-- ----------------------------
DROP TABLE IF EXISTS `qc_delete`;
CREATE TABLE `qc_delete` (
  `Id` int(10) unsigned DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for qc_levels
-- ----------------------------
DROP TABLE IF EXISTS `qc_levels`;
CREATE TABLE `qc_levels` (
  `Id` int(4) unsigned NOT NULL AUTO_INCREMENT,
  `AQL` varchar(6) NOT NULL COMMENT '品检标准',
  `Code` varchar(2) NOT NULL COMMENT '内部标准代码',
  `Ac` tinyint(4) NOT NULL COMMENT '允收',
  `Re` tinyint(4) NOT NULL COMMENT '拒收',
  `Lotsize` int(5) NOT NULL DEFAULT '0' COMMENT '最低检查数量标准',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `AQL` (`AQL`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=121 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='QC标准对照表－横表';

-- ----------------------------
-- Table structure for qc_lotsize
-- ----------------------------
DROP TABLE IF EXISTS `qc_lotsize`;
CREATE TABLE `qc_lotsize` (
  `Id` int(4) unsigned NOT NULL AUTO_INCREMENT,
  `Code` varchar(2) NOT NULL COMMENT '内部标准代码',
  `Start` mediumint(9) NOT NULL COMMENT '抽检数量下限',
  `End` mediumint(9) NOT NULL COMMENT '抽检数量上限',
  `SampleSize` mediumint(9) NOT NULL COMMENT '抽检数量',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Code` (`Code`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='QC标准对照表－竖表';

-- ----------------------------
-- Table structure for qc_mission
-- ----------------------------
DROP TABLE IF EXISTS `qc_mission`;
CREATE TABLE `qc_mission` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Sid` int(11) NOT NULL COMMENT '送货单明细ID号',
  `LineId` tinyint(4) NOT NULL COMMENT '拉线号',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `rkSign` tinyint(4) NOT NULL DEFAULT '1',
  `DateTime` datetime NOT NULL COMMENT '拉线分配时间',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Sid` (`Sid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='品检任务分配表';

-- ----------------------------
-- Table structure for qc_remark
-- ----------------------------
DROP TABLE IF EXISTS `qc_remark`;
CREATE TABLE `qc_remark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Sid` int(11) NOT NULL COMMENT 'gys_shsheet.Id',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Sid` (`Sid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='品检备注信息表';

-- ----------------------------
-- Table structure for qc_scline
-- ----------------------------
DROP TABLE IF EXISTS `qc_scline`;
CREATE TABLE `qc_scline` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Floor` tinyint(4) NOT NULL,
  `LineNo` varchar(1) NOT NULL COMMENT '线号',
  `Line` varchar(20) DEFAULT NULL,
  `Name` varchar(50) NOT NULL COMMENT '名称',
  `RefreshTV` varchar(50) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `LineNo` (`LineNo`,`Floor`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='品检作业线信息表';

-- ----------------------------
-- Table structure for qjtype
-- ----------------------------
DROP TABLE IF EXISTS `qjtype`;
CREATE TABLE `qjtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL,
  `Remark` text NOT NULL,
  `dxTimes` decimal(3,1) NOT NULL,
  `jtTimes` decimal(3,1) NOT NULL,
  `Days` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for qualitygrade
-- ----------------------------
DROP TABLE IF EXISTS `qualitygrade`;
CREATE TABLE `qualitygrade` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Grade` varchar(20) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for qualitymoregrade
-- ----------------------------
DROP TABLE IF EXISTS `qualitymoregrade`;
CREATE TABLE `qualitymoregrade` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Moregrade` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for redeployb
-- ----------------------------
DROP TABLE IF EXISTS `redeployb`;
CREATE TABLE `redeployb` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `ActionOut` tinyint(4) NOT NULL,
  `ActionIn` tinyint(4) NOT NULL,
  `Month` varchar(7) DEFAULT '',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for redeployg
-- ----------------------------
DROP TABLE IF EXISTS `redeployg`;
CREATE TABLE `redeployg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `ActionOut` tinyint(4) NOT NULL,
  `ActionIn` tinyint(4) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for redeployj
-- ----------------------------
DROP TABLE IF EXISTS `redeployj`;
CREATE TABLE `redeployj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `ActionOut` tinyint(4) NOT NULL,
  `ActionIn` tinyint(4) NOT NULL,
  `Month` varchar(7) DEFAULT '',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for redeployk
-- ----------------------------
DROP TABLE IF EXISTS `redeployk`;
CREATE TABLE `redeployk` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `ActionOut` tinyint(4) NOT NULL,
  `ActionIn` tinyint(4) NOT NULL,
  `Month` varchar(7) DEFAULT '',
  `AutoTime` timestamp NULL DEFAULT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for reducewage
-- ----------------------------
DROP TABLE IF EXISTS `reducewage`;
CREATE TABLE `reducewage` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(11) DEFAULT NULL,
  `Month` varchar(7) DEFAULT NULL,
  `wage` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for res_drivers
-- ----------------------------
DROP TABLE IF EXISTS `res_drivers`;
CREATE TABLE `res_drivers` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` int(11) NOT NULL,
  `Name` varchar(50) NOT NULL,
  `Remark` text NOT NULL,
  `Attached` varchar(20) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for res_driverstype
-- ----------------------------
DROP TABLE IF EXISTS `res_driverstype`;
CREATE TABLE `res_driverstype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for retailerdata
-- ----------------------------
DROP TABLE IF EXISTS `retailerdata`;
CREATE TABLE `retailerdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `cName` varchar(50) NOT NULL COMMENT '公司名称',
  `Linkman` varchar(10) NOT NULL COMMENT '联系人',
  `Tel` varchar(30) NOT NULL COMMENT '联系电话',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `cName` (`cName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='总务供应商资料';

-- ----------------------------
-- Table structure for returnreason
-- ----------------------------
DROP TABLE IF EXISTS `returnreason`;
CREATE TABLE `returnreason` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `tableId` int(11) NOT NULL,
  `targetTable` varchar(50) NOT NULL,
  `Reason` varchar(100) NOT NULL,
  `DateTime` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `tableId` (`tableId`,`targetTable`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for rprdata
-- ----------------------------
DROP TABLE IF EXISTS `rprdata`;
CREATE TABLE `rprdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(1) NOT NULL,
  `Name` varchar(20) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for rp_produce
-- ----------------------------
DROP TABLE IF EXISTS `rp_produce`;
CREATE TABLE `rp_produce` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '自增Id',
  `WorkDate` varchar(255) NOT NULL COMMENT '日期',
  `WorkShop` varchar(255) NOT NULL COMMENT '生产线',
  `WorkGroup` varchar(255) DEFAULT NULL COMMENT '班组',
  `PlanCube` varchar(255) DEFAULT NULL COMMENT '计划量',
  `FinishedCube` varchar(255) DEFAULT NULL COMMENT '实际完成方量',
  `AttainmentRate` varchar(255) DEFAULT NULL COMMENT '达成率',
  `WorkHours` varchar(255) DEFAULT NULL COMMENT '出勤工时',
  `WorkerNum` varchar(255) DEFAULT NULL COMMENT '出勤人数',
  `DPCEffy` varchar(255) DEFAULT NULL COMMENT '每日人均效率',
  `PCHourlyEffy` varchar(255) DEFAULT NULL COMMENT '人均小时效率',
  `CauseAnalysis` varchar(255) DEFAULT NULL COMMENT '未达成原因分析',
  `creator` int(11) DEFAULT NULL COMMENT '创建人',
  `created` datetime DEFAULT NULL COMMENT '创建时间',
  `confirmer` int(11) DEFAULT NULL COMMENT '确认人',
  `confirmed` datetime DEFAULT NULL COMMENT '确定时间',
  `confirm` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否确定，0：未确定；1：确定',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=104 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产报表';

-- ----------------------------
-- Table structure for rp_projectprogress
-- ----------------------------
DROP TABLE IF EXISTS `rp_projectprogress`;
CREATE TABLE `rp_projectprogress` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增Id',
  `TradeNo` varchar(255) NOT NULL COMMENT '项目编号',
  `TradeName` varchar(255) DEFAULT NULL COMMENT '项目名称',
  `CmptType` varchar(255) DEFAULT NULL COMMENT '构件类别',
  `HoistFloors` varchar(255) DEFAULT NULL COMMENT '吊装总层数',
  `WorkFloor` varchar(255) DEFAULT NULL COMMENT '施工楼层',
  `TotalCube` varchar(255) DEFAULT NULL COMMENT '总方量',
  `CmptTotal` varchar(255) DEFAULT NULL COMMENT '构件总数量',
  `FinishedCube` varchar(255) DEFAULT NULL COMMENT '生产完成方量',
  `DeliveredCube` varchar(255) DEFAULT NULL COMMENT '发货方量',
  `FCmptDTime` varchar(255) DEFAULT NULL COMMENT '首批构件供货时间',
  `CmptETime` varchar(255) DEFAULT NULL COMMENT '构件生产结束时间',
  `UpdatedTime` varchar(255) DEFAULT NULL COMMENT '跟新时间',
  `creator` int(11) DEFAULT NULL COMMENT '创建者',
  `created` datetime DEFAULT NULL COMMENT '创建时间',
  `confirmer` int(11) DEFAULT NULL COMMENT '确定人',
  `confirmed` datetime DEFAULT NULL COMMENT '确定时间',
  `confirm` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否确定，0：未确定；1：确定',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='项目进度报表';

-- ----------------------------
-- Table structure for rs_casualty
-- ----------------------------
DROP TABLE IF EXISTS `rs_casualty`;
CREATE TABLE `rs_casualty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Month` varchar(7) NOT NULL COMMENT '月份',
  `NewNumber` mediumint(9) NOT NULL COMMENT '新的员工号',
  `OldNumber` mediumint(9) NOT NULL COMMENT '旧的员工号',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`NewNumber`) USING BTREE,
  KEY `NewNumber` (`NewNumber`) USING BTREE,
  KEY `OldNumber` (`OldNumber`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='意外险更换人记录表';

-- ----------------------------
-- Table structure for rs_casualty_picture
-- ----------------------------
DROP TABLE IF EXISTS `rs_casualty_picture`;
CREATE TABLE `rs_casualty_picture` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Mid` int(11) NOT NULL COMMENT '意外险缴费自动ID,关联表：sbpaysheet.ID',
  `Picture` varchar(30) NOT NULL COMMENT '单据文件名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='意外险单据上传表';

-- ----------------------------
-- Table structure for rs_kcgl
-- ----------------------------
DROP TABLE IF EXISTS `rs_kcgl`;
CREATE TABLE `rs_kcgl` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Months` int(11) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for rs_sbjf_picture
-- ----------------------------
DROP TABLE IF EXISTS `rs_sbjf_picture`;
CREATE TABLE `rs_sbjf_picture` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Mid` int(11) NOT NULL COMMENT '意外险缴费自动ID,关联表：sbpaysheet.ID',
  `chooseMonth` varchar(10) NOT NULL,
  `TypeId` tinyint(2) NOT NULL,
  `Picture` varchar(40) NOT NULL COMMENT '单据文件名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='意外险单据上传表';

-- ----------------------------
-- Table structure for rs_sbtype
-- ----------------------------
DROP TABLE IF EXISTS `rs_sbtype`;
CREATE TABLE `rs_sbtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(20) NOT NULL COMMENT '社保类型名',
  `cAmount` decimal(6,2) NOT NULL COMMENT '公司缴费',
  `mAmount` decimal(6,2) NOT NULL COMMENT '个人缴费',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='社保参数设定表';

-- ----------------------------
-- Table structure for sale_advancesreceived
-- ----------------------------
DROP TABLE IF EXISTS `sale_advancesreceived`;
CREATE TABLE `sale_advancesreceived` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0',
  `Mid` int(11) NOT NULL COMMENT '关联预收货款主表,关联表：cw6_orderinmain.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '预收金额',
  `Remark` text NOT NULL,
  `PayDate` date NOT NULL COMMENT '时间',
  `Attached` varchar(20) NOT NULL COMMENT '附件(jpg)',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预收货款列表';

-- ----------------------------
-- Table structure for sale_fkdjmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_fkdjmain`;
CREATE TABLE `sale_fkdjmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` tinyint(4) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商预付订金主表';

-- ----------------------------
-- Table structure for sale_fkdjsheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_fkdjsheet`;
CREATE TABLE `sale_fkdjsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '关联供应商预付定金主表,关联表：cw2_fkdjmain.ID',
  `Did` int(11) NOT NULL COMMENT '供应商货款结付主表,关联表：cw1_fkoutmain.ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '订金分类',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `PurchaseID` varchar(12) DEFAULT NULL COMMENT '采购单号',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商预付订金明细表';

-- ----------------------------
-- Table structure for sale_fkoutmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_fkoutmain`;
CREATE TABLE `sale_fkoutmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '银行ID,关联表：my2_bankinfo.ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `djAmount` decimal(10,3) NOT NULL COMMENT '订金抵扣',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对账单',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商货款主表';

-- ----------------------------
-- Table structure for sale_fkoutsheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_fkoutsheet`;
CREATE TABLE `sale_fkoutsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` mediumint(9) NOT NULL COMMENT '关联供应商货款主表,关联表：cw1_fkoutmain.ID',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '使用库存数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实际数量',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '总数',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `Month` varchar(7) NOT NULL,
  `AutoSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '请款操作标志',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='供应商货款明细表';

-- ----------------------------
-- Table structure for sale_lockstock
-- ----------------------------
DROP TABLE IF EXISTS `sale_lockstock`;
CREATE TABLE `sale_lockstock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text COMMENT '详细内容说明',
  `ReturnReasons` varchar(200) NOT NULL,
  `LockDate` date NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单锁定表';

-- ----------------------------
-- Table structure for sale_orderdel
-- ----------------------------
DROP TABLE IF EXISTS `sale_orderdel`;
CREATE TABLE `sale_orderdel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OrderPO` varchar(20) NOT NULL COMMENT 'OrderPO',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品编号',
  `Qty` mediumint(9) NOT NULL COMMENT '删单数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `delType` tinyint(4) NOT NULL COMMENT '删除类别',
  `Attached` varchar(20) NOT NULL COMMENT '删除附件(pdf,jpg,....)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Remark` text NOT NULL COMMENT '单订内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `delType` (`delType`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  订单删除审核表';

-- ----------------------------
-- Table structure for sale_orderexpress
-- ----------------------------
DROP TABLE IF EXISTS `sale_orderexpress`;
CREATE TABLE `sale_orderexpress` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL COMMENT '备注说明',
  `ReturnReasons` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单加急记录表';

-- ----------------------------
-- Table structure for sale_orderinmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_orderinmain`;
CREATE TABLE `sale_orderinmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL COMMENT '银行ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `PreAmount` decimal(10,3) NOT NULL COMMENT '抵预付款金额',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '实收金额',
  `Handingfee` decimal(10,3) NOT NULL COMMENT '手续费',
  `Remark` text NOT NULL,
  `PayDate` date NOT NULL COMMENT '结付日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户订单收款主表';

-- ----------------------------
-- Table structure for sale_orderinsheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_orderinsheet`;
CREATE TABLE `sale_orderinsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '主表ID,关联表：cw6_orderinmain.w6_orderinmain_ID',
  `chId` int(11) NOT NULL COMMENT '出货主表ID,关联表：ch1_shipmain.ID',
  `Amount` decimal(10,3) NOT NULL COMMENT '收款金额',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `chId` (`chId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='客户订单收款明细表';

-- ----------------------------
-- Table structure for sale_orderlock
-- ----------------------------
DROP TABLE IF EXISTS `sale_orderlock`;
CREATE TABLE `sale_orderlock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL COMMENT '备注说明',
  `ReturnReasons` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单锁定表';

-- ----------------------------
-- Table structure for sale_ordermain
-- ----------------------------
DROP TABLE IF EXISTS `sale_ordermain`;
CREATE TABLE `sale_ordermain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `OrderPO` varchar(20) NOT NULL,
  `OrderDate` date NOT NULL COMMENT '下单日期',
  `ClientOrder` varchar(20) NOT NULL DEFAULT '' COMMENT '客户原始单号',
  `Type` tinyint(4) NOT NULL COMMENT '用来区分不同公司的销售订单类型',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='销售订单主表';

-- ----------------------------
-- Table structure for sale_ordersheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_ordersheet`;
CREATE TABLE `sale_ordersheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '业务订单主流水号',
  `OrderPO` varchar(20) NOT NULL COMMENT 'OrderPO',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` mediumint(9) NOT NULL COMMENT '数量',
  `Price` decimal(10,5) NOT NULL COMMENT '价格',
  `Remark` text NOT NULL COMMENT '订单备注',
  `DeliveryDate` date NOT NULL DEFAULT '0000-00-00',
  `ShipType` text NOT NULL COMMENT '出货方式',
  `scFrom` tinyint(4) NOT NULL DEFAULT '7' COMMENT '生产状态',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='销售订单明细表';

-- ----------------------------
-- Table structure for sale_packinglist
-- ----------------------------
DROP TABLE IF EXISTS `sale_packinglist`;
CREATE TABLE `sale_packinglist` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '出货主表,关联表：ch1_shipmain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `BoxRow` tinyint(4) NOT NULL COMMENT '并箱标志',
  `BoxPcs` varchar(10) NOT NULL COMMENT '数量/每箱',
  `BoxQty` mediumint(9) NOT NULL COMMENT '箱数',
  `WG` float(6,2) NOT NULL COMMENT '重量',
  `FullQty` mediumint(9) NOT NULL COMMENT '当前行合计总数量',
  `BoxSpec` varchar(16) NOT NULL COMMENT '外箱尺寸',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='未装箱出货列表 ';

-- ----------------------------
-- Table structure for sale_pileadtime
-- ----------------------------
DROP TABLE IF EXISTS `sale_pileadtime`;
CREATE TABLE `sale_pileadtime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Leadtime` text NOT NULL COMMENT '交期',
  `Leadweek` mediumint(6) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Leadweek` (`Leadweek`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购决定PI交期表';

-- ----------------------------
-- Table structure for sale_pisheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_pisheet`;
CREATE TABLE `sale_pisheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `oId` int(11) unsigned DEFAULT NULL COMMENT '订单明细表ID',
  `PI` varchar(20) NOT NULL COMMENT 'PI号',
  `Leadtime` text NOT NULL COMMENT '交货期',
  `Leadweek` mediumint(6) NOT NULL DEFAULT '0' COMMENT '交货周数',
  `Paymentterm` varchar(250) NOT NULL COMMENT '支付规则',
  `Notes` text NOT NULL COMMENT '提示',
  `OtherNotes` varchar(30) NOT NULL COMMENT '其它提示',
  `Terms` text NOT NULL,
  `ShipTo` text COMMENT '出货方式',
  `SoldTo` text,
  `condition` varchar(200) DEFAULT ' ',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '记录生成日期',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `oId` (`oId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PI` (`PI`) USING BTREE,
  KEY `Leadweek` (`Leadweek`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' pi列表';

-- ----------------------------
-- Table structure for sale_productdata
-- ----------------------------
DROP TABLE IF EXISTS `sale_productdata`;
CREATE TABLE `sale_productdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户',
  `SalePrice` decimal(11,3) NOT NULL COMMENT '产品价格',
  `SuplierId` mediumint(9) NOT NULL COMMENT '默认供应商',
  `BuyerId` mediumint(9) NOT NULL,
  `SaleBoxSpec` varchar(16) DEFAULT NULL COMMENT '外箱尺寸',
  `SaleBoxPcs` varchar(10) DEFAULT '0' COMMENT '装箱数量',
  `GWeight` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '毛重',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `SuplierId` (`SuplierId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 产品数据表研砼对外销售参数';

-- ----------------------------
-- Table structure for sale_productstock
-- ----------------------------
DROP TABLE IF EXISTS `sale_productstock`;
CREATE TABLE `sale_productstock` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `tStockQty` int(6) NOT NULL COMMENT '实物库存',
  `oStockQty` int(6) DEFAULT '0' COMMENT '可用库存',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='产品库存表';

-- ----------------------------
-- Table structure for sale_rkmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_rkmain`;
CREATE TABLE `sale_rkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(15) NOT NULL COMMENT '供应商单号',
  `GysBillNumber` varchar(100) NOT NULL,
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Remark` text NOT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  FULLTEXT KEY `Remark` (`Remark`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库主表';

-- ----------------------------
-- Table structure for sale_rksheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_rksheet`;
CREATE TABLE `sale_rksheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Price` decimal(11,2) DEFAULT '0.00',
  `Qty` decimal(11,2) NOT NULL COMMENT '入库数量',
  `gys_Id` int(10) DEFAULT NULL,
  `Type` tinyint(3) NOT NULL COMMENT '入库类别：1、采购入库；2、备品转入;3、补仓入库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `gys_Id` (`gys_Id`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库明细表';

-- ----------------------------
-- Table structure for sale_sampsheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_sampsheet`;
CREATE TABLE `sale_sampsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `SampId` mediumint(9) NOT NULL COMMENT '寄样ID',
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `SampPO` varchar(50) NOT NULL COMMENT '样品PO',
  `SampName` varchar(100) NOT NULL COMMENT '中文注释',
  `Description` varchar(100) NOT NULL COMMENT '英文注释',
  `Qty` mediumint(9) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Weight` decimal(8,2) NOT NULL DEFAULT '0.00' COMMENT '重量(KG)',
  `Type` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `SampId` (`SampId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='随货样品列表 ';

-- ----------------------------
-- Table structure for sale_shipmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_shipmain`;
CREATE TABLE `sale_shipmain` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `ModelId` int(11) NOT NULL COMMENT '出货模板ID,关联表：ch8_shipmodel.ID',
  `BankId` tinyint(4) NOT NULL DEFAULT '1' COMMENT '收款账户,关联表：my2_bankinfo.ID',
  `InvoiceNO` varchar(40) NOT NULL COMMENT 'InvoiceNO称',
  `InvoiceFile` tinyint(4) NOT NULL,
  `Wise` varchar(100) NOT NULL DEFAULT '',
  `Notes` text NOT NULL COMMENT '注意事项',
  `Terms` text NOT NULL COMMENT '出货事项',
  `PaymentTerm` varchar(200) NOT NULL COMMENT '支付事项',
  `PreSymbol` varchar(1) NOT NULL COMMENT '标志',
  `Sign` tinyint(4) NOT NULL COMMENT '特定Invoice文件',
  `Ship` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '出货方式',
  `ShipType` varchar(20) NOT NULL COMMENT '出货类型(正常出货，debit,credit)',
  `cwSign` tinyint(4) NOT NULL,
  `Remark` varchar(200) NOT NULL COMMENT '详细说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `InvoiceNO` (`InvoiceNO`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `ClientId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货主表';

-- ----------------------------
-- Table structure for sale_shippicture
-- ----------------------------
DROP TABLE IF EXISTS `sale_shippicture`;
CREATE TABLE `sale_shippicture` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '出货主表,关联表：ch1_shipmain.ID',
  `Remark` varchar(50) NOT NULL,
  `Picture` varchar(15) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货附加文件表';

-- ----------------------------
-- Table structure for sale_shipsheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_shipsheet`;
CREATE TABLE `sale_shipsheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联出货主表,关联表：ch1_shipmain.ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Type` tinyint(4) NOT NULL,
  `YandN` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(3) unsigned DEFAULT NULL,
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出货明细表';

-- ----------------------------
-- Table structure for sale_stockmain
-- ----------------------------
DROP TABLE IF EXISTS `sale_stockmain`;
CREATE TABLE `sale_stockmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `BuyerId` mediumint(9) NOT NULL DEFAULT '0',
  `PurchaseID` varchar(12) NOT NULL COMMENT '采购单号',
  `DeliveryDate` date NOT NULL DEFAULT '0000-00-00',
  `Remark` text NOT NULL COMMENT '备注说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `PurchaseID` (`PurchaseID`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='销售采购单主表';

-- ----------------------------
-- Table structure for sale_stocksheet
-- ----------------------------
DROP TABLE IF EXISTS `sale_stocksheet`;
CREATE TABLE `sale_stocksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL COMMENT '关联采购主单自动ID,关联表：cg1_stockmain.ID',
  `StockId` varchar(15) NOT NULL DEFAULT '' COMMENT '采购单流水号',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Relation` varchar(50) DEFAULT NULL,
  `Price` decimal(12,2) NOT NULL COMMENT '单价',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `StockQty` decimal(11,2) NOT NULL COMMENT '采购数量',
  `AddQty` decimal(11,2) NOT NULL COMMENT '增购数量',
  `FactualQty` decimal(11,2) NOT NULL COMMENT '实购数量',
  `CompanyId` varchar(8) NOT NULL COMMENT '供商商ID',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购员人员,关联表：staffmain.Number',
  `DeliveryDate` date NOT NULL COMMENT '交付日期',
  `DeliveryWeek` mediumint(6) NOT NULL DEFAULT '0' COMMENT '交货周期',
  `StockRemark` text NOT NULL,
  `AddRemark` text NOT NULL COMMENT '补充说明',
  `cgSign` tinyint(4) NOT NULL DEFAULT '0',
  `rkSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '入库标记:1未入库，2､部分入库，0已入库',
  `ywOrderDTime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StuffId` (`ProductId`) USING BTREE,
  KEY `BuyerId` (`BuyerId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `DeliveryDate` (`DeliveryDate`) USING BTREE,
  KEY `DeliveryWeek` (`DeliveryWeek`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='销售采购单明细表';

-- ----------------------------
-- Table structure for sbdata
-- ----------------------------
DROP TABLE IF EXISTS `sbdata`;
CREATE TABLE `sbdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Type` tinyint(4) NOT NULL DEFAULT '1',
  `sMonth` varchar(7) NOT NULL,
  `eMonth` varchar(7) NOT NULL,
  `Note` varchar(200) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sbpaymain
-- ----------------------------
DROP TABLE IF EXISTS `sbpaymain`;
CREATE TABLE `sbpaymain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '银行ID',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付总金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证',
  `Receipt` tinyint(4) NOT NULL COMMENT '结付回执图档',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单',
  `Remark` text NOT NULL COMMENT '支付情况说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 社保结付主表';

-- ----------------------------
-- Table structure for sbpaysheet
-- ----------------------------
DROP TABLE IF EXISTS `sbpaysheet`;
CREATE TABLE `sbpaysheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `TypeId` tinyint(4) NOT NULL DEFAULT '1' COMMENT '结付类型',
  `BranchId` tinyint(4) NOT NULL COMMENT '部门ID,关联表：branchdata.ID',
  `JobId` smallint(6) NOT NULL COMMENT '职位ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工号,关联表：staffmain.Number',
  `Month` varchar(7) NOT NULL COMMENT '请款月份',
  `ValidMonth` varchar(7) NOT NULL DEFAULT '0000-00',
  `mAmount` decimal(6,2) DEFAULT NULL COMMENT '个人支付',
  `cAmount` decimal(6,2) DEFAULT NULL COMMENT '公司支付',
  `bPension` decimal(6,2) DEFAULT NULL COMMENT '养老保险基数',
  `mPension` decimal(6,2) DEFAULT NULL COMMENT '个人养老保险',
  `cPension` decimal(6,2) DEFAULT NULL COMMENT '公司养老保险',
  `bMedical` decimal(6,2) DEFAULT NULL COMMENT '医疗保险基数',
  `mMedical` decimal(6,2) DEFAULT NULL COMMENT '个人医疗保险',
  `cMedical` decimal(6,2) DEFAULT NULL COMMENT '公司医疗保险',
  `bInjury` decimal(6,2) DEFAULT NULL COMMENT '工伤保险基数',
  `cInjury` decimal(6,2) DEFAULT NULL COMMENT '公司工伤保险',
  `bUnemploy` decimal(6,2) DEFAULT NULL COMMENT '失业保险基数',
  `mUnemploy` decimal(6,2) DEFAULT NULL COMMENT '个人失业保险',
  `cUnemploy` decimal(6,2) DEFAULT NULL COMMENT '公司失业保险',
  `bBirth` decimal(6,2) DEFAULT NULL COMMENT '生育医疗基数',
  `cBirth` decimal(6,2) DEFAULT NULL COMMENT '公司生育医疗',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Mid` int(11) NOT NULL COMMENT '结付主表ID,关联表：d7.sbpaymain',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `Month` (`Month`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 社保结付明细表';

-- ----------------------------
-- Table structure for sbpay_audit
-- ----------------------------
DROP TABLE IF EXISTS `sbpay_audit`;
CREATE TABLE `sbpay_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='社保费审核';

-- ----------------------------
-- Table structure for sc1_cjtj
-- ----------------------------
DROP TABLE IF EXISTS `sc1_cjtj`;
CREATE TABLE `sc1_cjtj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `GroupId` int(11) NOT NULL COMMENT '小组ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `sPOrderId` varchar(13) NOT NULL,
  `StockId` varchar(15) DEFAULT NULL,
  `Qty` decimal(11,2) NOT NULL COMMENT '本次生产数量',
  `Remark` text NOT NULL COMMENT '生产备注',
  `boxId` varchar(40) DEFAULT NULL COMMENT '自动登记时的箱号',
  `Weight` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '记录每箱的重量',
  `Date` date DEFAULT NULL COMMENT '记录生成日期,已改成日期，不要再改成时间',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Leader` mediumint(9) NOT NULL COMMENT '班长',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=13129 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车间生产登记表';

-- ----------------------------
-- Table structure for sc1_gxtj
-- ----------------------------
DROP TABLE IF EXISTS `sc1_gxtj`;
CREATE TABLE `sc1_gxtj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `GroupId` int(11) NOT NULL,
  `sPOrderId` varchar(13) NOT NULL,
  `ProcessId` mediumint(9) NOT NULL,
  `POrderId` varchar(12) NOT NULL,
  `StockId` varchar(15) NOT NULL,
  `Qty` mediumint(9) NOT NULL,
  `Remark` text NOT NULL,
  `LastPos` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date NOT NULL,
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Leader` mediumint(9) NOT NULL,
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `ProcessId` (`ProcessId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sc1_memberset
-- ----------------------------
DROP TABLE IF EXISTS `sc1_memberset`;
CREATE TABLE `sc1_memberset` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `GroupId` int(11) NOT NULL COMMENT '小组ID',
  `Number` mediumint(9) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `KqSign` tinyint(4) NOT NULL COMMENT '考勤标识',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `Number_2` (`Number`,`Date`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=19450 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 当天生产人员设置表';

-- ----------------------------
-- Table structure for sc1_mission
-- ----------------------------
DROP TABLE IF EXISTS `sc1_mission`;
CREATE TABLE `sc1_mission` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `LineId` mediumint(6) NOT NULL,
  `POrderId` varchar(12) DEFAULT NULL,
  `sPOrderId` varchar(13) NOT NULL COMMENT '业务订单流水号',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `DateTime` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `FinishTime` datetime DEFAULT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产任务分配表';

-- ----------------------------
-- Table structure for sc1_newrelation
-- ----------------------------
DROP TABLE IF EXISTS `sc1_newrelation`;
CREATE TABLE `sc1_newrelation` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Relation` int(11) NOT NULL COMMENT '比例关系',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 更改外箱与产品数量关系表';

-- ----------------------------
-- Table structure for sc1_remark
-- ----------------------------
DROP TABLE IF EXISTS `sc1_remark`;
CREATE TABLE `sc1_remark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `GroupId` text NOT NULL COMMENT '小组ID',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '备注对应的日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `WorkShopId` int(9) DEFAULT '0',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???生产备注表';

-- ----------------------------
-- Table structure for sc2_msg
-- ----------------------------
DROP TABLE IF EXISTS `sc2_msg`;
CREATE TABLE `sc2_msg` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Days` tinyint(4) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表:生产消息列表';

-- ----------------------------
-- Table structure for sc3_printtasks
-- ----------------------------
DROP TABLE IF EXISTS `sc3_printtasks`;
CREATE TABLE `sc3_printtasks` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `CodeType` tinyint(4) NOT NULL COMMENT '打印类型',
  `POrderId` varchar(12) NOT NULL COMMENT '业务单流水号',
  `sPOrderId` varchar(13) NOT NULL,
  `Qty` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `CodeType` (`CodeType`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 生产打印任务表';

-- ----------------------------
-- Table structure for sc4_funmodule
-- ----------------------------
DROP TABLE IF EXISTS `sc4_funmodule`;
CREATE TABLE `sc4_funmodule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '0',
  `ModuleId` mediumint(9) NOT NULL,
  `ModuleName` varchar(30) NOT NULL DEFAULT '',
  `Parameter` varchar(100) NOT NULL,
  `Place` tinyint(4) NOT NULL,
  `OrderId` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=86 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sc4_modulenexus
-- ----------------------------
DROP TABLE IF EXISTS `sc4_modulenexus`;
CREATE TABLE `sc4_modulenexus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ModuleId` mediumint(9) NOT NULL,
  `dModuleId` mediumint(9) NOT NULL,
  `OrderId` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE,
  KEY `dModuleId` (`dModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=93 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sc4_upopedom
-- ----------------------------
DROP TABLE IF EXISTS `sc4_upopedom`;
CREATE TABLE `sc4_upopedom` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `UserId` int(11) NOT NULL COMMENT '用户自动ID,关联表：usertable.ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '模块ID',
  `Action` tinyint(4) NOT NULL COMMENT '权限',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `UserId` (`UserId`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7194 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='ipad模块权限表';

-- ----------------------------
-- Table structure for scgx_remark
-- ----------------------------
DROP TABLE IF EXISTS `scgx_remark`;
CREATE TABLE `scgx_remark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `sPOrderId` varchar(13) DEFAULT '0',
  `ProcessId` int(10) DEFAULT '0' COMMENT 'ProcessId',
  `Remark` text NOT NULL COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '备日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='工序生产备注表';

-- ----------------------------
-- Table structure for sc_canceled
-- ----------------------------
DROP TABLE IF EXISTS `sc_canceled`;
CREATE TABLE `sc_canceled` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(13) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `OPdatetime` varchar(20) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sc_currentmission
-- ----------------------------
DROP TABLE IF EXISTS `sc_currentmission`;
CREATE TABLE `sc_currentmission` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) NOT NULL,
  `LineId` mediumint(4) NOT NULL,
  `SortboxId` mediumint(4) NOT NULL DEFAULT '0',
  `POrderId` varchar(12) DEFAULT NULL,
  `LineNumber` varchar(2) DEFAULT NULL,
  `DateTime` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `LineId` (`LineId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='记录当前生产任务';

-- ----------------------------
-- Table structure for sc_sizesheet
-- ----------------------------
DROP TABLE IF EXISTS `sc_sizesheet`;
CREATE TABLE `sc_sizesheet` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) DEFAULT NULL,
  `sPorderId` varchar(14) DEFAULT NULL,
  `BoxId` varchar(30) DEFAULT NULL,
  `Size` varchar(20) DEFAULT NULL,
  `Estate` tinyint(1) DEFAULT NULL,
  `Date` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE KEY `BoxId` (`BoxId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sc_tlsheet
-- ----------------------------
DROP TABLE IF EXISTS `sc_tlsheet`;
CREATE TABLE `sc_tlsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `sPOrderId` varchar(13) NOT NULL COMMENT '工单流水号',
  `StockId` varchar(15) NOT NULL COMMENT '采购单流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `LocationId` int(8) NOT NULL DEFAULT '0',
  `oldQty` decimal(11,2) NOT NULL,
  `Qty` decimal(11,2) NOT NULL COMMENT '退料数量',
  `Price` decimal(11,2) NOT NULL,
  `Remark` tinyint(2) NOT NULL COMMENT '退料分类',
  `Type` tinyint(2) NOT NULL,
  `ReturnCkSign` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `LocationId` (`LocationId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 车间退料记录表';

-- ----------------------------
-- Table structure for sc_workdate
-- ----------------------------
DROP TABLE IF EXISTS `sc_workdate`;
CREATE TABLE `sc_workdate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `scDate` date NOT NULL,
  `endDate` date DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ？？订单生产时间设置表';

-- ----------------------------
-- Table structure for semifinished_bom
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_bom`;
CREATE TABLE `semifinished_bom` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mStuffId` mediumint(9) NOT NULL,
  `StuffId` mediumint(9) NOT NULL DEFAULT '0',
  `Relation` varchar(10) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `creator` mediumint(9) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `mStuffId` (`mStuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=13664 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品BOM';

-- ----------------------------
-- Table structure for semifinished_bom_main
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_bom_main`;
CREATE TABLE `semifinished_bom_main` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `mStuffId` mediumint(9) NOT NULL,
  `VersionNo` decimal(6,2) NOT NULL DEFAULT '1.00' COMMENT '版本号',
  `Remark` text NOT NULL COMMENT '修改说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `mStuffId` (`mStuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 社保结付主表';

-- ----------------------------
-- Table structure for semifinished_deliverydate
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_deliverydate`;
CREATE TABLE `semifinished_deliverydate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mStuffId` mediumint(9) NOT NULL,
  `ReduceWeeks` tinyint(4) NOT NULL COMMENT '延时周数',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `mStuffId` (`mStuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for semifinished_oldbom_main
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_oldbom_main`;
CREATE TABLE `semifinished_oldbom_main` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `mStuffId` mediumint(9) NOT NULL,
  `VersionNo` decimal(6,2) NOT NULL DEFAULT '1.00' COMMENT '版本号',
  `Remark` text NOT NULL COMMENT '修改说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `mStuffId` (`mStuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1545 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 社保结付主表';

-- ----------------------------
-- Table structure for semifinished_oldbom_sheet
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_oldbom_sheet`;
CREATE TABLE `semifinished_oldbom_sheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `mStuffId` mediumint(9) NOT NULL,
  `StuffId` mediumint(9) NOT NULL DEFAULT '0',
  `Relation` varchar(10) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `creator` mediumint(9) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `mStuffId` (`mStuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=13807 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品BOM';

-- ----------------------------
-- Table structure for semifinished_tools
-- ----------------------------
DROP TABLE IF EXISTS `semifinished_tools`;
CREATE TABLE `semifinished_tools` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `mStuffId` mediumint(9) NOT NULL COMMENT '半成品',
  `ProcessId` mediumint(9) NOT NULL,
  `ToolsId` int(6) NOT NULL,
  `Relation` varchar(50) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`mStuffId`) USING BTREE,
  KEY `ProcessId` (`ProcessId`) USING BTREE,
  KEY `ToolsId` (`ToolsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='半成品工序治工具表';

-- ----------------------------
-- Table structure for sgsdata
-- ----------------------------
DROP TABLE IF EXISTS `sgsdata`;
CREATE TABLE `sgsdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户编号',
  `SgsId` mediumint(9) NOT NULL COMMENT 'sgs自动Id',
  `SgsNo` varchar(14) NOT NULL COMMENT 'sgs编号',
  `Type` char(2) NOT NULL COMMENT 'sgs类型',
  `ItemC` varchar(100) NOT NULL COMMENT 'sgs项目中文名',
  `ItemE` text NOT NULL COMMENT 'sgs中文描述',
  `PdfFile` varchar(20) NOT NULL COMMENT 'sgs英文描述',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `SgsId` (`SgsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' sgs测试数据表';

-- ----------------------------
-- Table structure for sgsfile
-- ----------------------------
DROP TABLE IF EXISTS `sgsfile`;
CREATE TABLE `sgsfile` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `FileName` varchar(50) NOT NULL COMMENT 'sgs上传的文件名',
  `SgsId` mediumint(9) NOT NULL COMMENT 'sgs自动Id',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `SgsId` (`SgsId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' sgs测试文件表';

-- ----------------------------
-- Table structure for skech_deliverymain
-- ----------------------------
DROP TABLE IF EXISTS `skech_deliverymain`;
CREATE TABLE `skech_deliverymain` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户编号',
  `ModelId` int(10) NOT NULL DEFAULT '0' COMMENT '?',
  `ForwaderId` int(10) NOT NULL COMMENT '?',
  `ForwaderRemark` varchar(50) DEFAULT NULL COMMENT '?',
  `DeliveryNumber` varchar(30) NOT NULL COMMENT '?',
  `EndPlace` varchar(50) NOT NULL COMMENT '?',
  `Adress` varchar(200) NOT NULL COMMENT '?',
  `ShipType` varchar(30) NOT NULL COMMENT '?',
  `Remark` text NOT NULL COMMENT '?',
  `DeliveryDate` date NOT NULL COMMENT '?',
  `Type` tinyint(4) NOT NULL COMMENT '?',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='skech客户提货明主单';

-- ----------------------------
-- Table structure for skech_deliverysheet
-- ----------------------------
DROP TABLE IF EXISTS `skech_deliverysheet`;
CREATE TABLE `skech_deliverysheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Mid` int(10) NOT NULL COMMENT '?',
  `ShipId` int(11) NOT NULL COMMENT '?',
  `POrderId` varchar(12) NOT NULL COMMENT '?',
  `Qty` int(11) NOT NULL COMMENT '?',
  `Price` decimal(10,3) NOT NULL COMMENT '?',
  `Type` tinyint(4) NOT NULL COMMENT '?',
  `FromSystem` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='skech客户提货明细单';

-- ----------------------------
-- Table structure for slice_cutdie
-- ----------------------------
DROP TABLE IF EXISTS `slice_cutdie`;
CREATE TABLE `slice_cutdie` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL,
  `CutId` varchar(10) NOT NULL,
  `Picture` varchar(30) NOT NULL,
  `Estate` tinyint(4) NOT NULL DEFAULT '2',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  `creator` mediumint(9) DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` mediumint(9) DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `CutId` (`CutId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='片材刀模图档';

-- ----------------------------
-- Table structure for smsdata
-- ----------------------------
DROP TABLE IF EXISTS `smsdata`;
CREATE TABLE `smsdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Note` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Rsign` tinyint(4) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for smsfun
-- ----------------------------
DROP TABLE IF EXISTS `smsfun`;
CREATE TABLE `smsfun` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Title` varchar(50) NOT NULL DEFAULT '',
  `Description` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Title` (`Title`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for smsuse
-- ----------------------------
DROP TABLE IF EXISTS `smsuse`;
CREATE TABLE `smsuse` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemId` mediumint(9) NOT NULL DEFAULT '0',
  `Number` mediumint(9) NOT NULL DEFAULT '0',
  `Rsign` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffgrade
-- ----------------------------
DROP TABLE IF EXISTS `staffgrade`;
CREATE TABLE `staffgrade` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Grade` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffgroup
-- ----------------------------
DROP TABLE IF EXISTS `staffgroup`;
CREATE TABLE `staffgroup` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `BranchId` int(11) NOT NULL COMMENT '部门ID',
  `GroupId` int(11) NOT NULL COMMENT '小组ID',
  `GroupName` varchar(20) NOT NULL COMMENT '小组名称',
  `GroupLeader` int(11) NOT NULL COMMENT '小组负责人,关联表：staffmain.Number',
  `TypeId` int(11) NOT NULL COMMENT '绑定配件分类',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` int(11) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 员工小组表';

-- ----------------------------
-- Table structure for staffholiday
-- ----------------------------
DROP TABLE IF EXISTS `staffholiday`;
CREATE TABLE `staffholiday` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `YearDays` decimal(4,1) NOT NULL,
  `BxDays` decimal(4,1) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffmain
-- ----------------------------
DROP TABLE IF EXISTS `staffmain`;
CREATE TABLE `staffmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `WorkAdd` tinyint(4) NOT NULL DEFAULT '3',
  `Currency` tinyint(4) NOT NULL DEFAULT '1' COMMENT '薪资结付货币',
  `Number` int(10) NOT NULL COMMENT '员工ID',
  `IdNum` varchar(10) NOT NULL,
  `Name` varchar(8) NOT NULL DEFAULT '',
  `Nickname` varchar(50) DEFAULT '',
  `Grade` tinyint(4) DEFAULT NULL,
  `KqSign` tinyint(4) NOT NULL,
  `SalaryType` tinyint(4) DEFAULT NULL COMMENT '薪资类型',
  `BranchId` tinyint(4) NOT NULL COMMENT '所属部门，关联表 branchdata 自增Id',
  `JobId` smallint(6) NOT NULL COMMENT '所属职位，关联表 jobdata 自增Id',
  `JobTitleId` smallint(6) DEFAULT '0' COMMENT '职称',
  `GroupId` varchar(20) NOT NULL DEFAULT '0',
  `Mail` varchar(50) DEFAULT '',
  `GroupEmail` varchar(50) DEFAULT '',
  `AppleID` varchar(50) DEFAULT NULL,
  `ExtNo` varchar(5) DEFAULT '',
  `ComeIn` date NOT NULL,
  `ContractSDate` date NOT NULL DEFAULT '0000-00-00',
  `ContractEDate` date NOT NULL DEFAULT '0000-00-00',
  `ComeSource` tinyint(4) DEFAULT NULL COMMENT '录用来源',
  `Introducer` varchar(8) DEFAULT '',
  `DormitoryId` int(11) DEFAULT NULL COMMENT '宿舍ID',
  `OffStaffSign` tinyint(4) NOT NULL DEFAULT '0',
  `Category` tinyint(4) NOT NULL DEFAULT '0' COMMENT '员工类别：1：员工（生产线普通员工）2：职员（拉长及以上，办公室员工等）',
  `FormalSign` tinyint(4) DEFAULT '0',
  `FormalManager` mediumint(9) DEFAULT NULL COMMENT '评鉴主管',
  `FormalContent` mediumint(9) DEFAULT NULL COMMENT '评鉴主管',
  `AttendanceFloor` tinyint(4) DEFAULT NULL COMMENT '考勤楼层',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE,
  KEY `BJN` (`BranchId`,`JobId`,`Number`) USING BTREE,
  KEY `Estate` (`Estate`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `WorkAdd` (`WorkAdd`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=10967 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffmain_ac
-- ----------------------------
DROP TABLE IF EXISTS `staffmain_ac`;
CREATE TABLE `staffmain_ac` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `WorkAdd` tinyint(4) NOT NULL DEFAULT '3',
  `Currency` tinyint(4) NOT NULL DEFAULT '1' COMMENT '薪资结付货币',
  `Number` mediumint(9) NOT NULL,
  `IdNum` varchar(10) NOT NULL,
  `Name` varchar(8) NOT NULL DEFAULT '',
  `Nickname` varchar(50) NOT NULL,
  `Grade` tinyint(4) NOT NULL,
  `KqSign` tinyint(4) NOT NULL,
  `BranchId` tinyint(4) NOT NULL,
  `JobId` smallint(6) NOT NULL,
  `GroupId` int(11) NOT NULL DEFAULT '0',
  `Mail` varchar(50) NOT NULL DEFAULT '',
  `GroupEmail` varchar(50) DEFAULT '',
  `AppleID` varchar(50) DEFAULT NULL,
  `ExtNo` varchar(5) NOT NULL,
  `ComeIn` date NOT NULL,
  `ContractSDate` date NOT NULL DEFAULT '0000-00-00',
  `ContractEDate` date NOT NULL DEFAULT '0000-00-00',
  `Introducer` varchar(8) NOT NULL DEFAULT '',
  `FormalSign` tinyint(4) NOT NULL,
  `FormalManager` mediumint(9) DEFAULT NULL COMMENT '评鉴主管',
  `FormalContent` mediumint(9) DEFAULT NULL COMMENT '评鉴主管',
  `AttendanceFloor` tinyint(4) DEFAULT NULL COMMENT '考勤楼层',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE,
  KEY `BJN` (`BranchId`,`JobId`,`Number`) USING BTREE,
  KEY `Estate` (`Estate`) USING BTREE,
  KEY `GroupId` (`GroupId`) USING BTREE,
  KEY `WorkAdd` (`WorkAdd`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffsheet
-- ----------------------------
DROP TABLE IF EXISTS `staffsheet`;
CREATE TABLE `staffsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录行号',
  `Number` int(10) NOT NULL COMMENT '员工编号',
  `Sex` tinyint(4) NOT NULL COMMENT '性别',
  `BloodGroup` tinyint(4) DEFAULT NULL COMMENT '血型',
  `Nation` tinyint(4) NOT NULL COMMENT '民族',
  `Rpr` tinyint(4) DEFAULT '0',
  `Education` tinyint(4) DEFAULT NULL,
  `RprAddress` varchar(100) DEFAULT NULL COMMENT '籍贯地址',
  `School` varchar(100) DEFAULT NULL COMMENT '毕业院校',
  `Major` varchar(50) DEFAULT NULL COMMENT '专业',
  `Married` tinyint(4) DEFAULT NULL,
  `MarriedName` varchar(50) DEFAULT NULL COMMENT '配偶姓名',
  `Birthday` date NOT NULL,
  `Photo` tinyint(4) NOT NULL,
  `IdcardPhoto` tinyint(4) NOT NULL,
  `HealthPhoto` tinyint(4) NOT NULL,
  `HealthEDate` date DEFAULT NULL COMMENT '健康证到期日',
  `vocationHPhoto` tinyint(4) NOT NULL DEFAULT '0',
  `DriverPhoto` tinyint(4) NOT NULL DEFAULT '0',
  `Idcard` varchar(18) NOT NULL DEFAULT '' COMMENT '身份证号码',
  `IdcardEDate` date DEFAULT NULL COMMENT '身份证有效期',
  `PassPort` tinyint(4) NOT NULL DEFAULT '0',
  `PassTicket` tinyint(4) NOT NULL DEFAULT '0',
  `Address` varchar(150) DEFAULT '',
  `Postalcode` varchar(6) DEFAULT '',
  `EmergencyName` varchar(20) DEFAULT NULL COMMENT '紧急联系人姓名',
  `EmergencyType` varchar(20) DEFAULT NULL COMMENT '与紧急联系人关系',
  `Tel` varchar(30) DEFAULT '',
  `Mobile` varchar(16) NOT NULL DEFAULT '',
  `Dh` varchar(6) DEFAULT '',
  `QQ` varchar(20) DEFAULT NULL COMMENT 'QQ账号',
  `Weixin` text COMMENT '微信帐号',
  `LinkedIn` text,
  `SbType` tinyint(4) DEFAULT NULL COMMENT '社保类型',
  `SbAccount` int(11) DEFAULT NULL COMMENT '社保账户',
  `SbSDate` date DEFAULT NULL COMMENT '社保参保日期',
  `CityAbandon` tinyint(4) DEFAULT NULL COMMENT '城乡保险证明',
  `EndowAbandon` tinyint(4) DEFAULT NULL COMMENT '养老保险放弃书',
  `GjjAbandon` tinyint(4) DEFAULT NULL COMMENT '是否签公积金放弃书',
  `GjjAccount` varchar(20) DEFAULT NULL COMMENT '公积金账户',
  `GjjSDate` date DEFAULT NULL COMMENT '公积金购买日期',
  `BankType` tinyint(4) DEFAULT NULL COMMENT '银行类型',
  `Bank` text,
  `Bank2` text,
  `Bank3` text,
  `ClothesSize` varchar(200) DEFAULT '',
  `HouseSize` varchar(200) DEFAULT '',
  `Note` text NOT NULL,
  `InFile` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Rpr` (`Rpr`) USING BTREE,
  KEY `Nation` (`Nation`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3190 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffwage_otherkk
-- ----------------------------
DROP TABLE IF EXISTS `staffwage_otherkk`;
CREATE TABLE `staffwage_otherkk` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Picture` varchar(20) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staffworkadd
-- ----------------------------
DROP TABLE IF EXISTS `staffworkadd`;
CREATE TABLE `staffworkadd` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(10) NOT NULL,
  `ExtNoFirst` tinyint(4) NOT NULL,
  `Address` varchar(50) NOT NULL,
  `ColorValue` varchar(7) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=43 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_assessments
-- ----------------------------
DROP TABLE IF EXISTS `staff_assessments`;
CREATE TABLE `staff_assessments` (
  `id` int(11) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(6) DEFAULT NULL,
  `Assessment` text,
  `Manager` int(6) DEFAULT NULL,
  `DateTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_certificate
-- ----------------------------
DROP TABLE IF EXISTS `staff_certificate`;
CREATE TABLE `staff_certificate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Picture` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_dkdate
-- ----------------------------
DROP TABLE IF EXISTS `staff_dkdate`;
CREATE TABLE `staff_dkdate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Remark` text NOT NULL,
  `dkDate` date NOT NULL,
  `dkHours` decimal(10,3) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_dksheet
-- ----------------------------
DROP TABLE IF EXISTS `staff_dksheet`;
CREATE TABLE `staff_dksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `Month` varchar(7) NOT NULL DEFAULT '',
  `Number` mediumint(9) NOT NULL,
  `dkHour` decimal(10,3) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_formaldate
-- ----------------------------
DROP TABLE IF EXISTS `staff_formaldate`;
CREATE TABLE `staff_formaldate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `FormalDate` date NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_gl
-- ----------------------------
DROP TABLE IF EXISTS `staff_gl`;
CREATE TABLE `staff_gl` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `Years` tinyint(4) NOT NULL,
  `Months` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_housesubsidy
-- ----------------------------
DROP TABLE IF EXISTS `staff_housesubsidy`;
CREATE TABLE `staff_housesubsidy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Number` mediumint(9) NOT NULL,
  `Amount` decimal(11,2) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Attached` varchar(50) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工购房补助信息设定表';

-- ----------------------------
-- Table structure for staff_jobduties
-- ----------------------------
DROP TABLE IF EXISTS `staff_jobduties`;
CREATE TABLE `staff_jobduties` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL,
  `Description` varchar(250) DEFAULT '',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_lateearly
-- ----------------------------
DROP TABLE IF EXISTS `staff_lateearly`;
CREATE TABLE `staff_lateearly` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Month` varchar(7) NOT NULL,
  `cs` int(8) NOT NULL,
  `Amount` decimal(10,3) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) NOT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_move
-- ----------------------------
DROP TABLE IF EXISTS `staff_move`;
CREATE TABLE `staff_move` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OcSign` tinyint(4) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `OBranchId` tinyint(4) NOT NULL,
  `OJobId` int(4) NOT NULL,
  `OGroupId` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_outsubsidymain
-- ----------------------------
DROP TABLE IF EXISTS `staff_outsubsidymain`;
CREATE TABLE `staff_outsubsidymain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `BankId` smallint(6) NOT NULL COMMENT '银行账户编号,关联表：currencydata.ID',
  `PayDate` date NOT NULL COMMENT '支付时间',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '支付总额',
  `Payee` tinyint(4) NOT NULL COMMENT '凭证(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '回执(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单(jpg)',
  `Remark` text NOT NULL COMMENT '支付情况说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='离职员工补助主表';

-- ----------------------------
-- Table structure for staff_outsubsidysheet
-- ----------------------------
DROP TABLE IF EXISTS `staff_outsubsidysheet`;
CREATE TABLE `staff_outsubsidysheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Mid` int(11) NOT NULL COMMENT '关联主表id,关联表：hzqkmain.ID',
  `Number` mediumint(9) NOT NULL,
  `TypeId` tinyint(4) NOT NULL DEFAULT '1',
  `Content` text NOT NULL COMMENT '请款内容',
  `AveAmount` decimal(10,3) NOT NULL COMMENT '月平均工资',
  `Amount` decimal(10,3) NOT NULL COMMENT '金额',
  `TotalRate` decimal(6,1) NOT NULL COMMENT '总共补助的月份',
  `Time` tinyint(4) NOT NULL COMMENT '第几次补助',
  `PaySign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否一次性支付',
  `Currency` tinyint(4) NOT NULL COMMENT '币别,关联表：currencydata.ID',
  `Bill` tinyint(4) NOT NULL COMMENT '票据',
  `ReturnReasons` text NOT NULL COMMENT '退回原因',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Auditor` mediumint(9) NOT NULL DEFAULT '0' COMMENT '审核人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '操作时间，取当前系统时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='离职员工补助子表';

-- ----------------------------
-- Table structure for staff_outsubsidy_audit
-- ----------------------------
DROP TABLE IF EXISTS `staff_outsubsidy_audit`;
CREATE TABLE `staff_outsubsidy_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='离职补助审核';

-- ----------------------------
-- Table structure for staff_out_push
-- ----------------------------
DROP TABLE IF EXISTS `staff_out_push`;
CREATE TABLE `staff_out_push` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL,
  `Type` int(1) NOT NULL,
  `Reason` varchar(100) NOT NULL,
  `LastDate` datetime NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Sign` blob NOT NULL,
  `BConfirm` int(1) NOT NULL,
  `BSign` blob NOT NULL,
  `MConfirm` int(1) DEFAULT NULL,
  `MSign` blob,
  `HConfirm` int(1) DEFAULT NULL,
  `HSign` blob,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for staff_performance
-- ----------------------------
DROP TABLE IF EXISTS `staff_performance`;
CREATE TABLE `staff_performance` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Description` varchar(250) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_tj
-- ----------------------------
DROP TABLE IF EXISTS `staff_tj`;
CREATE TABLE `staff_tj` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `Mid` int(11) NOT NULL,
  `Attached` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `Number` (`Number`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for staff_workstatus
-- ----------------------------
DROP TABLE IF EXISTS `staff_workstatus`;
CREATE TABLE `staff_workstatus` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` mediumint(9) NOT NULL,
  `BranchId` mediumint(6) NOT NULL,
  `GroupId` mediumint(6) DEFAULT '0',
  `JobId` mediumint(6) NOT NULL,
  `CheckType` tinyint(4) NOT NULL,
  `Date` date NOT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for standbyrate
-- ----------------------------
DROP TABLE IF EXISTS `standbyrate`;
CREATE TABLE `standbyrate` (
  `Id` int(4) unsigned NOT NULL AUTO_INCREMENT,
  `uName` varchar(50) NOT NULL,
  `Rate1` decimal(6,4) NOT NULL,
  `RateA` decimal(6,4) NOT NULL,
  `RateB` decimal(6,4) NOT NULL,
  `RateC` decimal(6,4) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `uName_2` (`uName`) USING BTREE,
  KEY `Code` (`RateA`) USING BTREE,
  KEY `uName` (`uName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件备品率';

-- ----------------------------
-- Table structure for stockdelverify
-- ----------------------------
DROP TABLE IF EXISTS `stockdelverify`;
CREATE TABLE `stockdelverify` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StockId` varchar(14) NOT NULL COMMENT '采购单流水号',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???不用';

-- ----------------------------
-- Table structure for straxdata
-- ----------------------------
DROP TABLE IF EXISTS `straxdata`;
CREATE TABLE `straxdata` (
  `eCode` varchar(100) NOT NULL,
  `Description` varchar(100) NOT NULL,
  `StockQty` varchar(100) NOT NULL,
  `StockAmount` varchar(100) DEFAULT NULL,
  KEY `eCode` (`eCode`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for studyreaded
-- ----------------------------
DROP TABLE IF EXISTS `studyreaded`;
CREATE TABLE `studyreaded` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StudyId` int(10) NOT NULL COMMENT ' studysheet.Id ',
  `Readed` tinyint(3) NOT NULL COMMENT 'Readed:1  Unreaded:0',
  `Reader` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StudyId` (`StudyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训阅读纪录表';

-- ----------------------------
-- Table structure for studysheet
-- ----------------------------
DROP TABLE IF EXISTS `studysheet`;
CREATE TABLE `studysheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` mediumint(9) NOT NULL,
  `Name` text NOT NULL COMMENT '名称',
  `Icon` text NOT NULL COMMENT '图标',
  `File` text NOT NULL COMMENT '文件',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `ModifyTimes` tinyint(3) DEFAULT '0' COMMENT '修改次数',
  `GoodsId` int(14) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训表';

-- ----------------------------
-- Table structure for studytype
-- ----------------------------
DROP TABLE IF EXISTS `studytype`;
CREATE TABLE `studytype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeId` mediumint(9) NOT NULL,
  `Name` varchar(20) NOT NULL COMMENT '培训类别名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  UNIQUE KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='培训类别表';

-- ----------------------------
-- Table structure for stuffbltype
-- ----------------------------
DROP TABLE IF EXISTS `stuffbltype`;
CREATE TABLE `stuffbltype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(30) NOT NULL COMMENT '分类名称',
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件配料类型表';

-- ----------------------------
-- Table structure for stuffbuy
-- ----------------------------
DROP TABLE IF EXISTS `stuffbuy`;
CREATE TABLE `stuffbuy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for stuffchange
-- ----------------------------
DROP TABLE IF EXISTS `stuffchange`;
CREATE TABLE `stuffchange` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `oldStuffCname` varchar(100) NOT NULL COMMENT '旧名称',
  `StuffCname` varchar(100) NOT NULL COMMENT '新名称',
  `oldPrice` decimal(10,3) NOT NULL COMMENT '旧价格',
  `Price` decimal(10,3) NOT NULL COMMENT '新价格',
  `oldCompanyId` mediumint(9) NOT NULL COMMENT '旧应商ID,关联表：providerdata.CompanyId',
  `CompanyId` mediumint(9) NOT NULL COMMENT '新供应商ID',
  `Reason` text NOT NULL COMMENT '更改原因',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=59 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件更改记录表';

-- ----------------------------
-- Table structure for stuffcombox_bom
-- ----------------------------
DROP TABLE IF EXISTS `stuffcombox_bom`;
CREATE TABLE `stuffcombox_bom` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `mStuffId` mediumint(9) NOT NULL,
  `StuffId` mediumint(9) NOT NULL DEFAULT '0',
  `Relation` int(3) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `mStuffId` (`mStuffId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for stuffcostprice
-- ----------------------------
DROP TABLE IF EXISTS `stuffcostprice`;
CREATE TABLE `stuffcostprice` (
  `Id` bigint(16) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Price` decimal(11,2) DEFAULT '0.00',
  `CostPrice` decimal(11,2) NOT NULL COMMENT '记录生成日期',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=259 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='?配件图档下载记录表';

-- ----------------------------
-- Table structure for stuffcostprice_log
-- ----------------------------
DROP TABLE IF EXISTS `stuffcostprice_log`;
CREATE TABLE `stuffcostprice_log` (
  `Id` bigint(16) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `OldPrice` decimal(11,2) NOT NULL DEFAULT '0.00' COMMENT '旧价格',
  `NewPrice` decimal(11,2) NOT NULL COMMENT '记录生成日期',
  `OldCostPrice` decimal(11,2) NOT NULL DEFAULT '0.00',
  `CostPrice` decimal(11,2) NOT NULL DEFAULT '0.00',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='?配件图档下载记录表';

-- ----------------------------
-- Table structure for stuffdata
-- ----------------------------
DROP TABLE IF EXISTS `stuffdata`;
CREATE TABLE `stuffdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '配件ID',
  `StuffCname` varchar(100) NOT NULL COMMENT '配件中文名',
  `StuffEname` varchar(50) NOT NULL COMMENT '配件英文名',
  `TypeId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件类型',
  `Spec` text NOT NULL COMMENT '规格',
  `Weight` decimal(8,4) NOT NULL DEFAULT '0.0000' COMMENT '无税价格',
  `NoTaxPrice` decimal(11,4) DEFAULT '0.0000' COMMENT '不含税价格',
  `Price` decimal(11,4) NOT NULL COMMENT '价格',
  `CostPrice` decimal(11,4) NOT NULL DEFAULT '0.0000' COMMENT '成本价',
  `PriceDetermined` int(4) NOT NULL DEFAULT '0' COMMENT '价格待定标记',
  `Unit` int(10) NOT NULL DEFAULT '15' COMMENT '单位,关联表：stuffunit.ID',
  `BoxPcs` int(6) NOT NULL DEFAULT '0' COMMENT '装箱数量',
  `FrameCapacity` int(11) NOT NULL DEFAULT '0' COMMENT '装框数量',
  `ComboxSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '子配件标识:1、母配件; 2、子配件',
  `Remark` text NOT NULL COMMENT '备注',
  `Gfile` varchar(50) NOT NULL COMMENT '图档(ai)',
  `Gstate` tinyint(4) NOT NULL DEFAULT '0' COMMENT '图档状态',
  `Gremark` varchar(50) NOT NULL COMMENT '图档备注',
  `Picture` tinyint(4) NOT NULL COMMENT '图片(pdf)',
  `Pjobid` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '图片部门职责,关联表：jobdata.ID',
  `PicNumber` mediumint(9) NOT NULL COMMENT '图片责任人',
  `JobId` smallint(6) NOT NULL COMMENT '图档部门职责,关联表：jobdata.ID',
  `GicNumber` mediumint(9) NOT NULL DEFAULT '0' COMMENT '图档责任人',
  `GcheckNumber` mediumint(9) NOT NULL COMMENT '图档是否需要审核',
  `Cjobid` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '?',
  `SendFloor` tinyint(4) DEFAULT '9' COMMENT '送货楼层',
  `CheckSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '抽检，全检',
  `ForcePicSpe` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '下单图片图档需求',
  `jhDays` int(6) NOT NULL DEFAULT '0' COMMENT '交货周期',
  `basketType` tinyint(2) DEFAULT '0' COMMENT '装框用框子类型',
  `DevelopState` tinyint(4) NOT NULL DEFAULT '0' COMMENT '开发完成状态',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `bomEstate` int(4) DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `GfileDate` datetime DEFAULT NULL COMMENT '图档更新日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录操作时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `SeatId` varchar(10) DEFAULT NULL COMMENT '库位编号',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE,
  UNIQUE KEY `StuffEname` (`StuffEname`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Unit` (`Unit`) USING BTREE,
  KEY `Pjobid` (`Pjobid`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `PicNumber` (`PicNumber`) USING BTREE,
  KEY `GicNumber` (`GicNumber`) USING BTREE,
  KEY `SendFloor` (`SendFloor`) USING BTREE,
  KEY `GcheckNumber` (`GcheckNumber`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2593 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件资料表';

-- ----------------------------
-- Table structure for stuffdata_audit
-- ----------------------------
DROP TABLE IF EXISTS `stuffdata_audit`;
CREATE TABLE `stuffdata_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件名称审核';

-- ----------------------------
-- Table structure for stuffdata_old
-- ----------------------------
DROP TABLE IF EXISTS `stuffdata_old`;
CREATE TABLE `stuffdata_old` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(10) unsigned NOT NULL DEFAULT '0' COMMENT '配件ID',
  `StuffCname` varchar(100) NOT NULL COMMENT '配件中文名',
  `StuffEname` varchar(50) NOT NULL COMMENT '配件英文名',
  `TypeId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件类型',
  `Spec` text NOT NULL COMMENT '规格',
  `Weight` decimal(8,4) NOT NULL DEFAULT '0.0000' COMMENT '重量(g)',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Unit` int(10) NOT NULL DEFAULT '15' COMMENT '单位,关联表：stuffunit.ID',
  `BoxPcs` int(6) NOT NULL DEFAULT '0' COMMENT '装箱数量',
  `FrameCapacity` int(11) NOT NULL DEFAULT '0' COMMENT '装框数量',
  `Remark` text NOT NULL COMMENT '备注',
  `Gfile` varchar(50) NOT NULL COMMENT '图档(ai)',
  `Gstate` tinyint(4) NOT NULL DEFAULT '0' COMMENT '图档状态',
  `Gremark` varchar(50) NOT NULL COMMENT '图档备注',
  `Picture` tinyint(4) NOT NULL COMMENT '图片(pdf)',
  `Pjobid` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '图片部门职责,关联表：jobdata.ID',
  `PicNumber` mediumint(9) NOT NULL COMMENT '图片责任人',
  `JobId` smallint(6) NOT NULL COMMENT '图档部门职责,关联表：jobdata.ID',
  `GicNumber` mediumint(9) NOT NULL DEFAULT '0' COMMENT '图档责任人',
  `GcheckNumber` mediumint(9) NOT NULL COMMENT '图档是否需要审核',
  `Cjobid` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '?',
  `SendFloor` tinyint(4) DEFAULT '9' COMMENT '送货楼层',
  `CheckSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '抽检，全检',
  `ForcePicSpe` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '下单图片图档需求',
  `jhDays` int(6) NOT NULL DEFAULT '0' COMMENT '交货周期',
  `DevelopState` tinyint(4) NOT NULL DEFAULT '0' COMMENT '开发完成状态',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `GfileDate` datetime DEFAULT NULL COMMENT '图档更新日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '记录操作时间',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffCname` (`StuffCname`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Unit` (`Unit`) USING BTREE,
  KEY `Pjobid` (`Pjobid`) USING BTREE,
  KEY `JobId` (`JobId`) USING BTREE,
  KEY `PicNumber` (`PicNumber`) USING BTREE,
  KEY `GicNumber` (`GicNumber`) USING BTREE,
  KEY `SendFloor` (`SendFloor`) USING BTREE,
  KEY `GcheckNumber` (`GcheckNumber`) USING BTREE,
  KEY `modifier` (`modifier`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件资料表';

-- ----------------------------
-- Table structure for stuffdevelop
-- ----------------------------
DROP TABLE IF EXISTS `stuffdevelop`;
CREATE TABLE `stuffdevelop` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `GroupId` smallint(6) NOT NULL COMMENT '开发小组ID',
  `Number` mediumint(9) NOT NULL COMMENT '开发负责人,关联表：staffmain.Number',
  `Targetdate` date NOT NULL COMMENT '计划完成日期',
  `Finishdate` datetime NOT NULL DEFAULT '0000-00-00 00:00:00',
  `CompanyId` mediumint(9) DEFAULT NULL,
  `Type` tinyint(4) NOT NULL DEFAULT '0',
  `Grade` tinyint(4) NOT NULL DEFAULT '0',
  `ProjectsNumber` mediumint(9) NOT NULL DEFAULT '0',
  `DesignNumber` mediumint(9) NOT NULL DEFAULT '0',
  `DesignDate` datetime DEFAULT NULL,
  `KfRemark` text NOT NULL COMMENT '开发备注',
  `Remark` text NOT NULL COMMENT '备注',
  `dFile` varchar(20) DEFAULT NULL,
  `ReturnReasons` varchar(200) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `kfEstate` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件开发信息表';

-- ----------------------------
-- Table structure for stuffdevelop_log
-- ----------------------------
DROP TABLE IF EXISTS `stuffdevelop_log`;
CREATE TABLE `stuffdevelop_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '?',
  `Mid` int(10) NOT NULL DEFAULT '0' COMMENT '?,关联表：stuffdevelop.ID',
  `Remark` text NOT NULL COMMENT '?',
  `Picture` varchar(500) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件开发过程记录表';

-- ----------------------------
-- Table structure for stuffdisable
-- ----------------------------
DROP TABLE IF EXISTS `stuffdisable`;
CREATE TABLE `stuffdisable` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Reason` text NOT NULL COMMENT '禁用原因',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 禁用类库存配件表';

-- ----------------------------
-- Table structure for stuffdisablenot
-- ----------------------------
DROP TABLE IF EXISTS `stuffdisablenot`;
CREATE TABLE `stuffdisablenot` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???取消禁用配件表';

-- ----------------------------
-- Table structure for stuffimg
-- ----------------------------
DROP TABLE IF EXISTS `stuffimg`;
CREATE TABLE `stuffimg` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `Picture` varchar(15) NOT NULL COMMENT '配件图片(jpg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件图片表';

-- ----------------------------
-- Table structure for stuffmaintype
-- ----------------------------
DROP TABLE IF EXISTS `stuffmaintype`;
CREATE TABLE `stuffmaintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录行号',
  `TypeName` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '主分类名称',
  `TitleName` varchar(30) DEFAULT '',
  `TypeColor` varchar(7) NOT NULL COMMENT '分类颜色',
  `rColor` smallint(6) NOT NULL DEFAULT '0' COMMENT '画图表用RGB色',
  `gColor` smallint(6) NOT NULL DEFAULT '0' COMMENT '画图表用RGB色',
  `bColor` smallint(6) NOT NULL DEFAULT '0' COMMENT '画图表用RGB色',
  `blSign` tinyint(4) NOT NULL DEFAULT '1',
  `SortId` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配个分类主表';

-- ----------------------------
-- Table structure for stuffovertime
-- ----------------------------
DROP TABLE IF EXISTS `stuffovertime`;
CREATE TABLE `stuffovertime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `OverTime` tinyint(4) NOT NULL COMMENT '延长到日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='延长配件使用期限表';

-- ----------------------------
-- Table structure for stuffpdfprovider
-- ----------------------------
DROP TABLE IF EXISTS `stuffpdfprovider`;
CREATE TABLE `stuffpdfprovider` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL DEFAULT '0',
  `CompanyId` mediumint(9) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `ckDate` datetime DEFAULT NULL,
  `ckOperator` mediumint(9) NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for stuffproperty
-- ----------------------------
DROP TABLE IF EXISTS `stuffproperty`;
CREATE TABLE `stuffproperty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Property` tinyint(4) NOT NULL DEFAULT '0' COMMENT '配件属性ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Property` (`Property`,`StuffId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3511 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件属性表';

-- ----------------------------
-- Table structure for stuffpropertymaintype
-- ----------------------------
DROP TABLE IF EXISTS `stuffpropertymaintype`;
CREATE TABLE `stuffpropertymaintype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for stuffpropertytype
-- ----------------------------
DROP TABLE IF EXISTS `stuffpropertytype`;
CREATE TABLE `stuffpropertytype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `TypeName` varchar(30) NOT NULL COMMENT '属性名称',
  `TypeColor` varchar(7) NOT NULL COMMENT '16进制颜色',
  `rColor` smallint(6) NOT NULL COMMENT 'r分色',
  `gColor` smallint(6) NOT NULL COMMENT 'g分色',
  `bColor` smallint(6) NOT NULL COMMENT 'b分色',
  `MainType` tinyint(4) NOT NULL DEFAULT '1',
  `ActionId` mediumint(9) NOT NULL DEFAULT '0',
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件属性分类表';

-- ----------------------------
-- Table structure for stuffprovider
-- ----------------------------
DROP TABLE IF EXISTS `stuffprovider`;
CREATE TABLE `stuffprovider` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2493 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='?配件图档下载记录表';

-- ----------------------------
-- Table structure for stuffqcimg
-- ----------------------------
DROP TABLE IF EXISTS `stuffqcimg`;
CREATE TABLE `stuffqcimg` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `QcId` int(10) NOT NULL COMMENT '配件QC检验标准图自动ID,关联表：stuffqcstandard.ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件QC图链接关系表';

-- ----------------------------
-- Table structure for stuffqcless
-- ----------------------------
DROP TABLE IF EXISTS `stuffqcless`;
CREATE TABLE `stuffqcless` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(11) NOT NULL,
  `QcId` int(10) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='?';

-- ----------------------------
-- Table structure for stuffqcstandard
-- ----------------------------
DROP TABLE IF EXISTS `stuffqcstandard`;
CREATE TABLE `stuffqcstandard` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `TypeId` int(11) NOT NULL COMMENT '配件分类',
  `Title` text NOT NULL COMMENT '标准说明',
  `Picture` text NOT NULL COMMENT '内容文件(pdf,jpg,....)',
  `IsType` tinyint(4) NOT NULL COMMENT '是否类图?',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件QC检验标准图表';

-- ----------------------------
-- Table structure for stuffreach
-- ----------------------------
DROP TABLE IF EXISTS `stuffreach`;
CREATE TABLE `stuffreach` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `TypeId` int(11) NOT NULL COMMENT '配件分类ID',
  `Title` text NOT NULL COMMENT '认证图说明',
  `Picture` text NOT NULL COMMENT '内容文件(pdf,jpg,....)',
  `IsType` tinyint(4) NOT NULL COMMENT '是否类图',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件认证图表';

-- ----------------------------
-- Table structure for stuffreachlink
-- ----------------------------
DROP TABLE IF EXISTS `stuffreachlink`;
CREATE TABLE `stuffreachlink` (
  `Id` int(11) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `QcId` int(10) NOT NULL COMMENT '配件认证图自动ID,关联表：stuffreach.ID',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件认证图链接关系表';

-- ----------------------------
-- Table structure for stuffremark
-- ----------------------------
DROP TABLE IF EXISTS `stuffremark`;
CREATE TABLE `stuffremark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StuffId` mediumint(9) NOT NULL DEFAULT '0',
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Type` (`Type`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--仓库备注iphoneAPP使用';

-- ----------------------------
-- Table structure for stufftype
-- ----------------------------
DROP TABLE IF EXISTS `stufftype`;
CREATE TABLE `stufftype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Letter` char(1) NOT NULL COMMENT '排序字母',
  `TypeId` mediumint(9) NOT NULL COMMENT '分类Id',
  `mainType` int(11) NOT NULL COMMENT '主分类ID,关联表：stuffmaintype.ID',
  `TypeName` varchar(30) NOT NULL COMMENT '分类名称',
  `ActionId` mediumint(9) NOT NULL DEFAULT '0',
  `WorkShopId` mediumint(9) NOT NULL DEFAULT '0',
  `NameRule` text NOT NULL COMMENT '命名规则',
  `Position` smallint(6) NOT NULL COMMENT '存储位置',
  `AQL` varchar(6) NOT NULL COMMENT 'AQL',
  `BlType` tinyint(4) NOT NULL COMMENT '备料分类ID',
  `ForcePicSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '下单图片图档需求',
  `PicJobid` tinyint(4) NOT NULL DEFAULT '0' COMMENT '图片职责,关联表：jobdata.ID',
  `PicNumber` mediumint(9) NOT NULL COMMENT '图片上传人,关联表：staffmain.Number',
  `GicJobid` tinyint(4) NOT NULL DEFAULT '0' COMMENT '图档职责,关联表：jobdata.ID',
  `GicNumber` mediumint(9) NOT NULL DEFAULT '0' COMMENT '图档上传人,关联表：staffmain.Number',
  `CicJobid` tinyint(4) NOT NULL DEFAULT '0' COMMENT '?',
  `BuyerId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '默认采购',
  `DevelopGroupId` smallint(6) NOT NULL DEFAULT '0' COMMENT '开发小组,关联表：staffgroup.ID',
  `DevelopNumber` mediumint(9) NOT NULL DEFAULT '0' COMMENT '开发负责人,关联表：staffmain.Number',
  `jhDays` int(4) NOT NULL DEFAULT '30' COMMENT '交货周期(天)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `SeatId` varchar(10) DEFAULT NULL COMMENT '库位编号',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeId` (`TypeId`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE,
  KEY `mainType` (`mainType`) USING BTREE,
  KEY `PicJobid` (`PicJobid`) USING BTREE,
  KEY `GicJobid` (`GicJobid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=57 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件类型表';

-- ----------------------------
-- Table structure for stuffunit
-- ----------------------------
DROP TABLE IF EXISTS `stuffunit`;
CREATE TABLE `stuffunit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(10) NOT NULL,
  `decimals` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='配件单位';

-- ----------------------------
-- Table structure for stuffverify
-- ----------------------------
DROP TABLE IF EXISTS `stuffverify`;
CREATE TABLE `stuffverify` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Mid` int(10) NOT NULL COMMENT '配件自动ID',
  `StuffId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `Mid` (`Mid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 配件图档初审表';

-- ----------------------------
-- Table structure for stuff_loadbearing
-- ----------------------------
DROP TABLE IF EXISTS `stuff_loadbearing`;
CREATE TABLE `stuff_loadbearing` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `StuffId` int(11) NOT NULL COMMENT '配件ID',
  `Weight1` decimal(10,3) NOT NULL COMMENT '旧的外箱承重(Kg)',
  `Weight2` decimal(10,3) NOT NULL COMMENT '新的外箱承重(Kg)',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `StuffId_2` (`StuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='更新外箱承重表';

-- ----------------------------
-- Table structure for sybdata
-- ----------------------------
DROP TABLE IF EXISTS `sybdata`;
CREATE TABLE `sybdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ItemId` mediumint(9) NOT NULL COMMENT '损益表项目ID',
  `ItemName` varchar(50) NOT NULL COMMENT '损益表项目',
  `Month` varchar(10) NOT NULL COMMENT '数据统计月份',
  `Amount` decimal(12,0) NOT NULL COMMENT '统计金额',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `ItemId` (`ItemId`,`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='损益表月统计数据表';

-- ----------------------------
-- Table structure for sys1_baseset
-- ----------------------------
DROP TABLE IF EXISTS `sys1_baseset`;
CREATE TABLE `sys1_baseset` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `Name` varchar(20) NOT NULL COMMENT '类别名称',
  `KqSign` tinyint(4) NOT NULL COMMENT '类别标志',
  `GoWork1` int(11) DEFAULT NULL COMMENT '一班上班',
  `Advance1` int(11) DEFAULT NULL COMMENT '上班提前',
  `OffWork1` int(11) DEFAULT NULL COMMENT '一班下班',
  `Delay1` int(11) DEFAULT NULL COMMENT '下班延迟',
  `GoWork2` int(11) DEFAULT NULL COMMENT '二班上班',
  `Advance2` int(11) DEFAULT NULL COMMENT '上班提前',
  `OffWork2` int(11) DEFAULT NULL COMMENT '二班下班',
  `Delay2` int(11) DEFAULT NULL COMMENT '下班延迟',
  `GoWork3` int(11) DEFAULT NULL COMMENT '三班上班',
  `Advance3` int(11) DEFAULT NULL COMMENT '上班提前',
  `OffWork3` int(11) DEFAULT NULL COMMENT '三班下班',
  `Delay3` int(11) DEFAULT NULL COMMENT '下班延迟',
  `BreakStart` int(11) DEFAULT NULL COMMENT '午休开始',
  `BreakEnd` int(11) DEFAULT NULL COMMENT '午休结束',
  `CardTime` tinyint(4) DEFAULT NULL COMMENT '打卡次数',
  `IsNight` tinyint(4) DEFAULT NULL COMMENT '是否夜班',
  `IsContinue` tinyint(4) DEFAULT NULL COMMENT '是否连班',
  `Dx` decimal(7,2) NOT NULL COMMENT '底薪',
  `Shbz` decimal(7,2) NOT NULL COMMENT '生活补助',
  `Zsbz` decimal(7,2) NOT NULL COMMENT '住宿补助',
  `Jtbz` decimal(7,2) NOT NULL COMMENT '交通补助',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  UNIQUE KEY `KqSign` (`KqSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='员工薪资类型列表';

-- ----------------------------
-- Table structure for sys2_invoicemodel
-- ----------------------------
DROP TABLE IF EXISTS `sys2_invoicemodel`;
CREATE TABLE `sys2_invoicemodel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys2_labelmodel
-- ----------------------------
DROP TABLE IF EXISTS `sys2_labelmodel`;
CREATE TABLE `sys2_labelmodel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys3_pagemenu
-- ----------------------------
DROP TABLE IF EXISTS `sys3_pagemenu`;
CREATE TABLE `sys3_pagemenu` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `ToRecord` tinyint(4) NOT NULL DEFAULT '0',
  `ToPower` tinyint(4) NOT NULL DEFAULT '4',
  `ToPage` varchar(20) NOT NULL DEFAULT 'updated',
  `ToWin` varchar(10) NOT NULL DEFAULT '_self',
  `ToWarn` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=182 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys4_gysfunmodule
-- ----------------------------
DROP TABLE IF EXISTS `sys4_gysfunmodule`;
CREATE TABLE `sys4_gysfunmodule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '供应商功能模块ID',
  `ModuleName` varchar(50) NOT NULL COMMENT '功能名称',
  `Parameter` varchar(50) NOT NULL COMMENT '参数',
  `Remark` text NOT NULL COMMENT '备注',
  `AutoName` tinyint(4) NOT NULL COMMENT '自动功能名称前加公司名标记',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=26 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 供应商页面模块表';

-- ----------------------------
-- Table structure for sys4_gysfunpower
-- ----------------------------
DROP TABLE IF EXISTS `sys4_gysfunpower`;
CREATE TABLE `sys4_gysfunpower` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '功能模块ID',
  `IsPrice` tinyint(4) NOT NULL DEFAULT '1' COMMENT '页面是否显示价格',
  `UserId` int(11) NOT NULL COMMENT '用户ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=465 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 供应商权限表';

-- ----------------------------
-- Table structure for sys5_gysfunmodule
-- ----------------------------
DROP TABLE IF EXISTS `sys5_gysfunmodule`;
CREATE TABLE `sys5_gysfunmodule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ModuleId` mediumint(9) NOT NULL,
  `ModuleName` varchar(50) NOT NULL,
  `Parameter` varchar(50) NOT NULL,
  `Remark` text NOT NULL,
  `AutoName` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=MyISAM AUTO_INCREMENT=16 DEFAULT CHARSET=utf8 ROW_FORMAT=DYNAMIC COMMENT='--无用的表';

-- ----------------------------
-- Table structure for sys6_parameters
-- ----------------------------
DROP TABLE IF EXISTS `sys6_parameters`;
CREATE TABLE `sys6_parameters` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `PNumber` mediumint(9) NOT NULL COMMENT '参数ID',
  `ActionId` mediumint(9) NOT NULL,
  `Name` varchar(20) NOT NULL COMMENT '参数名称',
  `pValue` decimal(10,3) NOT NULL COMMENT '参数值',
  `Remark` text NOT NULL COMMENT '参数说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='系统参数列表';

-- ----------------------------
-- Table structure for sys6_parameters_log
-- ----------------------------
DROP TABLE IF EXISTS `sys6_parameters_log`;
CREATE TABLE `sys6_parameters_log` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `PNumber` mediumint(9) NOT NULL COMMENT '参数ID',
  `ActionId` mediumint(9) NOT NULL,
  `OldActionId` mediumint(9) NOT NULL,
  `Name` varchar(20) NOT NULL COMMENT '参数名称',
  `pValue` decimal(10,3) NOT NULL COMMENT '参数值',
  `OldpValue` decimal(11,3) NOT NULL,
  `Remark` text NOT NULL COMMENT '参数说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='系统参数列表';

-- ----------------------------
-- Table structure for sys7_clicktotal
-- ----------------------------
DROP TABLE IF EXISTS `sys7_clicktotal`;
CREATE TABLE `sys7_clicktotal` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ComeFrom` tinyint(4) NOT NULL,
  `FunctionId` int(11) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `ClickDate` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=301376 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表，可删除，点击计数表';

-- ----------------------------
-- Table structure for sys8_pandlmain
-- ----------------------------
DROP TABLE IF EXISTS `sys8_pandlmain`;
CREATE TABLE `sys8_pandlmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ItemName` varchar(50) NOT NULL,
  `ColorCode` varchar(7) NOT NULL,
  `SortId` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys8_pandlsheet
-- ----------------------------
DROP TABLE IF EXISTS `sys8_pandlsheet`;
CREATE TABLE `sys8_pandlsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL,
  `ItemName` varchar(50) NOT NULL,
  `SortId` int(11) NOT NULL,
  `Remark` text NOT NULL,
  `Sign` varchar(50) NOT NULL,
  `Parameters` varchar(200) NOT NULL,
  `AjaxView` tinyint(4) NOT NULL,
  `AjaxNo` smallint(6) NOT NULL,
  `Using` tinyint(4) NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=194 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys9_factorycheck
-- ----------------------------
DROP TABLE IF EXISTS `sys9_factorycheck`;
CREATE TABLE `sys9_factorycheck` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CheckDate` date NOT NULL COMMENT '工单流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text COMMENT '详细内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CheckDate` (`CheckDate`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单锁定表';

-- ----------------------------
-- Table structure for sys_clientfunmodule
-- ----------------------------
DROP TABLE IF EXISTS `sys_clientfunmodule`;
CREATE TABLE `sys_clientfunmodule` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '客户功能模块ID',
  `ModuleName` varchar(50) NOT NULL COMMENT '功能名称',
  `Parameter` varchar(50) NOT NULL COMMENT '参数',
  `Remark` text NOT NULL COMMENT '备注',
  `AutoName` tinyint(4) NOT NULL COMMENT '自动功能名称前加公司名标记',
  `Oby` tinyint(4) NOT NULL COMMENT '显示排序',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户页面功能表';

-- ----------------------------
-- Table structure for sys_clientfunpower
-- ----------------------------
DROP TABLE IF EXISTS `sys_clientfunpower`;
CREATE TABLE `sys_clientfunpower` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '客户功能模块ID',
  `UserId` int(11) NOT NULL COMMENT '用户ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户权限表';

-- ----------------------------
-- Table structure for sys_clientstaffs
-- ----------------------------
DROP TABLE IF EXISTS `sys_clientstaffs`;
CREATE TABLE `sys_clientstaffs` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `Number` mediumint(9) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表，设置业务与客户的关联';

-- ----------------------------
-- Table structure for sys_closingdate
-- ----------------------------
DROP TABLE IF EXISTS `sys_closingdate`;
CREATE TABLE `sys_closingdate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Month` varchar(7) NOT NULL COMMENT '关帐月份',
  `ClosingDate` date NOT NULL COMMENT '关帐日期',
  `Remark` text COMMENT '备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Month` (`Month`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys_config
-- ----------------------------
DROP TABLE IF EXISTS `sys_config`;
CREATE TABLE `sys_config` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CId` mediumint(9) NOT NULL,
  `Name` varchar(255) NOT NULL,
  `Parameters` varchar(255) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CId` (`CId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for sys_updateinfo
-- ----------------------------
DROP TABLE IF EXISTS `sys_updateinfo`;
CREATE TABLE `sys_updateinfo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7',
  `cRemark` text NOT NULL,
  `eRemark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for tasklistdata
-- ----------------------------
DROP TABLE IF EXISTS `tasklistdata`;
CREATE TABLE `tasklistdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL,
  `ItemId` mediumint(9) NOT NULL,
  `Title` varchar(150) NOT NULL,
  `Description` text NOT NULL,
  `Extra` text NOT NULL,
  `TypeId` tinyint(4) NOT NULL,
  `InCol` tinyint(4) NOT NULL,
  `Oby` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Title` (`Title`) USING BTREE,
  UNIQUE KEY `ItemId` (`ItemId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=153 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for tasktype
-- ----------------------------
DROP TABLE IF EXISTS `tasktype`;
CREATE TABLE `tasktype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for taskuserdata
-- ----------------------------
DROP TABLE IF EXISTS `taskuserdata`;
CREATE TABLE `taskuserdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `ItemId` mediumint(9) NOT NULL COMMENT '桌面功能ID,关联表：d0.tasklistdata',
  `UserId` int(11) NOT NULL COMMENT '用户ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ItemId` (`ItemId`) USING BTREE,
  KEY `UserId` (`UserId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=55190 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 桌面特殊功能权限表';

-- ----------------------------
-- Table structure for taxtype
-- ----------------------------
DROP TABLE IF EXISTS `taxtype`;
CREATE TABLE `taxtype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL COMMENT '类型名称',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BranchId` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=8 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for test_debug
-- ----------------------------
DROP TABLE IF EXISTS `test_debug`;
CREATE TABLE `test_debug` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `value1` varchar(5000) DEFAULT NULL,
  `value2` varchar(50) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=40904 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for trade_category
-- ----------------------------
DROP TABLE IF EXISTS `trade_category`;
CREATE TABLE `trade_category` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL DEFAULT '#FFFFFF',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='公司类别';

-- ----------------------------
-- Table structure for trade_drawing
-- ----------------------------
DROP TABLE IF EXISTS `trade_drawing`;
CREATE TABLE `trade_drawing` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `CmptTypeId` mediumint(9) DEFAULT NULL,
  `CmptType` varchar(20) DEFAULT NULL COMMENT '构件类型',
  `BuildingNo` varchar(20) DEFAULT NULL COMMENT '楼栋编号',
  `FloorNo` varchar(20) DEFAULT NULL COMMENT '楼层编号',
  `CmptNo` varchar(20) DEFAULT NULL COMMENT '构件编号',
  `ProdCode` varchar(20) DEFAULT NULL COMMENT '产品条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '0' COMMENT '0-提交数据\r\n 1-申请校对-等待校对 \r\n2-已经校核\r\n 3-提交审核 - 等待审核\r\n 4-审核通过\r\n 5-审核不通过 \r\n6-审核退回 \r\n7-在生产\r\n8-已生产',
  `MouldNo` varchar(20) DEFAULT NULL COMMENT '模具编号',
  `CStr` varchar(20) DEFAULT NULL COMMENT '混凝土强度',
  `Length` int(10) DEFAULT NULL COMMENT '长',
  `Width` int(10) DEFAULT NULL COMMENT '宽',
  `Thick` int(10) DEFAULT NULL COMMENT '厚',
  `Sizes` text COMMENT '洞口尺寸数据',
  `HoleVol` decimal(15,5) DEFAULT NULL COMMENT '洞口体积',
  `Area` decimal(15,5) DEFAULT NULL COMMENT '面积',
  `DwgVol` decimal(15,5) DEFAULT NULL COMMENT '图纸体积',
  `CVol` decimal(15,5) DEFAULT NULL COMMENT '混凝土体积',
  `Weight` decimal(15,5) DEFAULT NULL COMMENT '重量',
  `EndDwg` varchar(20) DEFAULT NULL COMMENT '构件成品图纸',
  `EmbeddedDwg` varchar(20) NOT NULL COMMENT '构件预埋图纸',
  `SteelDwg` varchar(20) DEFAULT NULL COMMENT '构件钢筋图纸',
  `DieDwg` varchar(20) DEFAULT NULL COMMENT '模具图纸',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `UpdateReasons` text COMMENT '更新原因',
  `ReturnReasons` text COMMENT '退回原因',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `SN` int(10) DEFAULT NULL COMMENT 'EXCEL导入的顺序号',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=62167 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='图纸';

-- ----------------------------
-- Table structure for trade_drawing_hole
-- ----------------------------
DROP TABLE IF EXISTS `trade_drawing_hole`;
CREATE TABLE `trade_drawing_hole` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT 'trade_object.Id',
  `Titles` text COMMENT '洞口标题',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=32 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='空洞尺寸数据';

-- ----------------------------
-- Table structure for trade_embedded
-- ----------------------------
DROP TABLE IF EXISTS `trade_embedded`;
CREATE TABLE `trade_embedded` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `CmptTypeId` mediumint(9) DEFAULT NULL,
  `CmptType` varchar(20) DEFAULT NULL COMMENT '构件类型',
  `BuildingNo` varchar(20) DEFAULT NULL COMMENT '楼栋编号',
  `FloorNo` varchar(20) DEFAULT NULL COMMENT '楼层编号',
  `CmptNo` varchar(20) DEFAULT NULL COMMENT '构件编号',
  `ProdCode` varchar(20) DEFAULT NULL COMMENT '产品条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Length` int(10) DEFAULT NULL COMMENT '长',
  `Width` int(10) DEFAULT NULL COMMENT '宽',
  `Thick` int(10) DEFAULT NULL COMMENT '厚',
  `Quantities` text,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `UpdateReasons` text COMMENT '更新原因',
  `ReturnReasons` text COMMENT '退回原因',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `SN` int(10) DEFAULT NULL COMMENT 'EXCEL导入的顺序号',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=62209 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预埋';

-- ----------------------------
-- Table structure for trade_embedded_data
-- ----------------------------
DROP TABLE IF EXISTS `trade_embedded_data`;
CREATE TABLE `trade_embedded_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `Titles` text COMMENT '标题',
  `Specs` text COMMENT '规格',
  `BuildingNo` varchar(20) DEFAULT NULL COMMENT '楼栋编号',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=55 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='预埋数据';

-- ----------------------------
-- Table structure for trade_info
-- ----------------------------
DROP TABLE IF EXISTS `trade_info`;
CREATE TABLE `trade_info` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `TradeNo` varchar(20) DEFAULT NULL COMMENT '项目编号',
  `EstTime` date DEFAULT NULL COMMENT '立项时间',
  `Proofreader` int(10) unsigned DEFAULT NULL COMMENT '校对者',
  `Proofreaded` datetime DEFAULT NULL COMMENT '校对时间',
  `PReasons` text COMMENT '校对意见',
  `Proofreader1` int(10) unsigned DEFAULT NULL COMMENT '校对者 复校',
  `Proofreaded1` datetime DEFAULT NULL COMMENT '校对时间 复校',
  `PReasons1` text COMMENT '校对意见 复校',
  `Checker` int(10) unsigned DEFAULT NULL COMMENT '审核人',
  `Checked` datetime DEFAULT NULL COMMENT '审核时间',
  `CReasons` text COMMENT '审核意见',
  `Members` text COMMENT '项目人员',
  `Produced` datetime DEFAULT NULL COMMENT '提交生成时间',
  `Producer` int(10) unsigned DEFAULT NULL COMMENT '生成负责人',
  `Estate` tinyint(3) NOT NULL DEFAULT '0',
  `CmptTotal` int(10) DEFAULT '0' COMMENT '构件总数量',
  `DrawingFiles` text COMMENT '图纸文件',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=61 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='图纸';

-- ----------------------------
-- Table structure for trade_nature
-- ----------------------------
DROP TABLE IF EXISTS `trade_nature`;
CREATE TABLE `trade_nature` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL DEFAULT '#FFFFFF',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='公司性质';

-- ----------------------------
-- Table structure for trade_object
-- ----------------------------
DROP TABLE IF EXISTS `trade_object`;
CREATE TABLE `trade_object` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `jcId` varchar(10) DEFAULT NULL COMMENT '从景创原易助系统中继承过来的字段ID',
  `cSign` tinyint(4) NOT NULL COMMENT '所属公司标识',
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司ID',
  `Letter` varchar(1) NOT NULL COMMENT '首字母',
  `Forshort` varchar(20) NOT NULL COMMENT '公司简称',
  `Logo` varchar(20) NOT NULL,
  `PayMode` tinyint(4) NOT NULL COMMENT '付款模式',
  `GysPayMode` tinyint(4) NOT NULL COMMENT '供应商的结款方式',
  `SaleMode` tinyint(4) NOT NULL DEFAULT '0' COMMENT '销售模式',
  `Currency` tinyint(4) NOT NULL COMMENT '结付货币,关联表：currencydata.ID',
  `ExpNum` varchar(100) NOT NULL COMMENT '快递帐号',
  `PayType` tinyint(4) NOT NULL COMMENT '支付类型（客户）',
  `BankId` tinyint(4) NOT NULL DEFAULT '5' COMMENT '银行ID,关联表：my2_bankinfo.ID---客户',
  `CompanySign` int(4) NOT NULL DEFAULT '7' COMMENT '内部公司共享标记',
  `PriceTerm` varchar(100) NOT NULL COMMENT 'Price Term---客户，在INVOICE里面显示',
  `ChinaSafeSign` tinyint(4) NOT NULL DEFAULT '0',
  `ChinaSafe` varchar(50) NOT NULL,
  `Staff_Number` mediumint(9) NOT NULL COMMENT '我公司联系人,关联表：staffmain.Number---客户',
  `PickNumber` int(1) NOT NULL DEFAULT '7' COMMENT '标签---客户',
  `FscNo` varchar(20) NOT NULL COMMENT 'FSC证书编号---供应商',
  `ProviderType` tinyint(4) NOT NULL COMMENT '供应商类型---供应商',
  `Prepayment` tinyint(4) NOT NULL DEFAULT '0' COMMENT '是否先付款',
  `Judge` varchar(200) NOT NULL COMMENT '评审----供应商',
  `LimitTime` tinyint(4) NOT NULL DEFAULT '2' COMMENT '限交货期(天)---供应商',
  `PackFile` tinyint(4) NOT NULL DEFAULT '0' COMMENT '胶框图----供应商',
  `TipsFile` tinyint(4) NOT NULL DEFAULT '0' COMMENT '提示图----供应商',
  `OrderBy` int(6) NOT NULL,
  `ObjectSign` tinyint(2) DEFAULT NULL,
  `Type` tinyint(4) DEFAULT '0' COMMENT '内部部门标识 1',
  `UpdateReasons` text COMMENT '更新原因',
  `ReturnReasons` text COMMENT '退回原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  UNIQUE KEY `Forshort` (`Forshort`) USING BTREE,
  KEY `Letter` (`Letter`) USING BTREE,
  KEY `ObjectSign` (`ObjectSign`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=35 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='交易对象表';

-- ----------------------------
-- Table structure for trade_steel
-- ----------------------------
DROP TABLE IF EXISTS `trade_steel`;
CREATE TABLE `trade_steel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `CmptTypeId` mediumint(9) DEFAULT NULL,
  `CmptType` varchar(20) DEFAULT NULL COMMENT '构件类型',
  `BuildingNo` varchar(20) DEFAULT NULL COMMENT '楼栋编号',
  `FloorNo` varchar(20) DEFAULT NULL COMMENT '楼层编号',
  `CmptNo` varchar(20) DEFAULT NULL COMMENT '构件编号',
  `ProdCode` varchar(20) DEFAULT NULL COMMENT '产品条码',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '0',
  `Length` int(10) DEFAULT NULL COMMENT '长',
  `Width` int(10) DEFAULT NULL COMMENT '宽',
  `Thick` int(10) DEFAULT NULL COMMENT '厚',
  `Quantities` text COMMENT '钢筋数量',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `UpdateReasons` text COMMENT '更新原因',
  `ReturnReasons` text COMMENT '退回原因',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `SN` int(10) DEFAULT NULL COMMENT 'EXCEL导入的顺序号',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=62240 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='钢筋';

-- ----------------------------
-- Table structure for trade_steel_data
-- ----------------------------
DROP TABLE IF EXISTS `trade_steel_data`;
CREATE TABLE `trade_steel_data` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '自增ID',
  `TradeId` int(10) NOT NULL COMMENT '项目id trade_object.Id',
  `Titles` text COMMENT '标题',
  `Specs` text COMMENT '规格',
  `Sizes` text COMMENT '下料尺寸',
  `BuildingNo` varchar(20) DEFAULT NULL COMMENT '楼栋编号',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='钢筋数据';

-- ----------------------------
-- Table structure for trade_type
-- ----------------------------
DROP TABLE IF EXISTS `trade_type`;
CREATE TABLE `trade_type` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL,
  `OrderBy` int(10) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for unpay_unreceive_log
-- ----------------------------
DROP TABLE IF EXISTS `unpay_unreceive_log`;
CREATE TABLE `unpay_unreceive_log` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `remark` varchar(200) DEFAULT NULL,
  `time` varchar(30) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `comId_y_m` varchar(50) NOT NULL,
  `pay_reci` int(11) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for unplug_data
-- ----------------------------
DROP TABLE IF EXISTS `unplug_data`;
CREATE TABLE `unplug_data` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Floor` varchar(20) NOT NULL COMMENT '打卡区',
  `ImgURL` varchar(100) NOT NULL COMMENT '图片链接地址',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报警图片列表';

-- ----------------------------
-- Table structure for upload_records
-- ----------------------------
DROP TABLE IF EXISTS `upload_records`;
CREATE TABLE `upload_records` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '记录自增ID',
  `RId` mediumint(9) NOT NULL DEFAULT '0' COMMENT '配件或产品ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '1.产品标准图',
  `TypeName` varchar(30) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='图档上传记录表';

-- ----------------------------
-- Table structure for upopedom
-- ----------------------------
DROP TABLE IF EXISTS `upopedom`;
CREATE TABLE `upopedom` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `UserId` int(11) NOT NULL COMMENT '用户ID',
  `ModuleId` mediumint(9) NOT NULL COMMENT '模块ID,关联表：d0.funmodule',
  `Action` tinyint(4) NOT NULL COMMENT '操作权限',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `UserId` (`UserId`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=83002 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  系统权限表';

-- ----------------------------
-- Table structure for usertable
-- ----------------------------
DROP TABLE IF EXISTS `usertable`;
CREATE TABLE `usertable` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `uType` tinyint(4) NOT NULL COMMENT '用户分类',
  `uName` varchar(16) NOT NULL COMMENT '登录用户名',
  `uPwd` varchar(32) NOT NULL COMMENT '密码',
  `Number` varchar(14) NOT NULL COMMENT '用户ID',
  `uSeal` tinyint(4) NOT NULL COMMENT '印章标识(gif)',
  `lDate` datetime NOT NULL COMMENT '最近一次登录系统日期',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `WebStyle` tinyint(4) NOT NULL COMMENT '网页显示风格',
  `FaxNO` varchar(3) NOT NULL COMMENT '传真',
  `uSign` tinyint(4) NOT NULL COMMENT '可否更改密码标识',
  `roleId` tinyint(4) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1' COMMENT '禁用状态，0：已禁用 1：没禁用',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `session` varchar(64) DEFAULT NULL,
  `openid` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `uName` (`uName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1108 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 用户表';

-- ----------------------------
-- Table structure for usertype
-- ----------------------------
DROP TABLE IF EXISTS `usertype`;
CREATE TABLE `usertype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(30) NOT NULL,
  `Color` varchar(7) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for wage_list
-- ----------------------------
DROP TABLE IF EXISTS `wage_list`;
CREATE TABLE `wage_list` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Month` varchar(10) NOT NULL COMMENT '年月',
  `FileName` varchar(20) DEFAULT NULL COMMENT '文件名',
  `cSign` int(1) NOT NULL COMMENT '登陆标示',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Month` (`Month`,`cSign`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 工资单';

-- ----------------------------
-- Table structure for wage_list_sign
-- ----------------------------
DROP TABLE IF EXISTS `wage_list_sign`;
CREATE TABLE `wage_list_sign` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(10) NOT NULL COMMENT '员工编号,关联表：staffmain.Number',
  `SignMonth` varchar(8) NOT NULL COMMENT '签名月份',
  `Sign` text NOT NULL COMMENT '签名',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`,`SignMonth`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 员工工资确认表';

-- ----------------------------
-- Table structure for wage_sign_overtime
-- ----------------------------
DROP TABLE IF EXISTS `wage_sign_overtime`;
CREATE TABLE `wage_sign_overtime` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `Number` int(11) NOT NULL COMMENT '员工编号',
  `Month` varchar(10) NOT NULL COMMENT '扣款月份',
  `PayMent` int(11) NOT NULL COMMENT '扣款金额',
  `Remark` text NOT NULL COMMENT '记录修改原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 薪资逾期确认扣款';

-- ----------------------------
-- Table structure for warehouse
-- ----------------------------
DROP TABLE IF EXISTS `warehouse`;
CREATE TABLE `warehouse` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(12) NOT NULL COMMENT '存储位置',
  `Type` tinyint(4) NOT NULL DEFAULT '0',
  `Remark` text COMMENT '楼层',
  `WorkAdd` tinyint(4) NOT NULL DEFAULT '99',
  `Floor` tinyint(4) NOT NULL COMMENT '备料车间Id',
  `Address` varchar(100) DEFAULT '',
  `SendFloor` varchar(50) DEFAULT NULL,
  `SortId` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓库位置表';

-- ----------------------------
-- Table structure for warehousedata
-- ----------------------------
DROP TABLE IF EXISTS `warehousedata`;
CREATE TABLE `warehousedata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(12) NOT NULL COMMENT '存储位置',
  `Remark` text NOT NULL COMMENT '楼层',
  `CheckSign` tinyint(4) DEFAULT '99',
  `BlWorkShopId` varchar(50) DEFAULT NULL COMMENT '备料车间Id',
  `Address` varchar(100) DEFAULT '',
  `SortId` tinyint(4) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='仓库位置表';

-- ----------------------------
-- Table structure for webstyle
-- ----------------------------
DROP TABLE IF EXISTS `webstyle`;
CREATE TABLE `webstyle` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(16) NOT NULL COMMENT '风格名称',
  `Dir` varchar(10) NOT NULL COMMENT '文件夹名称',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  UNIQUE KEY `Dir` (`Dir`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 页面颜色类型';

-- ----------------------------
-- Table structure for weightchangelist
-- ----------------------------
DROP TABLE IF EXISTS `weightchangelist`;
CREATE TABLE `weightchangelist` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `ProductId` int(10) NOT NULL,
  `BoxId` char(50) NOT NULL,
  `Weight` decimal(10,3) NOT NULL,
  `TimeStamp` datetime NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `BoxId` (`BoxId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='???????';

-- ----------------------------
-- Table structure for wms_checkorder
-- ----------------------------
DROP TABLE IF EXISTS `wms_checkorder`;
CREATE TABLE `wms_checkorder` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) NOT NULL COMMENT '单据流水号',
  `CheckName` varchar(15) NOT NULL COMMENT '盘点计划名称',
  `StartDate` datetime DEFAULT NULL COMMENT '开始日期',
  `EndDate` datetime DEFAULT NULL COMMENT '结束日期',
  `TaskStatus` int(10) NOT NULL DEFAULT '0' COMMENT '计划状态',
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '盘点单',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='盘点计划表';

-- ----------------------------
-- Table structure for wms_ckmain
-- ----------------------------
DROP TABLE IF EXISTS `wms_ckmain`;
CREATE TABLE `wms_ckmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(15) NOT NULL COMMENT '出库单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `ForShort` varchar(30) DEFAULT NULL,
  `Remark` text NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  `InType` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0-原辅材料；1-成品',
  `Status` tinyint(3) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  FULLTEXT KEY `Remark` (`Remark`)
) ENGINE=InnoDB AUTO_INCREMENT=23 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出库单主表';

-- ----------------------------
-- Table structure for wms_cksheet
-- ----------------------------
DROP TABLE IF EXISTS `wms_cksheet`;
CREATE TABLE `wms_cksheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(20) DEFAULT NULL,
  `StockId` varchar(20) NOT NULL COMMENT '采购流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `StuffCName` varchar(30) DEFAULT NULL,
  `Qty` decimal(11,2) NOT NULL COMMENT '出库数量',
  `UnitId` int(10) NOT NULL,
  `UnitName` varchar(10) DEFAULT NULL,
  `gys_Id` int(10) DEFAULT NULL,
  `LocationId` int(10) DEFAULT '0',
  `Type` tinyint(3) NOT NULL COMMENT '出库类别：1、成品出库；2、半成品出库;3、领料出库',
  `FromId` int(10) NOT NULL DEFAULT '3',
  `FromFunction` varchar(100) DEFAULT '领料出库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Mid` int(13) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `gys_Id` (`gys_Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=38 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出库单子表';

-- ----------------------------
-- Table structure for wms_ini
-- ----------------------------
DROP TABLE IF EXISTS `wms_ini`;
CREATE TABLE `wms_ini` (
  `Id` int(5) NOT NULL AUTO_INCREMENT,
  `Name` varchar(20) NOT NULL,
  `Value` varchar(20) DEFAULT NULL,
  `Operator` int(8) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for wms_location
-- ----------------------------
DROP TABLE IF EXISTS `wms_location`;
CREATE TABLE `wms_location` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `LocationId` varchar(15) NOT NULL COMMENT '库位号',
  `TaskId` varchar(15) NOT NULL COMMENT '入库任务号',
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '采购单入库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `InventoryType` varchar(15) NOT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TaskId` (`TaskId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='库位上架表';

-- ----------------------------
-- Table structure for wms_mtmain
-- ----------------------------
DROP TABLE IF EXISTS `wms_mtmain`;
CREATE TABLE `wms_mtmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TrolleyId` varchar(15) NOT NULL COMMENT '模台编号',
  `LocationId` int(10) DEFAULT '0' COMMENT '位置编号',
  `LocationName` varchar(15) DEFAULT NULL,
  `Status` tinyint(4) NOT NULL DEFAULT '0' COMMENT '状态：0、空置；1、准备布模;2、已满；3、拆模；4、拆完；',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TrolleyId` (`TrolleyId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模台主表';

-- ----------------------------
-- Table structure for wms_mtsheet
-- ----------------------------
DROP TABLE IF EXISTS `wms_mtsheet`;
CREATE TABLE `wms_mtsheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `TrolleyId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '工单流水号',
  `ForShort` varchar(15) DEFAULT NULL,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `ProductName` varchar(15) NOT NULL COMMENT '产品名称',
  `ModelName` varchar(15) DEFAULT NULL COMMENT '模具名称',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Mid` int(13) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `TrolleyId` (`TrolleyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='模台子表';

-- ----------------------------
-- Table structure for wms_rkmain
-- ----------------------------
DROP TABLE IF EXISTS `wms_rkmain`;
CREATE TABLE `wms_rkmain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BillNumber` varchar(15) NOT NULL COMMENT '入库单号',
  `CompanyId` mediumint(9) NOT NULL COMMENT '供应商ID',
  `ForShort` varchar(30) DEFAULT NULL,
  `KHCompanyId` mediumint(9) NOT NULL,
  `KHForShort` varchar(30) DEFAULT NULL,
  `InType` tinyint(3) NOT NULL DEFAULT '0',
  `Remark` text,
  `Status` tinyint(4) NOT NULL DEFAULT '0',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE,
  FULLTEXT KEY `Remark` (`Remark`)
) ENGINE=InnoDB AUTO_INCREMENT=41 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库单主表';

-- ----------------------------
-- Table structure for wms_rksheet
-- ----------------------------
DROP TABLE IF EXISTS `wms_rksheet`;
CREATE TABLE `wms_rksheet` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(20) DEFAULT NULL,
  `StockId` varchar(20) NOT NULL COMMENT '采购流水号',
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `Qty` decimal(11,2) NOT NULL COMMENT '入库数量',
  `UnitId` int(10) DEFAULT NULL,
  `UnitName` varchar(10) DEFAULT NULL,
  `gys_Id` int(10) DEFAULT NULL,
  `LocationId` int(10) DEFAULT '0',
  `Type` tinyint(3) NOT NULL COMMENT '入库类别：1、采购入库；2、备品转入;3、补仓入库，4、删单入库；5、车间退料入库',
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '采购单入库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Mid` int(13) NOT NULL,
  `StuffCname` varchar(30) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `StuffId` (`StuffId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `gys_Id` (`gys_Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=56 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库单子表';

-- ----------------------------
-- Table structure for wms_seat
-- ----------------------------
DROP TABLE IF EXISTS `wms_seat`;
CREATE TABLE `wms_seat` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `SeatId` varchar(15) NOT NULL COMMENT '库位号',
  `SeatName` varchar(15) DEFAULT NULL COMMENT '库位名称',
  `SeatType` varchar(15) DEFAULT NULL COMMENT '库位类型',
  `ZoneName` varchar(15) DEFAULT NULL,
  `Company` varchar(13) DEFAULT NULL COMMENT '所属公司',
  `TypeId` varchar(100) DEFAULT NULL,
  `WareHouse` varchar(13) DEFAULT NULL COMMENT '仓库名称',
  `WareHouseId` int(10) NOT NULL DEFAULT '0',
  `SeatStatus` int(10) NOT NULL DEFAULT '0' COMMENT '库位状态',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `SeatId` (`SeatId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=1403 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='库位表';

-- ----------------------------
-- Table structure for wms_taskcheck
-- ----------------------------
DROP TABLE IF EXISTS `wms_taskcheck`;
CREATE TABLE `wms_taskcheck` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) DEFAULT NULL COMMENT '单据流水号',
  `StockId` varchar(15) DEFAULT NULL COMMENT '明细流水号',
  `LocationId` varchar(15) NOT NULL COMMENT '库位ID',
  `TaskId` varchar(15) DEFAULT NULL COMMENT '包装编号',
  `StuffId` mediumint(9) DEFAULT NULL COMMENT '配件ID',
  `StuffName` varchar(50) DEFAULT NULL,
  `TaskQty` decimal(11,2) DEFAULT NULL COMMENT '包装数量',
  `TaskStatus` int(10) DEFAULT '0',
  `Forshort` varchar(10) DEFAULT NULL COMMENT '公司名称',
  `FromId` int(10) DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '盘点单',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for \r\nunlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `LocationId` (`LocationId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='盘点任务表';

-- ----------------------------
-- Table structure for wms_taskin
-- ----------------------------
DROP TABLE IF EXISTS `wms_taskin`;
CREATE TABLE `wms_taskin` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `StuffName` varchar(50) NOT NULL,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `TypeId` varchar(15) DEFAULT NULL,
  `TaskQty` decimal(11,2) NOT NULL COMMENT '本次数量',
  `TaskStatus` int(10) NOT NULL DEFAULT '0',
  `TaskId` varchar(15) NOT NULL COMMENT '入库任务号',
  `Forshort` varchar(10) DEFAULT NULL,
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '采购单入库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `LocationId` varchar(15) DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TaskId` (`TaskId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=89 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='入库任务表';

-- ----------------------------
-- Table structure for wms_taskout
-- ----------------------------
DROP TABLE IF EXISTS `wms_taskout`;
CREATE TABLE `wms_taskout` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `StuffName` varchar(50) NOT NULL,
  `StuffId` mediumint(9) NOT NULL COMMENT '配件ID',
  `TaskQty` decimal(11,2) NOT NULL COMMENT '包装数量',
  `TaskStatus` int(10) NOT NULL DEFAULT '0',
  `TaskId` varchar(15) NOT NULL COMMENT '包装编号',
  `OutCaseId` varchar(15) DEFAULT NULL COMMENT '出库后放进的容器编号',
  `Forshort` varchar(10) DEFAULT NULL,
  `FromId` int(10) NOT NULL DEFAULT '0',
  `FromFunction` varchar(100) DEFAULT '领料单出库',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `LocationId` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TaskId` (`TaskId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=99 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='出库任务表';

-- ----------------------------
-- Table structure for workmodelfile
-- ----------------------------
DROP TABLE IF EXISTS `workmodelfile`;
CREATE TABLE `workmodelfile` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Note` varchar(50) NOT NULL COMMENT '模板名称',
  `Attached` varchar(20) NOT NULL COMMENT '关联文件',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Note` (`Note`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 工作模板表';

-- ----------------------------
-- Table structure for workorderaction
-- ----------------------------
DROP TABLE IF EXISTS `workorderaction`;
CREATE TABLE `workorderaction` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ActionId` mediumint(9) NOT NULL,
  `Name` varchar(30) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `SemiSign` tinyint(4) NOT NULL DEFAULT '1' COMMENT '半成品工序',
  `Estate` tinyint(4) NOT NULL,
  `Locks` tinyint(4) NOT NULL,
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ActionId` (`ActionId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for workscline
-- ----------------------------
DROP TABLE IF EXISTS `workscline`;
CREATE TABLE `workscline` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(2) DEFAULT NULL,
  `Name` varchar(50) NOT NULL,
  `WorkShopId` int(9) NOT NULL,
  `GroupId` mediumint(6) NOT NULL DEFAULT '0',
  `IP` varchar(15) DEFAULT NULL,
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for workscline_sortbox
-- ----------------------------
DROP TABLE IF EXISTS `workscline_sortbox`;
CREATE TABLE `workscline_sortbox` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Letter` varchar(2) DEFAULT NULL,
  `Name` varchar(50) NOT NULL,
  `WorkShopId` int(9) NOT NULL,
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for workshopdata
-- ----------------------------
DROP TABLE IF EXISTS `workshopdata`;
CREATE TABLE `workshopdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL,
  `LeaderNumber` mediumint(9) NOT NULL DEFAULT '0',
  `GroupId` varchar(50) NOT NULL DEFAULT '',
  `WorkAddId` tinyint(4) NOT NULL,
  `ActionId` smallint(4) NOT NULL DEFAULT '103',
  `semiSign` tinyint(4) NOT NULL DEFAULT '0' COMMENT '半成品加工车间',
  `ScCheckSign` tinyint(4) NOT NULL DEFAULT '0',
  `CanStockWeek` tinyint(4) NOT NULL DEFAULT '-1' COMMENT '可备料周数',
  `dFromId` varchar(50) DEFAULT NULL COMMENT '上班签卡位置',
  `Floor` varchar(10) DEFAULT NULL,
  `Remark` text,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for worktime_limited
-- ----------------------------
DROP TABLE IF EXISTS `worktime_limited`;
CREATE TABLE `worktime_limited` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ModuleId` mediumint(9) NOT NULL,
  `Name` varchar(50) NOT NULL,
  `Timeout` tinyint(4) NOT NULL,
  `Unit` tinyint(4) NOT NULL DEFAULT '1',
  `Auditor` mediumint(9) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE,
  KEY `ModuleId` (`ModuleId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for wx_code
-- ----------------------------
DROP TABLE IF EXISTS `wx_code`;
CREATE TABLE `wx_code` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增id',
  `CodeName` varchar(255) DEFAULT NULL COMMENT '代码名称',
  `CodeValue` varchar(255) DEFAULT '' COMMENT '代码值',
  `ExpireTime` int(11) unsigned DEFAULT '0' COMMENT '有效期',
  `remark` varchar(255) DEFAULT '' COMMENT '备注',
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='微信参数表';

-- ----------------------------
-- Table structure for wx_token
-- ----------------------------
DROP TABLE IF EXISTS `wx_token`;
CREATE TABLE `wx_token` (
  `Id` int(11) NOT NULL AUTO_INCREMENT COMMENT '自增id',
  `openid` varchar(255) DEFAULT NULL COMMENT '微信用户id',
  `access_token` varchar(255) DEFAULT NULL,
  `at_expire_time` int(4) DEFAULT NULL,
  `refresh_token` varchar(255) DEFAULT NULL,
  `rt_expire_time` int(4) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `openid` (`openid`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='微信token缓存表';

-- ----------------------------
-- Table structure for yw10_ordersplit
-- ----------------------------
DROP TABLE IF EXISTS `yw10_ordersplit`;
CREATE TABLE `yw10_ordersplit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `sPOrderId` varchar(12) NOT NULL,
  `Qty` int(10) NOT NULL COMMENT '数量',
  `Qty1` int(10) NOT NULL COMMENT '分拆数量1',
  `Qty2` int(10) NOT NULL COMMENT '分拆数量2',
  `Remark` text NOT NULL COMMENT '拆单原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '拆分时间',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='拆分订单记录表';

-- ----------------------------
-- Table structure for yw10_ordersplit_audit
-- ----------------------------
DROP TABLE IF EXISTS `yw10_ordersplit_audit`;
CREATE TABLE `yw10_ordersplit_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='拆分订单审核';

-- ----------------------------
-- Table structure for yw1_orderchange
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderchange`;
CREATE TABLE `yw1_orderchange` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '订单流水号',
  `OldQty` int(11) NOT NULL COMMENT '原数量',
  `Qty` int(11) NOT NULL COMMENT '拆分后数量',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单拆分记录表';

-- ----------------------------
-- Table structure for yw1_orderclient
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderclient`;
CREATE TABLE `yw1_orderclient` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `CLnotes` text NOT NULL COMMENT 'CLnotes',
  `ACnotes` text NOT NULL COMMENT 'ACnotes',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户订单要求表';

-- ----------------------------
-- Table structure for yw1_ordercost
-- ----------------------------
DROP TABLE IF EXISTS `yw1_ordercost`;
CREATE TABLE `yw1_ordercost` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '订单流水号',
  `Qty` mediumint(9) NOT NULL COMMENT '订单数量',
  `Price` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '订单售价',
  `PriceAmount` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT 'BOM按采购价格统计金额',
  `CostAmount` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT 'BOM按成本价格统计金额',
  `Profit` decimal(10,3) NOT NULL DEFAULT '0.000' COMMENT '单品利润',
  `Percent` decimal(4,1) NOT NULL DEFAULT '0.0' COMMENT '利润百分比',
  `Incomplete` tinyint(4) NOT NULL DEFAULT '0' COMMENT 'BOM完整标记: 1.未完整 0.完整',
  `Estate` tinyint(4) NOT NULL DEFAULT '1',
  `Locks` tinyint(4) NOT NULL DEFAULT '0',
  `Date` date NOT NULL,
  `Operator` mediumint(9) NOT NULL DEFAULT '0',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=13 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw1_orderdeleted
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderdeleted`;
CREATE TABLE `yw1_orderdeleted` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OrderNumber` varchar(10) NOT NULL COMMENT '业务订单主流水号',
  `OrderPO` varchar(20) NOT NULL COMMENT 'OrderPO',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品编号',
  `Qty` mediumint(9) NOT NULL COMMENT '删单数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `delType` tinyint(4) NOT NULL COMMENT '删除类别',
  `Attached` varchar(20) NOT NULL COMMENT '删除附件(pdf,jpg,....)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Remark` text NOT NULL COMMENT '单订内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=204 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='  订单删除审核表';

-- ----------------------------
-- Table structure for yw1_orderdeleted_audit
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderdeleted_audit`;
CREATE TABLE `yw1_orderdeleted_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='订单删除审核';

-- ----------------------------
-- Table structure for yw1_orderdeltype
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderdeltype`;
CREATE TABLE `yw1_orderdeltype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(50) NOT NULL COMMENT '类型名称',
  `Remark` text NOT NULL COMMENT '备注说明',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `TypeName` (`TypeName`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 取消订单类型';

-- ----------------------------
-- Table structure for yw1_ordermain
-- ----------------------------
DROP TABLE IF EXISTS `yw1_ordermain`;
CREATE TABLE `yw1_ordermain` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `SubClientId` int(6) NOT NULL DEFAULT '0',
  `OrderNumber` bigint(10) NOT NULL COMMENT '业务订单主流水号',
  `BuildNo` varchar(20) DEFAULT NULL,
  `OrderPO` varchar(20) NOT NULL COMMENT 'OrderPO',
  `OrderDate` date NOT NULL COMMENT '下单日期',
  `ClientOrder` varchar(20) NOT NULL DEFAULT '' COMMENT '客户内部单号',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `OrderNumber` (`OrderNumber`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `OrderDate` (`OrderDate`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=4729 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单主表';

-- ----------------------------
-- Table structure for yw1_orderprofit
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderprofit`;
CREATE TABLE `yw1_orderprofit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Profit` decimal(7,3) NOT NULL DEFAULT '0.000',
  `Percent` decimal(4,1) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3097 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw1_orderrk
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderrk`;
CREATE TABLE `yw1_orderrk` (
  `Id` int(10) NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `sPOrderId` varchar(13) NOT NULL,
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` int(11) NOT NULL COMMENT '数量',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `scDate` date NOT NULL,
  `LocationId` int(9) NOT NULL DEFAULT '0',
  `Locks` tinyint(3) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` datetime DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=498 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产产品入库记录';

-- ----------------------------
-- Table structure for yw1_ordersheet
-- ----------------------------
DROP TABLE IF EXISTS `yw1_ordersheet`;
CREATE TABLE `yw1_ordersheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `OrderNumber` bigint(10) NOT NULL COMMENT '业务订单主流水号',
  `OrderPO` varchar(20) NOT NULL COMMENT 'OrderPO',
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL COMMENT '产品ID',
  `Qty` mediumint(9) NOT NULL COMMENT '数量',
  `Price` decimal(10,5) NOT NULL COMMENT '价格',
  `PackRemark` text NOT NULL COMMENT '包装备注',
  `cgRemark` text NOT NULL COMMENT '采购备注',
  `sgRemark` text NOT NULL COMMENT '生管备注',
  `dcRemark` text NOT NULL COMMENT '待出备注',
  `DeliveryDate` date NOT NULL DEFAULT '0000-00-00',
  `ShipType` text NOT NULL COMMENT '出货方式',
  `taxtypeId` tinyint(4) DEFAULT '1',
  `StockId` varchar(15) DEFAULT '0' COMMENT '从研砼上海/贸易过来的单',
  `scFrom` tinyint(4) NOT NULL DEFAULT '7' COMMENT '生产状态',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `SeatId` varchar(15) DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `OrderNumber` (`OrderNumber`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2761 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单明细表';

-- ----------------------------
-- Table structure for yw1_ordersplit
-- ----------------------------
DROP TABLE IF EXISTS `yw1_ordersplit`;
CREATE TABLE `yw1_ordersplit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '原拆前业务订单流水号',
  `sPOrderId` varchar(200) NOT NULL COMMENT '分拆后业务订单流水号',
  `splitQty` varchar(100) NOT NULL,
  `wsId` varchar(50) NOT NULL,
  `LockSign` varchar(50) DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `SPOrderId` (`POrderId`) USING BTREE,
  KEY `OPOrderId` (`sPOrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 工单拆分记录表';

-- ----------------------------
-- Table structure for yw1_orderupdate
-- ----------------------------
DROP TABLE IF EXISTS `yw1_orderupdate`;
CREATE TABLE `yw1_orderupdate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '原拆前业务订单流水号',
  `OrderPO` varchar(100) NOT NULL,
  `OldQty` int(11) NOT NULL COMMENT '分拆后业务订单流水号',
  `NewQty` int(11) NOT NULL,
  `OldPrice` decimal(11,2) NOT NULL,
  `NewPrice` decimal(11,2) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `SPOrderId` (`POrderId`) USING BTREE,
  KEY `OPOrderId` (`OldQty`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单更新待审核记录';

-- ----------------------------
-- Table structure for yw1_productinspection
-- ----------------------------
DROP TABLE IF EXISTS `yw1_productinspection`;
CREATE TABLE `yw1_productinspection` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '订单流水号',
  `Inspection` tinyint(4) DEFAULT '1' COMMENT '检验状态:1合格2不合格',
  `Remark` text COMMENT '不合格原因',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='订单产品客户检验记录表';

-- ----------------------------
-- Table structure for yw1_sclock
-- ----------------------------
DROP TABLE IF EXISTS `yw1_sclock`;
CREATE TABLE `yw1_sclock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) NOT NULL COMMENT '工单流水号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Remark` text COMMENT '详细内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `Operator` (`Operator`) USING BTREE,
  KEY `creator` (`creator`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='工单锁定表';

-- ----------------------------
-- Table structure for yw1_scqty
-- ----------------------------
DROP TABLE IF EXISTS `yw1_scqty`;
CREATE TABLE `yw1_scqty` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `StockId` varchar(15) NOT NULL COMMENT '采购流水号',
  `OrderQty` decimal(11,2) unsigned NOT NULL,
  `scQty` decimal(11,2) NOT NULL,
  `scum` smallint(6) NOT NULL DEFAULT '1',
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='工单数量与cg1_stocksheet 生产配件不相等表';

-- ----------------------------
-- Table structure for yw1_scsheet
-- ----------------------------
DROP TABLE IF EXISTS `yw1_scsheet`;
CREATE TABLE `yw1_scsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) NOT NULL COMMENT '生产工单流水号',
  `POrderId` varchar(12) NOT NULL,
  `mStockId` varchar(15) DEFAULT NULL,
  `StockId` varchar(15) NOT NULL,
  `ActionId` mediumint(9) NOT NULL,
  `WorkShopId` mediumint(9) NOT NULL DEFAULT '0',
  `scLineId` mediumint(9) NOT NULL DEFAULT '0',
  `Type` tinyint(4) NOT NULL DEFAULT '0',
  `Level` tinyint(4) NOT NULL DEFAULT '1',
  `ScFrom` tinyint(4) NOT NULL DEFAULT '1',
  `Qty` decimal(11,2) NOT NULL,
  `Price` decimal(11,2) DEFAULT '0.00',
  `KscQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `ScQty` decimal(11,2) NOT NULL DEFAULT '0.00',
  `FinishDate` datetime DEFAULT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Remark` varchar(200) DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `WorkShopId` (`WorkShopId`) USING BTREE,
  KEY `ActionId` (`ActionId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `scLineId` (`scLineId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=20017 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产工单表';

-- ----------------------------
-- Table structure for yw1_scsheet_log
-- ----------------------------
DROP TABLE IF EXISTS `yw1_scsheet_log`;
CREATE TABLE `yw1_scsheet_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `sPOrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `ProductId` mediumint(9) NOT NULL,
  `scFrom` tinyint(4) NOT NULL DEFAULT '1',
  `Qty` int(9) NOT NULL,
  `scQty` int(9) NOT NULL DEFAULT '0',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`sPOrderId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `ProductId` (`ProductId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产工单表';

-- ----------------------------
-- Table structure for yw1_stocksheet
-- ----------------------------
DROP TABLE IF EXISTS `yw1_stocksheet`;
CREATE TABLE `yw1_stocksheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `sPOrderId` varchar(13) NOT NULL,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水编号,关联表：yw1_ordersheet.POrderId',
  `mStockId` varchar(15) NOT NULL DEFAULT '' COMMENT '采购单流水号',
  `StockId` varchar(15) NOT NULL,
  `StuffId` mediumint(9) NOT NULL COMMENT 's配件ID,关联表：stuffdata.StuffId',
  `OrderQty` decimal(11,2) NOT NULL COMMENT '订单数量',
  `llSign` tinyint(4) NOT NULL DEFAULT '1',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `sPOrderId` (`sPOrderId`) USING BTREE,
  KEY `mStockId` (`mStockId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购单明细表';

-- ----------------------------
-- Table structure for yw1_stuffchange
-- ----------------------------
DROP TABLE IF EXISTS `yw1_stuffchange`;
CREATE TABLE `yw1_stuffchange` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '原拆前业务订单流水号',
  `StockId` varchar(15) NOT NULL,
  `OldStuffId` mediumint(9) NOT NULL COMMENT '分拆后业务订单流水号',
  `NewStuffId` mediumint(9) NOT NULL,
  `NewRelation` varchar(15) NOT NULL,
  `Remark` varchar(200) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `StockId` (`StockId`) USING BTREE,
  KEY `OldStuffId` (`OldStuffId`) USING BTREE,
  KEY `NewStuffId` (`NewStuffId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='生产类配件置换';

-- ----------------------------
-- Table structure for yw2_cgdeliverydate
-- ----------------------------
DROP TABLE IF EXISTS `yw2_cgdeliverydate`;
CREATE TABLE `yw2_cgdeliverydate` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `ReduceWeeks` tinyint(4) NOT NULL COMMENT '延时周数',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=571 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='--无用的表';

-- ----------------------------
-- Table structure for yw2_orderexpress
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderexpress`;
CREATE TABLE `yw2_orderexpress` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL COMMENT '备注说明',
  `ReturnReasons` varchar(200) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `OPdatetime` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=84 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 订单加急记录表';

-- ----------------------------
-- Table structure for yw2_orderexpress_audit
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderexpress_audit`;
CREATE TABLE `yw2_orderexpress_audit` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Checker` mediumint(9) NOT NULL,
  `Reason` text,
  `Sid` int(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='订单锁定审核';

-- ----------------------------
-- Table structure for yw2_orderexpress_log
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderexpress_log`;
CREATE TABLE `yw2_orderexpress_log` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw2_orderremark
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderremark`;
CREATE TABLE `yw2_orderremark` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw2_orderteststandard
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderteststandard`;
CREATE TABLE `yw2_orderteststandard` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Type` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='订单标准图临时修改表';

-- ----------------------------
-- Table structure for yw2_orderunlock
-- ----------------------------
DROP TABLE IF EXISTS `yw2_orderunlock`;
CREATE TABLE `yw2_orderunlock` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL,
  `Type` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='订单解锁时间表';

-- ----------------------------
-- Table structure for yw3_piatt
-- ----------------------------
DROP TABLE IF EXISTS `yw3_piatt`;
CREATE TABLE `yw3_piatt` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `PI` varchar(50) NOT NULL,
  `Description` varchar(50) NOT NULL,
  `Qty` tinyint(4) NOT NULL,
  `Unit` decimal(8,2) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PI` (`PI`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' pi附加项目表';

-- ----------------------------
-- Table structure for yw3_pileadtime
-- ----------------------------
DROP TABLE IF EXISTS `yw3_pileadtime`;
CREATE TABLE `yw3_pileadtime` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `Leadtime` text NOT NULL COMMENT '交期',
  `Leadweek` mediumint(6) NOT NULL DEFAULT '0',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE,
  KEY `Leadweek` (`Leadweek`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=566 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='采购决定PI交期表';

-- ----------------------------
-- Table structure for yw3_pileadtimechange
-- ----------------------------
DROP TABLE IF EXISTS `yw3_pileadtimechange`;
CREATE TABLE `yw3_pileadtimechange` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `POrderId` varchar(12) NOT NULL COMMENT '业务订单流水号',
  `UpdateLeadtime` varchar(15) NOT NULL COMMENT '改变交期',
  `OldLeadtime` varchar(15) NOT NULL COMMENT '更改前PI交期',
  `ReduceWeeks` tinyint(4) NOT NULL,
  `OldReduceWeeks` varchar(10) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Remark` text NOT NULL COMMENT '改变交期的备注',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '记录生成日期',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `POrderId` (`POrderId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=106 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='PI生成后改变交期需要主管审核后生效';

-- ----------------------------
-- Table structure for yw3_pimodel
-- ----------------------------
DROP TABLE IF EXISTS `yw3_pimodel`;
CREATE TABLE `yw3_pimodel` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Model` mediumint(9) NOT NULL COMMENT 'PI模板号',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `Model` (`Model`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=220 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' pi模板表';

-- ----------------------------
-- Table structure for yw3_pirules
-- ----------------------------
DROP TABLE IF EXISTS `yw3_pirules`;
CREATE TABLE `yw3_pirules` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Remark` varchar(100) NOT NULL COMMENT '规则',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' pi显示报价规则表';

-- ----------------------------
-- Table structure for yw3_pisheet
-- ----------------------------
DROP TABLE IF EXISTS `yw3_pisheet`;
CREATE TABLE `yw3_pisheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` int(11) NOT NULL COMMENT '客户ID',
  `oId` int(11) unsigned DEFAULT NULL COMMENT '订单明细表ID',
  `PI` varchar(20) NOT NULL COMMENT 'PI号',
  `Leadtime` text NOT NULL COMMENT '交货期',
  `Leadweek` mediumint(6) NOT NULL DEFAULT '0' COMMENT '交货周数',
  `Paymentterm` varchar(250) NOT NULL COMMENT '支付规则',
  `Notes` text NOT NULL COMMENT '提示',
  `OtherNotes` varchar(30) NOT NULL COMMENT '其它提示',
  `Terms` text NOT NULL,
  `ShipTo` text COMMENT '出货方式',
  `SoldTo` text,
  `condition` varchar(200) DEFAULT ' ',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL COMMENT '记录生成日期',
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `oId` (`oId`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE,
  KEY `PI` (`PI`) USING BTREE,
  KEY `Leadweek` (`Leadweek`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=52 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' pi列表';

-- ----------------------------
-- Table structure for yw4_quotationsheet
-- ----------------------------
DROP TABLE IF EXISTS `yw4_quotationsheet`;
CREATE TABLE `yw4_quotationsheet` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Number` bigint(20) NOT NULL COMMENT '报价文件号(pdf)',
  `ProductCode` varchar(60) NOT NULL COMMENT '产品ID',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Currency` tinyint(4) NOT NULL COMMENT '外汇费率转换ID,关联表：currencydata.ID',
  `Price` varchar(20) NOT NULL,
  `Rate` decimal(6,2) NOT NULL,
  `Moq` int(11) NOT NULL,
  `Priceterm` varchar(60) NOT NULL,
  `Paymentterm` varchar(60) NOT NULL,
  `Leadtime` varchar(60) NOT NULL,
  `Remark` text NOT NULL,
  `Image1` tinyint(4) NOT NULL,
  `Image2` tinyint(4) NOT NULL,
  `Image3` tinyint(4) NOT NULL,
  `Sales` mediumint(9) NOT NULL COMMENT '业务人员,关联表：staffmain.Number',
  `ApprovedBy` tinyint(4) NOT NULL,
  `Model` tinyint(4) NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Number` (`Number`) USING BTREE,
  UNIQUE KEY `ProductCode` (`ProductCode`) USING BTREE,
  KEY `CompanyId` (`CompanyId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报价单明细表';

-- ----------------------------
-- Table structure for yw6_salesview
-- ----------------------------
DROP TABLE IF EXISTS `yw6_salesview`;
CREATE TABLE `yw6_salesview` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `SalesId` mediumint(9) NOT NULL COMMENT '业务人员,关联表：staffmain.Number',
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `TypeId` tinyint(4) NOT NULL COMMENT '业务类型',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `SalesId` (`SalesId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT='业务订单查询权限列表';

-- ----------------------------
-- Table structure for yw7_clientorderpo
-- ----------------------------
DROP TABLE IF EXISTS `yw7_clientorderpo`;
CREATE TABLE `yw7_clientorderpo` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `POrderId` varchar(14) NOT NULL,
  `OrderPo` varchar(100) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' ';

-- ----------------------------
-- Table structure for yw7_clientoutdata
-- ----------------------------
DROP TABLE IF EXISTS `yw7_clientoutdata`;
CREATE TABLE `yw7_clientoutdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(10) NOT NULL,
  `POrderId` varchar(14) NOT NULL,
  `toOutId` int(10) NOT NULL,
  `Remark` text NOT NULL,
  `Sign` tinyint(1) NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw7_clientproduct
-- ----------------------------
DROP TABLE IF EXISTS `yw7_clientproduct`;
CREATE TABLE `yw7_clientproduct` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ProductId` int(11) NOT NULL COMMENT '产品代码',
  `cId` int(11) NOT NULL COMMENT '客户授权文档ID',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ItemId` (`ProductId`) USING BTREE,
  KEY `UserId` (`cId`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for yw7_clientproxy
-- ----------------------------
DROP TABLE IF EXISTS `yw7_clientproxy`;
CREATE TABLE `yw7_clientproxy` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '客户ID',
  `Caption` text NOT NULL COMMENT '授权文件名称',
  `TimeLimit` date NOT NULL COMMENT '授权截止日期',
  `Attached` varchar(18) NOT NULL COMMENT '档案(pdf,jpg,....)',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 客户授权文档表';

-- ----------------------------
-- Table structure for yw7_clienttoout
-- ----------------------------
DROP TABLE IF EXISTS `yw7_clienttoout`;
CREATE TABLE `yw7_clienttoout` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL,
  `ToOutName` varchar(200) NOT NULL,
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for ywbj_pands
-- ----------------------------
DROP TABLE IF EXISTS `ywbj_pands`;
CREATE TABLE `ywbj_pands` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Pid` int(11) NOT NULL COMMENT '报价产品ID',
  `Sid` int(11) NOT NULL COMMENT '报价配件ID',
  `Sprice` decimal(10,3) NOT NULL COMMENT '价格',
  `Simg` tinyint(4) NOT NULL COMMENT '配件图片',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `ProductId` (`Pid`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报价产品bom表';

-- ----------------------------
-- Table structure for ywbj_productdata
-- ----------------------------
DROP TABLE IF EXISTS `ywbj_productdata`;
CREATE TABLE `ywbj_productdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `CompanyId` mediumint(9) NOT NULL COMMENT '公司编号',
  `TypeId` mediumint(9) NOT NULL COMMENT '产品分类ID,关联表：producttype.TypeId',
  `Remark` text NOT NULL COMMENT '内容说明',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报价产品资料表';

-- ----------------------------
-- Table structure for ywbj_stuffdata
-- ----------------------------
DROP TABLE IF EXISTS `ywbj_stuffdata`;
CREATE TABLE `ywbj_stuffdata` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL COMMENT '名称',
  `Price` decimal(10,3) NOT NULL COMMENT '单价',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`Name`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 报价配件资料表';

-- ----------------------------
-- Table structure for zw2_hzdoc
-- ----------------------------
DROP TABLE IF EXISTS `zw2_hzdoc`;
CREATE TABLE `zw2_hzdoc` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `cSign` tinyint(4) NOT NULL DEFAULT '7' COMMENT '所属公司标志,关联表：d0.companys_group',
  `Caption` varchar(60) NOT NULL COMMENT '行政资料说明',
  `Attached` varchar(20) NOT NULL COMMENT '附件(PDF,MP4等)',
  `TypeId` int(11) NOT NULL COMMENT '分类名称,关联表：d0.zw2_hzdoctype',
  `SortId` int(6) NOT NULL DEFAULT '999' COMMENT '提序Id',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `EndDate` date NOT NULL,
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT;

-- ----------------------------
-- Table structure for zw2_hzdoctype
-- ----------------------------
DROP TABLE IF EXISTS `zw2_hzdoctype`;
CREATE TABLE `zw2_hzdoctype` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Name` varchar(50) NOT NULL COMMENT '文档名称',
  `SubName` varchar(50) NOT NULL DEFAULT 'null',
  `Remark` text NOT NULL COMMENT '详细内容说明',
  `SortId` int(6) NOT NULL DEFAULT '0' COMMENT '排序',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE
) ENGINE=InnoDB AUTO_INCREMENT=37 DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 行政资料文档表';

-- ----------------------------
-- Table structure for zw3_purchasem
-- ----------------------------
DROP TABLE IF EXISTS `zw3_purchasem`;
CREATE TABLE `zw3_purchasem` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `BankId` smallint(6) NOT NULL DEFAULT '0' COMMENT '付款银行账号',
  `PayDate` date NOT NULL COMMENT '结付日期',
  `PayAmount` decimal(10,3) NOT NULL COMMENT '结付金额',
  `Payee` tinyint(4) NOT NULL COMMENT '结付凭证图片(jpg)',
  `Receipt` tinyint(4) NOT NULL COMMENT '结付回执图片(jpg)',
  `Checksheet` tinyint(4) NOT NULL COMMENT '对帐单图片(jpg)',
  `Remark` text NOT NULL,
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `PayDate` (`PayDate`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 总务采购结付主表';

-- ----------------------------
-- Table structure for zw3_purchases
-- ----------------------------
DROP TABLE IF EXISTS `zw3_purchases`;
CREATE TABLE `zw3_purchases` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `Mid` int(11) NOT NULL COMMENT '结付关联ID,关联表：zw3_purchasem.Id',
  `Unit` varchar(6) NOT NULL COMMENT '单位：g,个，kg,',
  `Price` decimal(10,3) NOT NULL COMMENT '价格',
  `Qty` decimal(11,2) NOT NULL COMMENT '数量',
  `TypeId` int(11) NOT NULL COMMENT '总务采购物品名分类',
  `cgSign` tinyint(4) NOT NULL COMMENT '采购完成标志',
  `WorkAdd` int(10) NOT NULL COMMENT '使用地点',
  `Remark` text NOT NULL,
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `qkDate` date NOT NULL,
  `Cid` int(10) DEFAULT '0' COMMENT '联系人内部ID号',
  `BuyerId` mediumint(9) NOT NULL COMMENT '采购人,关联表：staffmain.Number',
  `Bill` tinyint(4) NOT NULL COMMENT '是否有采购单据',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  KEY `TypeId` (`TypeId`) USING BTREE,
  KEY `Date` (`Date`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 总务采购结付明细表';

-- ----------------------------
-- Table structure for zw3_purchaset
-- ----------------------------
DROP TABLE IF EXISTS `zw3_purchaset`;
CREATE TABLE `zw3_purchaset` (
  `Id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `TypeName` varchar(100) NOT NULL COMMENT '物品名称',
  `TypeId` int(10) NOT NULL COMMENT '物品类别,关联表：d0.zw_goodstype',
  `Attached` tinyint(4) NOT NULL COMMENT '物品图片',
  `Date` date DEFAULT NULL COMMENT '记录生成日期',
  `Estate` tinyint(3) unsigned NOT NULL DEFAULT '1',
  `Locks` tinyint(3) NOT NULL DEFAULT '0' COMMENT '0 for locked, 1 for unlocked',
  `Operator` mediumint(9) DEFAULT NULL COMMENT '记录操作人',
  `PLocks` tinyint(1) NOT NULL DEFAULT '0' COMMENT 'Permanent lock, 0 for locked, 1 for unlocked',
  `creator` int(10) unsigned DEFAULT NULL,
  `created` datetime DEFAULT NULL,
  `modifier` int(10) unsigned DEFAULT NULL,
  `modified` datetime DEFAULT NULL,
  PRIMARY KEY (`Id`) USING BTREE,
  UNIQUE KEY `Name` (`TypeName`) USING BTREE
) ENGINE=InnoDB DEFAULT CHARSET=utf8 ROW_FORMAT=COMPACT COMMENT=' 总务采购物品名称表';

-- ----------------------------
-- Procedure structure for mytestproc
-- ----------------------------
DROP PROCEDURE IF EXISTS `mytestproc`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` PROCEDURE `mytestproc`(IN IN_CompanyId mediumint(9), IN IN_SubClientId mediumint(9), IN IN_OrderPO varchar(60), IN IN_OrderDate date, IN IN_ProductId varchar(10000), IN IN_StockId varchar(15), IN IN_Qty varchar(10000), IN IN_Price varchar(10000), IN IN_Operator mediumint(9))
BEGIN

    DECLARE _OrderNumber BIGINT(10);
    DECLARE _POrderId VARCHAR(12);
    DECLARE _sPOrderId VARCHAR(12);
    DECLARE _ProductId  MEDIUMINT(9);
    DECLARE _Qty MEDIUMINT(9);
    DECLARE _Price decimal(10,3);

    DECLARE _len INT(9);
    DECLARE _date VARCHAR(10);
    DECLARE _Level TINYINT(4);
    DECLARE _maxLevel TINYINT(4);
    DECLARE _runCounts INTEGER DEFAULT 0;
    DECLARE _done INT DEFAULT -1;
    DECLARE _taxtypeId  INT(9);
    DECLARE _log TEXT DEFAULT '';
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE i INT DEFAULT 1;
    DECLARE _costSign TINYINT(4);



    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
    END;

    SELECT IFNULL(MAX(OrderNumber),0) AS Mid FROM yw1_ordermain  INTO  _OrderNumber;
    SET _OrderNumber=_OrderNumber+1;

    SET IN_ProductId=CONCAT(IN_ProductId,'|');
    SET IN_Qty=CONCAT(IN_Qty,'|');
    SET IN_Price=CONCAT(IN_Price,'|');



    IF _error <> 1 THEN
       SET _OperationResult="Y";
    END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for newStockIdAsStuffCombox
-- ----------------------------
DROP PROCEDURE IF EXISTS `newStockIdAsStuffCombox`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `newStockIdAsStuffCombox`()
    SQL SECURITY INVOKER
BEGIN


   DECLARE _mStockId VARCHAR(15);
   DECLARE _oStockId VARCHAR(15);
   DECLARE _newStockId VARCHAR(15);
   DECLARE i TINYINT DEFAULT 0;
   DECLARE _Id INT(11);

   DECLARE _error INTEGER DEFAULT 0;
   declare _done int default -1;

   declare myCursor cursor for  select Id,mStockId from cg1_stuffcombox_temp where length(StockId)=12  ORDER BY mStockId ;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

   START TRANSACTION;
   SET _oStockId='';
   open myCursor;

    myLoop: LOOP


        fetch myCursor into _Id,_mStockId;


        if _done = 1 then
            leave myLoop;
        end if;

       IF _oStockId!=_mStockId THEN
          SET _oStockId= _mStockId;
          SET  i=1;
       end if;

       SET _newStockId=CONCAT(SUBSTR(_mStockId,3,12),'0',i);
       UPDATE cg1_stuffcombox_temp SET NewStockId=_newStockId WHERE Id=_Id;
       SET i=i+1;

    END LOOP  myLoop;


    close myCursor;

     IF _error = 1 THEN
            ROLLBACK;
        ELSE
            COMMIT;
        END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_deliverydate_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_deliverydate_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_deliverydate_updated`(IN `IN_Ids` VARCHAR(20480), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _Ids VARCHAR(20480) default '';
    declare _Leadtime VARCHAR(255);
    declare _ReduceWeeks  TINYINT(4);
    declare _TypeId  MEDIUMINT(9);
    declare _jhDays  TINYINT(4);
    declare _TypeJhDays TINYINT(4);
    declare _DeliveryDate DATE;

    DECLARE _date VARCHAR(10);
    declare _len INT(9);

    declare _done int default -1;

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;



   declare myCursor cursor for
          SELECT G.Id,D.TypeId,DATE_FORMAT(substring(IFNULL(P.Leadtime,L.Leadtime),1,10),'%Y-%m-%d')  AS Leadtime,E.ReduceWeeks,D.jhDays,T.jhDays AS TypeJhDays
                                        FROM cg1_stocksheet G
										LEFT JOIN  yw1_ordersheet S ON S.POrderId=G.POrderId
										LEFT JOIN  yw3_pisheet P ON S.Id=P.oId
										LEFT JOIN  yw3_pileadtime L ON L.POrderId=S.POrderId
										LEFT JOIN  stuffdata D ON D.StuffId=G.StuffId
										LEFT JOIN  yw2_cgdeliverydate E ON E.POrderId=G.POrderId
                                        LEFT JOIN  stufftype T ON T.TypeId=D.TypeId
										WHERE G.Id IN (IN_Ids);


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_TypeId,_Leadtime,_ReduceWeeks,_jhDays,_TypeJhDays;


        if _done = 1 then
            leave myLoop;
        end if;

        IF LENGTH(_Leadtime)=10 THEN
           IF  _ReduceWeeks<0 THEN
               SET _ReduceWeeks=_ReduceWeeks*7;
               SET _DeliveryDate=DATE_ADD(_Leadtime, interval _ReduceWeeks day);
               IF  _DeliveryDate<CURDATE() THEN
                   SET _DeliveryDate=CURDATE;
               END IF;
            ELSE
               SET  _DeliveryDate=_Leadtime;
            END IF;
        ELSE
          IF _jhDays=0 THEN
             SET _jhDays=_TypeJhDays;
          END IF;
             SET _DeliveryDate=DATE_ADD(_Leadtime, interval _jhDays day);
        END IF;

        IF YEARWEEK(_DeliveryDate)>0 THEN
            UPDATE cg1_stocksheet SET DeliveryDate=_DeliveryDate WHERE Id=_Id;
        END IF;


    END LOOP  myLoop;



    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_add`(IN `IN_POrderId` VARCHAR(12), IN `IN_Id` INT(11), IN `IN_Level` TINYINT(4), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_RunSign` INT, OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _SId INT(11);
    declare _mStockId VARCHAR(15);
    declare _mStuffId  MEDIUMINT(9);
    declare _mOrderQty decimal(11,2);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(30);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _mainType MEDIUMINT(9);
    declare _MainTypes VARCHAR(255);
    declare _scSign TINYINT(4);
    declare _level TINYINT(4);
    declare _DeliveryDate Date;
    declare _ParentNode VARCHAR(2000) DEFAULT '';

    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _StockId VARCHAR(15);
    declare _Mid INT(11) DEFAULT 0;
    declare _FoundSign TINYINT(4);
    declare _NewSign TINYINT(4);

    declare _done int default -1;



    declare myCursor cursor for  SELECT S.Id,S.StockId AS mStockId,(S.AddQty+S.FactualQty) AS Qty,G.mStuffId,G.StuffId,G.Relation,D.Price,
           IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,M.blSign,T.mainType
           FROM cg1_stocksheet S
           INNER JOIN semifinished_bom G ON G.mStuffId=S.StuffId
           LEFT JOIN stuffdata MD ON MD.StuffId=G.mStuffId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice CP ON CP.StuffId=G.StuffId
           LEFT JOIN bps B ON B.StuffId=D.StuffId
           LEFT JOIN bps MB ON MB.StuffId=S.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype M ON M.Id=T.mainType
           WHERE S.Id>=IN_Id AND S.POrderId=IN_POrderId AND S.Level=IN_Level AND MD.bomEstate=0  AND (S.AddQty+S.FactualQty)>0  AND (FIND_IN_SET(MB.CompanyId,getSysConfig(106))>0
   OR EXISTS(SELECT BO.mStuffId FROM semifinished_bom BO LEFT JOIN stuffdata D ON D.StuffId=BO.StuffId WHERE BO.mStuffId=S.StuffId AND D.TypeId=getSysConfig(104)));


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
       SET OUT_Error=1;


    END;

    SET _MainTypes=getSysConfig(102);
    SET OUT_Error=0;
    SET OUT_RunSign=0;
    SET _level=IN_Level+1;
    open myCursor;

    myLoop: LOOP

        fetch myCursor into _SId,_mStockId,_mOrderQty,_mStuffId,_StuffId,_Relation,_Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;

        if _done = 1 OR OUT_Error=1 then
            leave myLoop;
        end if;

        SET _OrderQty=getRelationQty(_mOrderQty,_Relation,_Decimals);
        SET _FactualQty=_OrderQty;
        SET _StockQty=0;

        SET _NewSign=1;

        SET _scSign=FIND_IN_SET(_mainType,_MainTypes);
        IF _scSign=0 THEN
           SELECT Mid,StockId,COUNT(1) AS FoundSign FROM cg1_stocksheet WHERE POrderId=IN_POrderId  AND StuffId=_StuffId AND blSign=1 INTO _Mid,_StockId,_FoundSign;
           IF _FoundSign>0 AND _Mid=0 THEN
                 SELECT COUNT(1) AS FoundSign FROM cg1_semifinished WHERE POrderId=IN_POrderId AND mStuffId=_mStuffId AND StuffId=_StuffId  INTO _FoundSign;
                  IF _FoundSign=0 THEN
                     SET _NewSign=0;
                  END IF;
          END IF;
        END IF;

        IF _NewSign=1 THEN
           SET _StockId = getNewStockId(IN_POrderId,1);

           IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
           IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;

            SET _DeliveryDate=getCgDeliveryDate(_mStockId);

           INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,Estate,Locks,Date,Operator) VALUES
						('0',_level,_StockId,IN_POrderId,_StuffId,_Relation,_Price,_CostPrice,_OrderQty,_StockQty,'0',_FactualQty,_CompanyId,_BuyerId,_DeliveryDate,'','',_blSign,'0','1',CURDATE(),IN_Operator);
        ELSE

           UPDATE cg1_stocksheet SET OrderQty=OrderQty+_OrderQty,FactualQty=FactualQty+_FactualQty WHERE StockId=_StockId;

        END IF;

        SET _ParentNode=getStuffParentNode(_mStockId);
        INSERT INTO cg1_semifinished (POrderId,mStockId,mStuffId,StockId,StuffId,Relation,OrderQty,ParentNode,Date,Operator) VALUES (IN_POrderId,_mStockId,_mStuffId,_StockId,_StuffId,_Relation,_OrderQty,_ParentNode,CURDATE(),IN_Operator);

        SET OUT_RunSign=OUT_RunSign+1;
        SET _done = 0;

    END LOOP  myLoop;

    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_check
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_check`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_check`(IN `IN_StockId` VARCHAR(15), IN `IN_OrderQty` decimal(11,2))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _NewOrderQty decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _done int default -1;
    declare _error int default 0;

    declare myCursor cursor for SELECT G.Id,G.StockId,G.StuffId,G.OrderQty,G.Relation,U.Decimals
           FROM cg1_semifinished G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE G.mStockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_StockId,_StuffId,_OrderQty,_Relation,_Decimals;


        if _done = 1 then
            leave myLoop;
        end if;
          SET _NewOrderQty=getRelationQty(IN_OrderQty,_Relation,_Decimals);
          IF _OrderQty!=_NewOrderQty THEN
              UPDATE cg1_semifinished SET OrderQty=_NewOrderQty,OldQty=_OrderQty,modifier=0,modified=NOW() WHERE Id=_Id;
              INSERT INTO cg1_semifinished_log SELECT * FROM cg1_semifinished WHERE Id=_Id;
          END IF;

    END LOOP  myLoop;

    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_costprice
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_costprice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_costprice`(IN `IN_StockId` VARCHAR(15), OUT `OUT_Log` VARCHAR(10000))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _mStockId VARCHAR(15);
    declare _CostPrice decimal(10,3) default 0.0;

    declare _depth TINYINT(4);
    declare _log VARCHAR(1000) DEFAULT '';
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;

    declare myCursor cursor for  SELECT G.mStockId FROM  cg1_semifinished G  WHERE G.StockId=IN_StockId GROUP BY G.mStockId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
      SHOW ERRORS;
    END;

   SET OUT_Log='';
   SET _depth=getSysConfig(105);
   SET @@max_sp_recursion_depth =_depth;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _mStockId;


        if _done = 1 then
            leave myLoop;
        end if;

        SET _CostPrice=setCgCostPrice(_mStockId);
        SET _log=CONCAT(_log,_mStockId,',');
        SET  OUT_Log=CONCAT(OUT_Log,_log);

        CALL proc_cg1_semifinished_costprice(_mStockId,_log);
        IF LENGTH(_log)>0 THEN
            SET  OUT_Log=CONCAT(OUT_Log,_log);
        END IF;


    END LOOP  myLoop;

    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_delete
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_delete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_delete`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT, OUT `OUT_Log` VARCHAR(20000))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _sId INT(11);
    declare _Mid INT(11);
    declare _POrderId VARCHAR(12);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _oStockQty decimal(11,2);
    declare _OrderQty  decimal(11,2);
    declare _AddQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _usedQty  decimal(11,2);
    declare _blSign TINYINT(4);

    declare _cgQty  decimal(11,2);
    declare _useSign MEDIUMINT(6);
    declare _delSign TINYINT(4);
    declare _cgSign TINYINT(4);
    declare _semiSign MEDIUMINT(6);

    declare _NewPOrderId VARCHAR(12);
    declare _NewFactualQty decimal(11,2);

    declare _depth TINYINT(4);
    declare _log TEXT default '';
    declare _log2 TEXT default '';
    declare _delIds TEXT default '';
    declare _delsemiIds TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    declare _error2 INTEGER DEFAULT 0;
    declare _done int default -1;

    declare myCursor cursor for SELECT M.Id,M.StockId,M.OrderQty FROM  cg1_semifinished M  WHERE M.mStockId=IN_StockId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
         SET OUT_Error=1;

    END;

    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;

    SET OUT_Error=0;

    open myCursor;

    myLoop: LOOP
	  fetch myCursor into  _sId,_StockId,_usedQty;

      if _done = 1 OR _error=1  then
             leave myLoop;
      end if;


      SET _Id = NULL;

      SELECT G.Id,G.Mid,G.POrderId,G.StuffId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty,G.cgSign,G.blSign FROM cg1_stocksheet G WHERE G.StockId=_StockId INTO _Id,_Mid,_POrderId,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign,_blSign;

      IF _Id IS NOT NULL THEN
         IF _blSign=0 THEN
            DELETE FROM cg1_stocksheet WHERE Id=_Id;
            DELETE FROM cg1_semifinished WHERE Id=_sId;
            SET _log=CONCAT(_log,_StockId,' 采购需求单已删除。<br>');
         ELSE

            SET _semiSign=getSemifinishedCount(_StockId,1);
            SET _useSign=getSemifinishedCount(_StockId,0);

            IF _useSign>1 THEN

			   SET _cgQty=_AddQty+_FactualQty;

			   SET _OrderQty=_OrderQty-_usedQty;
			   IF _StockQty>=_OrderQty THEN
                    SET _StockQty=_OrderQty;
               END IF;
               SET _FactualQty=_OrderQty-_StockQty;
               IF _Mid>0 THEN
                   SET _AddQty=_cgQty-_FactualQty;
               END IF;

               UPDATE cg1_stocksheet SET OrderQty=_OrderQty,StockQty=_StockQty,AddQty=_AddQty,FactualQty=_FactualQty WHERE Id=_Id;

               IF row_count()>0 THEN
                    SET _log=CONCAT(_log,_StockId,' 采购需求单的订单需求数减少：',_usedQty,'。<br>');
                  ELSE
                    SET _log=CONCAT(_log,_StockId,' 采购需求单的订单需求数减少：',_usedQty,'失败。<br>');
                    SET _error=1;
               END IF;
               DELETE FROM cg1_semifinished WHERE Id=_sId;

           ELSE
             SET _delSign=0;

             IF _Mid=0 THEN
                  SET _oStockQty=getStuffoStockQty(_StuffId);
                  IF _oStockQty>=_AddQty OR _AddQty=0 THEN
                      SET _delSign=1;
                      IF _semiSign>0 THEN
                           SET _log=CONCAT(_log,_StockId,' 采购需求单删除二级BOM配件.<br>');
                           CALL proc_cg1_semifinished_delete(_StockId,IN_Operator,_error,_log2);
                           SET _log=CONCAT(_log,_log2);
                     END IF;
                     IF _error=0 THEN
                          DELETE FROM cg1_stocksheet WHERE Id=_Id;
                          DELETE FROM cg1_semifinished WHERE Id=_sId;

                          SET _log=CONCAT(_log,_StockId,' 采购需求单已删除。<br>');
                       ELSE
                          SET _log=CONCAT(_log,_StockId,' 采购需求单删除失败。proc_cg1_semifinished_delete(',_StockId,',',IN_Operator,',@OUT_Error,@OUT_Log)<br>');
                    END IF;
                 END IF;
           END IF;


           IF _delSign=0 AND _error=0 THEN
             IF _semiSign>0 THEN
                  SET _NewPOrderId=getNewPOrderId(2,SUBSTR(_StockId,1,8));
             ELSE
                  SET _NewPOrderId='';
             END IF;

             IF _Mid=0 THEN
                  SET _NewFactualQty=_AddQty;
               ELSE
                  SET _NewFactualQty=_AddQty+_FactualQty;
             END IF;

             UPDATE cg1_stocksheet SET POrderId=_NewPOrderId,cgSign='1',OrderQty='0',StockQty='0',AddQty='0',FactualQty=_NewFactualQty,Estate='0',AddRemark='因取消订单或半成品配件的特采单!'  WHERE Id=_Id;
             IF row_count()>0 THEN
                   SET _log=CONCAT(_log,_StockId,' 采购需求单已转为特采单。',_NewPOrderId,'<br>');
               ELSE
                   SET _log=CONCAT(_log,_StockId,' 采购需求单转为特采单失败。','<br>');

             END IF;

             IF _semiSign>0 and _error=0 THEN
                IF _Mid=0 THEN
                       CALL proc_cg1_semifinished_renew_a(_NewPOrderId,_StockId,_NewFactualQty,IN_Operator,_error);

                    ELSE
                       CALL proc_cg1_semifinished_renew_b(_NewPOrderId,_StockId,_NewFactualQty,IN_Operator,_error);

                END IF;
             END IF;
          END IF;
        END IF;
      END IF;
   END IF;
   SET _done = -1;
   END LOOP  myLoop;
   close myCursor;

   SET OUT_Error=_error;
   SET OUT_Log=_log;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_insert`(IN `IN_POrderId` VARCHAR(12), IN `IN_Level` TINYINT(4), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_RunSign` INT, OUT `OUT_Error` INT)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _SId INT(11);
    declare _mStockId VARCHAR(15);
    declare _mStuffId  MEDIUMINT(9);
    declare _mOrderQty decimal(11,2);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(30);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _mainType MEDIUMINT(9);
    declare _MainTypes VARCHAR(255);
    declare _scSign TINYINT(4);
    declare _level TINYINT(4);
    declare _ParentNode VARCHAR(2000) DEFAULT '';

    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _StockId VARCHAR(15);
    declare _Mid INT(11) DEFAULT 0;
    declare _FoundSign TINYINT(4);
    declare _NewSign TINYINT(4);

    declare _done int default -1;





  declare myCursor cursor for  SELECT S.Id,S.StockId AS mStockId,(S.AddQty+S.FactualQty) AS Qty,G.mStuffId,G.StuffId,G.Relation,D.Price,IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,M.blSign,T.mainType
           FROM cg1_stocksheet S
           INNER JOIN semifinished_bom G ON G.mStuffId=S.StuffId
           LEFT JOIN stuffdata MD ON MD.StuffId=G.mStuffId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice CP ON CP.StuffId=S.StuffId
           LEFT JOIN bps B ON B.StuffId=D.StuffId
           LEFT JOIN bps MB ON MB.StuffId=S.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype M ON M.Id=T.mainType
           WHERE S.POrderId=IN_POrderId AND S.Level=IN_Level AND MD.bomEstate=0  AND (S.AddQty+S.FactualQty)>0
     AND  EXISTS(SELECT BO.mStuffId FROM semifinished_bom BO LEFT JOIN stuffdata D ON D.StuffId=BO.StuffId WHERE BO.mStuffId=S.StuffId AND D.TypeId=getSysConfig(104));

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
        SET OUT_Error=1;
    END;

    SET _MainTypes=getSysConfig(102);
    SET OUT_RunSign=0;
    SET OUT_Error=0;
    SET _level=IN_Level+1;
    open myCursor;

    myLoop: LOOP

        fetch myCursor into _SId,_mStockId,_mOrderQty,_mStuffId,_StuffId,_Relation,_Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;

        if _done = 1 OR OUT_Error=1 then
            leave myLoop;
        end if;

        SET _OrderQty=getRelationQty(_mOrderQty,_Relation,_Decimals);
        SET _FactualQty=_OrderQty;
        SET _StockQty=0;

        SET _NewSign=1;

        SET _scSign=FIND_IN_SET(_mainType,_MainTypes);

        SELECT Mid,StockId,COUNT(1) AS FoundSign FROM cg1_stocksheet WHERE POrderId=IN_POrderId AND StuffId=_StuffId AND `Level`>1 INTO _Mid,_StockId,_FoundSign;
        IF _FoundSign>0 AND _Mid=0 THEN
           IF _scSign>0 THEN
                  SELECT COUNT(1) AS FoundSign FROM cg1_semifinished WHERE POrderId=IN_POrderId AND mStuffId=_mStuffId AND StuffId=_StuffId  INTO _FoundSign;
                  IF _FoundSign>0 THEN
                     SET _NewSign=0;
                  END IF;
               ELSE
                  SET _NewSign=0;
           END IF;

        END IF;



        IF _NewSign=1 THEN
           SET _StockId = getNewStockId(IN_POrderId,1);

           IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
           IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;


           INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,Estate,Locks,Date,Operator) VALUES
						('0',_level,_StockId,IN_POrderId,_StuffId,_Relation,_Price,_CostPrice,_OrderQty,_StockQty,'0',_FactualQty,_CompanyId,_BuyerId,'0000-00-00','','',_blSign,'0','1',CURDATE(),IN_Operator);
        ELSE

           UPDATE cg1_stocksheet SET OrderQty=OrderQty+_OrderQty,StockQty=StockQty+_StockQty,FactualQty=FactualQty+_FactualQty WHERE StockId=_StockId;
        END IF;

        SET _ParentNode=getStuffParentNode(_mStockId);

        INSERT INTO cg1_semifinished (POrderId,mStockId,mStuffId,StockId,StuffId,Relation,OrderQty,ParentNode,Date,Operator) VALUES (IN_POrderId,_mStockId,_mStuffId,_StockId,_StuffId,_Relation,_OrderQty,_ParentNode,CURDATE(),IN_Operator);

        SET OUT_RunSign=OUT_RunSign+1;
        SET _done = 0;

    END LOOP  myLoop;

    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_mid
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_mid`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_mid`(IN `IN_StockId` VARCHAR(15), OUT `OUT_Mid` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _StockId VARCHAR(15);
    declare _Mid  INT(11);
    declare _done int default -1;


    declare myCursor cursor for SELECT G.Mid,S.mStockId FROM cg1_semifinished S
                                LEFT JOIN cg1_stocksheet G ON G.StockId=S.mStockId
                                WHERE S.StockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    SET @@max_sp_recursion_depth = 10;
    SET OUT_Mid=0;

    open myCursor;

    myLoop: LOOP

        fetch myCursor into  _Mid,_StockId;

        if _done = 1 OR OUT_Mid>0 then
            leave myLoop;
        end if;

         IF _Mid>0 THEN
             SET OUT_Mid=_Mid;
          ELSE
             CALL proc_cg1_semifinished_mid(_StockId,OUT_Mid);
         END IF;

    END LOOP  myLoop;

    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_renew
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_renew`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_renew`(IN `IN_Mid` INT(11), IN `IN_StockId` VARCHAR(15), IN `IN_OrderQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _NewOrderQty decimal(11,2);
    declare _blSign TINYINT(4);
    declare _depth TINYINT(4);

    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";


    declare myCursor cursor for SELECT G.Id,G.StockId,G.StuffId,G.Relation,G.OrderQty,U.Decimals,E.blSign
           FROM cg1_semifinished G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype E ON E.Id=T.mainType
           WHERE G.mStockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;



     END;

    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into  _Id,_StockId,_StuffId,_Relation,_OrderQty,_Decimals,_blSign;


        if _done = 1 OR _error=1 then
            leave myLoop;
        end if;

        IF IN_OrderQty>0 THEN
              SET _NewOrderQty=getRelationQty(IN_OrderQty,_Relation,_Decimals);
           ELSE
              SET _NewOrderQty=0;
         END IF;

         UPDATE cg1_semifinished SET sId=IN_Mid,OrderQty=_NewOrderQty,OldQty=_OrderQty,modifier=IN_Operator WHERE Id=_Id;

         IF _blSign>0 THEN
            CALL proc_cg1_semifinished_renew(IN_Mid,_StockId,_NewOrderQty,IN_Operator,_error);
         END IF;


    END LOOP  myLoop;

   close myCursor;

   SET OUT_Error=_error;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_renew_a
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_renew_a`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_renew_a`(IN `IN_NewPOrderId` VARCHAR(12), IN `IN_StockId` VARCHAR(15), IN `IN_OrderQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _StockQty decimal(11,2);
    declare _FactualQty decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _NewOrderQty decimal(11,2);
    declare _blSign TINYINT(4);
    declare _mainType  INT(11);

    declare _NewId INT(11);
    declare _sMid INT(11);
    declare _sOrderQty  decimal(11,2);
    declare _sAddQty decimal(11,2);
    declare _sStockQty  decimal(11,2);
    declare _sFactualQty decimal(11,2);

    declare _sCgQty decimal(11,2);
    declare _NewStockId VARCHAR(15);
    declare _depth TINYINT(4);
    declare _Counts MEDIUMINT(6);
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";


    declare myCursor cursor for SELECT G.Id,G.StockId,G.StuffId,G.Relation,G.OrderQty,S.blSign,U.Decimals,T.mainType
           FROM cg1_semifinished G
           INNER JOIN cg1_stocksheet S ON S.StockId=G.StockId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE G.mStockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;



     END;





    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into  _Id,_StockId,_StuffId,_Relation,_OrderQty,_blSign,_Decimals,_mainType;


        if _done = 1 OR _error=1  then
            leave myLoop;
        end if;


        SET _NewOrderQty=getRelationQty(IN_OrderQty,_Relation,_Decimals);


        UPDATE cg1_semifinished SET POrderId=IN_NewPOrderId,OrderQty=_NewOrderQty,modifier=IN_Operator WHERE Id=_Id;

        SET _Counts=getSemifinishedCount(_StockId,0);

        IF _Counts=1 THEN
            IF _blSign=0 THEN
                  UPDATE cg1_stocksheet SET POrderId=IN_NewPOrderId,cgSign=1,OrderQty=_NewOrderQty,FactualQty=_NewOrderQty WHERE StockId=_StockId;
                  UPDATE yw1_scsheet SET POrderId=IN_NewPOrderId WHERE  StockId=_StockId;
            ELSE
                 SELECT Mid,OrderQty,StockQty,AddQty,FactualQty FROM cg1_stocksheet WHERE StockId=_StockId INTO  _sMid,_sOrderQty,_sStockQty,_sAddQty,_sFactualQty;

                 SET _sCgQty=_sAddQty+_sFactualQty;

                 IF  _sStockQty>_NewOrderQty THEN
                       SET _sStockQty=_NewOrderQty;
                       SET _sFactualQty=0;
                   ELSE
                       SET _sFactualQty=_NewOrderQty-_sStockQty;
                 END IF;

                 IF _sMid>0 THEN
                     SET _sAddQty=_sCgQty-_sFactualQty;
                 END IF;
                 UPDATE cg1_stocksheet SET POrderId=IN_NewPOrderId,cgSign=1,OrderQty=_NewOrderQty,StockQty=_sStockQty,AddQty=_sAddQty,FactualQty=_sFactualQty WHERE StockId=_StockId;


                 SET _Counts=getSemifinishedCount(_StockId,1);

                 IF _Counts>0 THEN
                      SET _sCgQty=_sAddQty+_sFactualQty;
                      CALL proc_cg1_semifinished_renew_a(IN_NewPOrderId,_StockId,_sCgQty,IN_Operator,_error);
                 END IF;

            END IF;
        ELSE

                SET _NewStockId=getNewStockId(IN_NewPOrderId,2);
                IF _blSign=1 THEN
                   SELECT OrderQty,StockQty,AddQty,FactualQty FROM cg1_stocksheet WHERE StockId=_StockId INTO  _sOrderQty,_sStockQty,_sAddQty,_sFactualQty;

                   SET _sCgQty=_sAddQty+_sFactualQty;
                   SET _sOrderQty=_sOrderQty-_NewOrderQty;
                   IF  _sStockQty>_NewOrderQty THEN
                       SET _sStockQty=_sStockQty-_NewOrderQty;
                     ELSE
                       SET _sStockQty=0;
                   END IF;

                   SET _sFactualQty=_sOrderQty-_sStockQty;
                   SET _sAddQty=_sCgQty-_sFactualQty;

                   UPDATE cg1_stocksheet SET OrderQty=_sOrderQty,StockQty=_sStockQty,AddQty=_sAddQty,FactualQty= _sFactualQty WHERE StockId=_StockId;

                   SET _StockQty=_NewOrderQty;
                   SET _FactualQty=0;
                 ELSE
                    UPDATE cg1_stocksheet SET OrderQty=OrderQty-_NewOrderQty,FactualQty=FactualQty-_NewOrderQty WHERE StockId=_StockId;

                    SET _StockQty=0;
                    SET _FactualQty=_NewOrderQty;
              END IF;


               INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,cgSign,Estate,Locks,Date,Operator)
						SELECT '0',Level,_NewStockId,IN_NewPOrderId,StuffId,Relation,Price,CostPrice,_NewOrderQty,_StockQty,'0',_FactualQty,CompanyId,BuyerId,DeliveryDate,'','由半成品转特采单生成',blSign,'1','0','1',CURDATE(),IN_Operator
                        FROM cg1_stocksheet  WHERE StockId=_StockId;

               SET _NewId=LAST_INSERT_ID();

               IF _NewId>0 THEN
                   UPDATE cg1_semifinished SET StockId=_NewStockId WHERE Id=_Id;
               END IF;
        END IF;
        SET  _done = -1;

    END LOOP  myLoop;

   close myCursor;


   SET OUT_Error=_error;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_renew_b
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_renew_b`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_renew_b`(IN `IN_NewPOrderId` VARCHAR(12), IN `IN_StockId` VARCHAR(15), IN `IN_OrderQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _Mid  INT(11);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _StockQty decimal(11,2);
    declare _FactualQty decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _NewOrderQty decimal(11,2);
    declare _blSign TINYINT(4);
    declare _mainType  INT(11);

    declare _NewId INT(11);
    declare _sOrderQty  decimal(11,2);
    declare _sAddQty decimal(11,2);
    declare _sStockQty  decimal(11,2);
    declare _sFactualQty decimal(11,2);
    declare _sCgQty decimal(11,2);

    declare _NewStockId VARCHAR(15);
    declare _depth TINYINT(4);
    declare _Counts MIDDLEINT(6);
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";


    declare myCursor cursor for SELECT G.Id,G.StockId,G.StuffId,G.Relation,G.OrderQty,S.blSign,U.Decimals,T.mainType
           FROM cg1_semifinished G
           INNER JOIN cg1_stocksheet S ON S.StockId=G.StockId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE G.mStockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;



         SHOW ERRORS;

     END;





    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into  _Id,_StockId,_StuffId,_Relation,_OrderQty,_blSign,_Decimals,_mainType;


        if _done = 1 OR _error=1  then
            leave myLoop;
        end if;


         UPDATE cg1_semifinished SET POrderId=IN_NewPOrderId,modifier=IN_Operator WHERE Id=_Id;

         SET _Counts=getSemifinishedCount(_StockId,0);

         IF _Counts=1 THEN
                 UPDATE cg1_stocksheet SET POrderId=IN_NewPOrderId,cgSign=1 WHERE StockId=_StockId;

                IF _blSign=0 THEN
                      UPDATE yw1_scsheet SET POrderId=IN_NewPOrderId WHERE  StockId=_StockId;
                  ELSE
                      SET _Counts=getSemifinishedCount(_StockId,1);
                      IF _Counts>0 THEN
                         CALL proc_cg1_semifinished_renew_b(IN_NewPOrderId,_StockId,_OrderQty,IN_Operator,_error);
                      END IF;
                END IF;
            ELSE

                SET _NewStockId=getNewStockId(IN_NewPOrderId,2);
                IF _blSign=1 THEN
                   SELECT Mid,OrderQty,StockQty,AddQty,FactualQty FROM cg1_stocksheet WHERE StockId=_StockId INTO  _Mid,_sOrderQty,_sStockQty,_sAddQty,_sFactualQty;

                   SET _sCgQty=_sAddQty+_sFactualQty;
                   SET _sOrderQty=_sOrderQty-_OrderQty;

                   IF  _sStockQty>_OrderQty THEN
                       SET _sStockQty=_sStockQty-_OrderQty;
                     ELSE
                       SET _sStockQty=0;
                   END IF;

                   SET _sFactualQty=_sOrderQty-_sStockQty;
                   SET _sAddQty=_sCgQty-_sFactualQty;

                   UPDATE cg1_stocksheet SET OrderQty=_sOrderQty,StockQty=_sStockQty,AddQty=_sAddQty,FactualQty=_sFactualQty WHERE StockId=_StockId;

                   SET _StockQty=_OrderQty;
                   SET _FactualQty=0;
                 ELSE
                    UPDATE cg1_stocksheet SET OrderQty=OrderQty-_OrderQty,FactualQty=FactualQty-_OrderQty WHERE StockId=_StockId;

                    SET _StockQty=0;
                    SET _FactualQty=_OrderQty;
              END IF;

              INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,cgSign,Estate,Locks,Date,Operator)
						SELECT '0',Level,_NewStockId,IN_NewPOrderId,StuffId,Relation,Price,CostPrice,_OrderQty,_StockQty,'0',_FactualQty,CompanyId,BuyerId,DeliveryDate,'','由半成品转特采单生成',blSign,'1','0','1',CURDATE(),IN_Operator
                        FROM cg1_stocksheet  WHERE StockId=_StockId;

               SET _NewId=LAST_INSERT_ID();

               IF _NewId>0 THEN
                   UPDATE cg1_semifinished SET StockId=_NewStockId WHERE Id=_Id;
                  ELSE
                   SET _error=1;
               END IF;
        END IF;


    END LOOP  myLoop;

   close myCursor;


  SET OUT_Error=_error;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_reset
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_reset`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_reset`(IN `IN_POrderId` VARCHAR(12), IN `IN_Id` INT(11), IN `IN_Level` TINYINT(4), IN `IN_Sign` TINYINT(4), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_RunSign` INT, OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _SId INT(11);
    declare _mStockId VARCHAR(15);
    declare _mStuffId  MEDIUMINT(9);
    declare _mOrderQty decimal(11,2);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(30);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _mainType MEDIUMINT(9);
    declare _MainTypes VARCHAR(255);
    declare _scSign TINYINT(4) DEFAULT 0 ;
    declare _level TINYINT(4);
    declare _ParentNode VARCHAR(2000) DEFAULT '';

    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _StockId VARCHAR(15);
    declare _Mid INT(11) DEFAULT 0;
    declare _FoundSign TINYINT(4);
    declare _NewSign TINYINT(4);

    declare _done int default -1;



    declare myCursor cursor for  SELECT S.Id,S.StockId AS mStockId,(S.AddQty+S.FactualQty) AS Qty,G.mStuffId,G.StuffId,G.Relation,D.Price,
           IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,M.blSign,T.mainType
           FROM cg1_stocksheet S
           INNER JOIN semifinished_bom G ON G.mStuffId=S.StuffId
           LEFT JOIN stuffdata MD ON MD.StuffId=G.mStuffId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice CP ON CP.StuffId=G.StuffId
           LEFT JOIN bps B ON B.StuffId=D.StuffId
           LEFT JOIN bps MB ON MB.StuffId=S.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype M ON M.Id=T.mainType
           WHERE S.Id=IN_Id AND S.POrderId=IN_POrderId AND S.Level=IN_Level AND MD.bomEstate=0  AND (S.AddQty+S.FactualQty)>0  AND (FIND_IN_SET(S.CompanyId,getSysConfig(106))>0
   OR EXISTS(SELECT BO.mStuffId FROM semifinished_bom BO LEFT JOIN stuffdata D ON D.StuffId=BO.StuffId WHERE BO.mStuffId=S.StuffId AND D.TypeId=getSysConfig(104)));

    declare myCursor2 cursor for  SELECT S.Id,S.StockId AS mStockId,(S.AddQty+S.FactualQty) AS Qty,G.mStuffId,G.StuffId,G.Relation,D.Price,
           IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,M.blSign,T.mainType
           FROM cg1_stocksheet S
           INNER JOIN semifinished_bom G ON G.mStuffId=S.StuffId
           LEFT JOIN stuffdata MD ON MD.StuffId=G.mStuffId
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice CP ON CP.StuffId=G.StuffId
           LEFT JOIN bps B ON B.StuffId=D.StuffId
           LEFT JOIN bps MB ON MB.StuffId=S.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype M ON M.Id=T.mainType
           WHERE S.Id>IN_Id AND S.POrderId=IN_POrderId AND S.Level=IN_Level AND MD.bomEstate=0  AND (S.AddQty+S.FactualQty)>0  AND (FIND_IN_SET(S.CompanyId,getSysConfig(106))>0
   OR EXISTS(SELECT BO.mStuffId FROM semifinished_bom BO LEFT JOIN stuffdata D ON D.StuffId=BO.StuffId WHERE BO.mStuffId=S.StuffId AND D.TypeId=getSysConfig(104)));


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
       SET OUT_Error=1;


    END;

    SET _MainTypes=getSysConfig(102);
    SET OUT_Error=0;
    SET OUT_RunSign=0;
    SET _level=IN_Level+1;

    IF IN_Sign=0 THEN
         open myCursor;
      ELSE
         open myCursor2;
    END IF;

    myLoop: LOOP

       IF IN_Sign=0 THEN
             fetch myCursor into _SId,_mStockId,_mOrderQty,_mStuffId,_StuffId,_Relation,_Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;
         ELSE
             fetch myCursor2 into _SId,_mStockId,_mOrderQty,_mStuffId,_StuffId,_Relation,_Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;
       END IF;

        if _done = 1 OR OUT_Error=1 then
            leave myLoop;
        end if;


        SET _OrderQty=getRelationQty(_mOrderQty,_Relation,_Decimals);
        SET _FactualQty=_OrderQty;
        SET _StockQty=0;

        SET _NewSign=1;



        IF _mainType = 2 OR _mainType = 3  THEN

           SET  _scSign = 1;

        END IF ;


        SELECT Mid,StockId,COUNT(1) AS FoundSign FROM cg1_stocksheet WHERE POrderId=IN_POrderId AND StuffId=_StuffId AND Id>IN_Id INTO _Mid,_StockId,_FoundSign;
        IF _FoundSign>0 AND _Mid=0 THEN
           IF _scSign>0 THEN

                  SET _NewSign = 1;
           ELSE
                  SET _NewSign=0;
           END IF;

        END IF;



        IF _NewSign=1 THEN
           SET _StockId = getNewStockId(IN_POrderId,1);

           IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
           IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;


           INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,Estate,Locks,Date,Operator) VALUES
						('0',_level,_StockId,IN_POrderId,_StuffId,_Relation,_Price,_CostPrice,_OrderQty,_StockQty,'0',_FactualQty,_CompanyId,_BuyerId,'0000-00-00','','',_blSign,'0','1',CURDATE(),IN_Operator);
        ELSE

           UPDATE cg1_stocksheet SET OrderQty=OrderQty+_OrderQty,FactualQty=FactualQty+_FactualQty WHERE StockId=_StockId;

        END IF;

        SET _ParentNode=getStuffParentNode(_mStockId);

        INSERT INTO cg1_semifinished (POrderId,mStockId,mStuffId,StockId,StuffId,Relation,OrderQty,ParentNode,Date,Operator) VALUES (IN_POrderId,_mStockId,_mStuffId,_StockId,_StuffId,_Relation,_OrderQty,_ParentNode,CURDATE(),IN_Operator);

        SET OUT_RunSign=OUT_RunSign+1;
        SET _done = 0;

    END LOOP  myLoop;

     IF IN_Sign=0 THEN
        close myCursor;
      ELSE
        close myCursor2;
     END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_resetqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_resetqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_resetqty`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT, OUT `OUT_Log` VARCHAR(20000))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _sId INT(11);
    declare _Mid INT(11);
    declare _POrderId VARCHAR(12);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _oStockQty decimal(11,2);
    declare _OrderQty  decimal(11,2);
    declare _mOrderQty  decimal(11,2);
    declare _AddQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _Relation VARCHAR(30);

    declare _cgQty  decimal(11,2);
    declare _useSign MEDIUMINT(6);
    declare _delSign TINYINT(4);
    declare _cgSign TINYINT(4);
    declare _semiSign MEDIUMINT(6);

    declare _oldOrderQty  decimal(11,2);

    declare _NewPOrderId VARCHAR(12);
    declare _NewFactualQty decimal(11,2);
    declare _NewOrderQty  decimal(11,2);
    declare _reduceQty  decimal(11,2);

    declare _depth TINYINT(4);
    declare _log TEXT default '';
    declare _log2 TEXT default '';
    declare _delIds TEXT default '';
    declare _delsemiIds TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    declare _error2 INTEGER DEFAULT 0;
    declare _done int default -1;

    declare myCursor cursor for SELECT M.Id,M.StockId,S.POrderId,(S.AddQty+S.FactualQty) AS FactualQty,M.OldQty,M.Relation,U.Decimals
				FROM  cg1_stocksheet S
                LEFT JOIN cg1_semifinished M ON M.mStockId=S.StockId
                LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
                LEFT JOIN stuffunit U ON U.Id=D.Unit
                WHERE S.StockId=IN_StockId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
         SET OUT_Error=1;

    END;

    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;

    SET OUT_Error=0;
    open myCursor;

    myLoop: LOOP
       fetch myCursor into  _sId,_StockId,_POrderId,_NewFactualQty,_oldOrderQty,_Relation,_Decimals;


      if _done = 1 OR _error=1  then
             leave myLoop;
      end if;

      SET _NewOrderQty=getRelationQty(_NewFactualQty,_Relation,_Decimals);
      SET _reduceQty=_oldOrderQty-_NewOrderQty;

      SELECT G.Id,G.Mid,G.StuffId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty,G.cgSign,G.blSign FROM cg1_stocksheet G WHERE G.StockId=_StockId INTO _Id,_Mid,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign,_blSign;

      IF _Id IS NOT NULL THEN

         IF _blSign=0 THEN
            UPDATE cg1_stocksheet SET OrderQty=OrderQty-_reduceQty,FactualQty=FactualQty-_reduceQty WHERE Id=_Id;
            UPDATE yw1_scsheet SET Qty=Qty-_reduceQty WHERE  StockId=_StockId;

            SET _log=CONCAT(_log,_StockId,'采购需求单的订单需求数减少：',_reduceQty,'。<br>');
         ELSE

           SET _semiSign=getSemifinishedCount(_StockId,1);
            SET _cgQty=_AddQty+_FactualQty;

            SET _OrderQty=_OrderQty-_reduceQty;
            IF _StockQty>=_OrderQty THEN
                  SET _StockQty=_OrderQty;
            END IF;

            SET _FactualQty=_OrderQty-_StockQty;
            IF _Mid>0 THEN
                SET _AddQty=_cgQty-_FactualQty;
            END IF;

            UPDATE cg1_stocksheet SET OrderQty=_OrderQty,StockQty=_StockQty,AddQty=_AddQty,FactualQty=_FactualQty WHERE Id=_Id;
            IF row_count()>0 THEN
                    SET _log=CONCAT(_log,_StockId,' 采购需求单的订单需求数减少：',_reduceQty,'。<br>');
                  ELSE
                    SET _log=CONCAT(_log,_StockId,' 采购需求单的订单需求数减少：',_reduceQty,'OrderQty:',_OrderQty,'StockQty:',_StockQty,'AddQty:',_AddQty,'FactualQty:',_FactualQty,'Id:',_Id,'失败。<br>');
                    SET _error=1;
            END IF;
            UPDATE  cg1_semifinished SET POrderId=_POrderId,OldQty=0 WHERE Id=_sId;

            IF _semiSign>0  AND _Mid=0 THEN
                 SET _log=CONCAT(_log,_StockId,' 采购需求单重置二级BOM配件：<br>');
                 CALL proc_cg1_semifinished_resetqty(_StockId,IN_Operator,_error,_log2);
                 SET _log=CONCAT(_log,_log2);
            END IF;
      END IF;
   END IF;
   SET _done = -1;
   END LOOP  myLoop;
   close myCursor;

   SET OUT_Error=_error;
   SET OUT_Log=_log;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_setdeliverydate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_setdeliverydate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_setdeliverydate`(IN `IN_mStockId` VARCHAR(15), IN `IN_DeliveryDate` DATE, IN `IN_ReduceWeeks` TINYINT, IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    DECLARE _Id INT(11);
    DECLARE _StockId VARCHAR(15);

    DECLARE _PiId INT(11) DEFAULT 0;
    DECLARE _days INT(9);
    DECLARE _DeliveryDate DATE;
    DECLARE _NewDeliveryDate DATE;
    DECLARE _log TEXT DEFAULT '';
    DECLARE _ActionId MIDDLEINT(6);
    DECLARE _ActionIds VARCHAR(50);

    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _done INT DEFAULT -1;
    DECLARE _error INTEGER DEFAULT 0;
    declare _depth TINYINT(4);

    declare myCursor cursor for SELECT G.Id,G.StockId
				   	FROM cg1_semifinished S
                    LEFT JOIN cg1_stocksheet G ON G.StockId=S.StockId
					LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
                    LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                    LEFT JOIN stuffmaintype M ON M.Id=T.mainType
					WHERE S.mStockId=IN_mStockId  AND M.blSign>0;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;
         SHOW ERRORS;
     END;


    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;
    SET _ActionIds=getSysConfig(107);


    START TRANSACTION;

    IF YEARWEEK(IN_DeliveryDate) IS NULL  THEN
          SELECT DeliveryDate FROM cg1_stocksheet WHERE StockId=IN_mStockId INTO IN_DeliveryDate;
       ELSE

         INSERT INTO cg1_deliverydate(StockId,DeliveryDate,DeliveryWeek,Date,Operator,creator,created) SELECT StockId,DeliveryDate,DeliveryWeek,CURDATE(),IN_Operator,IN_Operator,NOW() FROM cg1_stocksheet
             WHERE StockId=IN_mStockId AND Mid>0;
         UPDATE cg1_stocksheet SET DeliveryDate=IN_DeliveryDate WHERE StockId=IN_mStockId;
    END IF;

    IF IN_ReduceWeeks=0 THEN
       SET _DeliveryDate=IN_DeliveryDate;
    ELSE
       SET _days=IN_ReduceWeeks*7;
       SET _DeliveryDate=DATE_ADD(IN_DeliveryDate, interval _days day);
       IF  _DeliveryDate<CURDATE() THEN
            SET _DeliveryDate=DATE_ADD(CURDATE(), interval +1 day);
       END IF;
    END IF;


    open myCursor;

    myLoop: LOOP

        fetch myCursor into _Id,_StockId;

        if _done = 1  then
            leave myLoop;
        end if;

        SELECT ActionId FROM yw1_scsheet WHERE  mStockId=_StockId LIMIT 1 INTO _ActionId;

        IF FIND_IN_SET(_ActionId,_ActionIds)>0 THEN
            SET _NewDeliveryDate=IN_DeliveryDate;
          ELSE
            SET _NewDeliveryDate=_DeliveryDate;
        END IF;



        SET _log=CONCAT(_log,_StockId,':',_NewDeliveryDate,'/');

        UPDATE cg1_stocksheet SET DeliveryDate=_NewDeliveryDate WHERE Id=_Id;

        CALL proc_semifinished_setdeliverydate(_StockId,_DeliveryDate,_error);
        SET _done = -1;
   END LOOP  myLoop;


   close myCursor;

   IF _error = 1 THEN
            ROLLBACK;
             SET _log=CONCAT(_log,'半成品:',IN_mStockId,'设置采购单交期失败！<br>');
        ELSE
            COMMIT;
            SET _log=CONCAT(_log,'半成品:',IN_mStockId,'设置采购单交期成功！<br>');
            SET _OperationResult="Y";
    END IF;

    SELECT _OperationResult AS OperationResult,_log AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_semifinished_updateqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_semifinished_updateqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_semifinished_updateqty`(IN `IN_POrderId` VARCHAR(12), IN `IN_StockId` VARCHAR(15), IN `IN_Qty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_RunCounts` INT, OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _NewOrderQty decimal(11,2);
    declare _Decimals TINYINT(4);
    declare _done int default -1;


    declare myCursor cursor for SELECT G.Id,G.StockId,G.StuffId,G.OrderQty,G.Relation,U.Decimals
           FROM cg1_semifinished G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffunit U ON U.Id=D.Unit
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE G.mStockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;

     END;

    SET OUT_Error=0;
    SET OUT_RunCounts=0;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_StockId,_StuffId,_OrderQty,_Relation,_Decimals;


        if _done = 1 OR not _done then
            leave myLoop;
        end if;

          IF IN_Qty=0 THEN
              SET _NewOrderQty=0;
            ELSE
              SET _NewOrderQty=getRelationQty(IN_Qty,_Relation,_Decimals);
          END IF;
          IF _OrderQty=_NewOrderQty THEN
              SET _OrderQty=0;
          END IF;
          UPDATE cg1_semifinished SET OrderQty=_NewOrderQty,OldQty=_OrderQty,modifier=IN_Operator,modified=NOW() WHERE Id=_Id;
          SET OUT_RunCounts=OUT_RunCounts+1;

    END LOOP  myLoop;

    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stockmain_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stockmain_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stockmain_insert`(IN `IN_Ids` VARCHAR(20480), IN `IN_Remark` TEXT, IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _Ids VARCHAR(20480) default '';
    declare _PurchaseID INT(10);
    declare _CompanyId  MEDIUMINT(9) default 0;
    declare _BuyerId  MEDIUMINT(9);
    declare _Mid INT(11);
    declare _date MEDIUMINT(4);


    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;


   declare myCursor cursor for  SELECT GROUP_CONCAT(Id,'') AS Ids,CompanyId,BuyerId FROM cg1_stocksheet WHERE FIND_IN_SET(Id,IN_Ids) AND CompanyId>0 AND Mid=0 GROUP BY CompanyId;



    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    SELECT YEAR(CURDATE()) INTO _date;

    SELECT MAX(PurchaseID) AS maxID FROM cg1_stockmain WHERE PurchaseID LIKE CONCAT(_date,'%') INTO _PurchaseID;

    IF _PurchaseID>0 THEN
         SET _PurchaseID=_PurchaseID+1;
       ELSE
         SET _PurchaseID=CONVERT(_date,signed)*10000+1;
    END IF;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Ids,_CompanyId,_BuyerId;

        if _done = 1  then
             leave myLoop;
        end if;

        INSERT INTO cg1_stockmain (CompanyId,BuyerId,PurchaseID,DeliveryDate,Remark,Date,Operator) VALUES (_CompanyId,_BuyerId,_PurchaseID,'0000-00-00',IN_Remark,CURDATE(),IN_Operator);
        SET _Mid=last_insert_id();


        IF _Mid>0 THEN
             UPDATE cg1_stocksheet SET Mid=_Mid,Locks=0 WHERE FIND_IN_SET(Id,_Ids) AND Estate=0  AND CompanyId=_CompanyId;
            SET _PurchaseID=_PurchaseID+1;
        END IF;



    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_add`(IN IN_POrderId varchar(15),IN IN_StuffId mediumint(9),IN  IN_Qty decimal(11,2),IN  IN_Relation varchar(300),IN IN_Level TINYINT(4),IN IN_Operator mediumint(9))
    DETERMINISTIC
BEGIN

    declare _POrderId VARCHAR(12);
    declare _mStockId VARCHAR(15) DEFAULT '';
    declare _StuffId  MEDIUMINT(9);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _oStockQty decimal(11,2);
    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _StockId VARCHAR(15);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _cgSign TINYINT(4) DEFAULT 0;
    declare _mainType INT(11);
    declare _DeliveryDate Date;
    DECLARE _Estate TINYINT(4) DEFAULT 1;

    declare _addSign TINYINT(4) DEFAULT 0;
    declare _MainTypes MEDIUMINT(9);
    declare _date VARCHAR(10);
    declare _sId INT(11);
    declare _Counts MEDIUMINT(6);
    declare _FoundSign TINYINT(4);
    declare _Level TINYINT(4);
    declare _maxLevel TINYINT(4);
    declare _runCounts INTEGER DEFAULT 0;
    declare _recount TINYINT(4);

    declare _len TINYINT(4);
    declare _newSetSign TINYINT(4) DEFAULT 0;
    declare _newPrice decimal(10,3);
    declare _addRemark VARCHAR(255) DEFAULT '';

    declare _done int default -1;

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
      SHOW ERRORS;
    END;


    START TRANSACTION;


    SET _DeliveryDate=getCgDeliveryDate(IN_POrderId);

     IF LENGTH(IN_POrderId)=12 THEN
            SET _addSign=1;
        ELSE
           IF LENGTH(IN_POrderId)=15 THEN
               SET _mStockId=IN_POrderId;
               SET IN_POrderId=SUBSTR(_mStockId,1,12);
            SET _addSign=1;
           END IF;
     END IF;

    IF _addSign=1 THEN
       SELECT MAX(StockId) AS StockId FROM  cg1_stocksheet WHERE StockId LIKE CONCAT(IN_POrderId,'%') INTO _StockId;
        IF LENGTH(_StockId)>0 THEN
           SET _StockId=CONCAT(CONVERT(_StockId,signed)+1,'');
        ELSE
           SET _StockId=CONCAT(IN_POrderId,'001');
        END IF;
        SET _POrderId=IN_POrderId;

        IF CONVERT(IN_Qty,signed)=0 AND LENGTH(IN_Relation)>0 THEN
          IF LENGTH(_mStockId)=15 THEN
              SELECT (AddQty+FactualQty) AS Qty FROM cg1_stocksheet WHERE StockId=_mStockId  LIMIT 1 INTO IN_Qty;
            ELSE
              SELECT Qty FROM yw1_ordersheet WHERE POrderId=IN_POrderId  LIMIT 1 INTO IN_Qty;
          END IF;
        END IF;

      ELSE

        SET _StockId=getNewStockId('',2);

        SET _cgSign=1;
        SET _POrderId=SUBSTR(_StockId,1,12);

        IF LENGTH(IN_Relation)>0 THEN
            SET IN_Relation=CONCAT(IN_Relation,'|');
            SET _len=substrCount(IN_Relation,'|');
            IF _len=2 THEN
                 SET _newPrice=strSplit(IN_Relation,'|',1);
                 SET _addRemark=strSplit(IN_Relation,'|',2);
                 SET _newSetSign=1;
            END IF;
        END IF;
    END IF;

    SELECT D.Price,IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,E.blSign,T.mainType
              FROM stuffdata D
              LEFT JOIN bps B ON B.StuffId=D.StuffId
              LEFT JOIN stuffcostprice CP ON CP.StuffId=D.StuffId
              LEFT JOIN stuffunit U ON U.Id=D.Unit
              LEFT JOIN stufftype T ON T.TypeId=D.TypeId
              LEFT JOIN stuffmaintype E ON E.Id=T.mainType
              WHERE D.StuffId=IN_StuffId  INTO  _Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;



   IF _addSign=1 THEN

        SET _OrderQty=getRelationQty(IN_Qty,IN_Relation,_Decimals);
        SET _FactualQty=_OrderQty;
        SET _StockQty=0;
      ELSE

          SET _OrderQty=0;
          SET _StockQty=0;
          SET _FactualQty=IN_Qty;
          SET _DeliveryDate=CURDATE();
   END IF;

   IF _newSetSign=1 THEN
      SET _Price=_newPrice;
   END IF;

   IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
   IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;

   IF  _cgSign = 0  THEN
       SET _Estate = 0 ;
   ELSE
       SET _Estate = 1 ;
   END IF ;

   INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,cgSign,blSign,Estate,Locks,Date,Operator) VALUES
						('0',IN_Level,_StockId,_POrderId,IN_StuffId,_Price,_CostPrice,_OrderQty,_StockQty,'0',_FactualQty,_CompanyId,_BuyerId,_DeliveryDate,'',_addRemark,_cgSign,_blSign,_Estate,'1',CURDATE(),IN_Operator);

   SET _sId=LAST_INSERT_ID();


   SET _maxLevel=CONVERT(getSysConfig(105),signed);
   SET  _MainTypes=getSysConfig(103);

   SELECT FIND_IN_SET(_mainType,_MainTypes) INTO _FoundSign;

   IF  IN_Level=1 AND  FIND_IN_SET(_CompanyId,getSysConfig(106))>0 THEN
      SET _FoundSign=0;
   END IF;

   IF _error=0  AND _FoundSign>0 AND _FactualQty>0  THEN
      SET _Level=IN_Level;

      loop_label: LOOP
              CALL proc_cg1_semifinished_add(_POrderId,_sId,_Level,IN_Operator,_runCounts,_error);
              IF _runCounts=0 OR _Level>=_maxLevel OR _error=1 THEN
                 LEAVE loop_label;
              END IF;
              SET _Level=_Level+1;
     END LOOP;


    CALL proc_yw1_scsheet_add(_POrderId,_sId,IN_Operator,_error);

     IF _Level>IN_Level  OR _mainType=getSysConfig(102) THEN
           IF _addSign!=1 THEN
               UPDATE cg1_stocksheet SET cgSign=_cgSign WHERE POrderId=_POrderId;
          END IF;




     END IF;

   END IF;

    IF _sId>0 THEN
          CALL proc_yw1_scsheet_renew(_POrderId);
    END IF;


   IF LENGTH(_POrderId)=12 THEN
      SET _recount = setOrderCostPrice(_POrderId);
   END IF;



    IF _error=1 THEN
            ROLLBACK;
            set _log = CONCAT(IN_StuffId,"－新增采购需求单",_StockId,"失败！");
        ELSE

             COMMIT;
            set _log = CONCAT(IN_StuffId,"－新增采购需求单",_StockId,"成功！");
            set _OperationResult='Y';
        END IF;

   INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'新增需求单','保存',IN_Operator,_log,_OperationResult);

   SELECT _OperationResult AS OperationResult,_log AS OperationLog,_StockId AS NewStockId,_POrderId AS NewPOrderId;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_addnew
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_addnew`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_addnew`(IN `IN_POrderId` VARCHAR(12), IN `IN_StuffId` MEDIUMINT(9), IN `IN_OrderQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _POrderId VARCHAR(12);
    declare _StuffId  MEDIUMINT(9);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _oStockQty decimal(11,2);
    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _StockId VARCHAR(15);
    declare _Decimals TINYINT(4);
    declare _blSign TINYINT(4);
    declare _cgSign TINYINT(4) DEFAULT 0;
    declare _mainType INT(11);

    declare _addSign TINYINT(4) DEFAULT 0;
    declare _MainTypes MEDIUMINT(9);
    declare _date VARCHAR(10);
    declare _sId INT(11);
    declare _Counts MEDIUMINT(6);
    declare _FoundSign TINYINT(4);
    declare _Level TINYINT(4);
    declare _maxLevel TINYINT(4);
    declare _runCounts INTEGER DEFAULT 0;

    declare _len TINYINT(4);
    declare _newSetSign TINYINT(4) DEFAULT 0;
    declare _newPrice decimal(10,3);
    declare _addRemark VARCHAR(255) DEFAULT '';

    declare _done int default -1;

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;

    END;
    SET _Level=1;

    SELECT D.Price,IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,E.blSign,T.mainType
              FROM stuffdata D
              LEFT JOIN bps B ON B.StuffId=D.StuffId
              LEFT JOIN stuffcostprice CP ON CP.StuffId=D.StuffId
              LEFT JOIN stuffunit U ON U.Id=D.Unit
              LEFT JOIN stufftype T ON T.TypeId=D.TypeId
              LEFT JOIN stuffmaintype E ON E.Id=T.mainType
              WHERE D.StuffId=IN_StuffId  INTO  _Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign,_mainType;

   IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
   IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;


    SET _StockId=getNewStockId(IN_POrderId,1);
    SET _cgSign=0;

    SET  _MainTypes=getSysConfig(103);
    SELECT FIND_IN_SET(_mainType,_MainTypes) INTO _FoundSign;

   INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,cgSign,blSign,Estate,Locks,Date,Operator) VALUES
						('0',_Level,_StockId,IN_POrderId,IN_StuffId,_Price,_CostPrice,IN_OrderQty,'0','0',IN_OrderQty,_CompanyId,_BuyerId,'0000-00-00','','订单数量增加生成的采购单',_cgSign,_blSign,'1','1',CURDATE(),IN_Operator);

   SET _sId=LAST_INSERT_ID();


   IF _error=0  AND _sId>0  AND _FoundSign>0 THEN

      SET _maxLevel=CONVERT(getSysConfig(105),signed);
      SET  _MainTypes=getSysConfig(103);

      loop_label: LOOP
              CALL proc_cg1_semifinished_add(IN_POrderId,_sId,_Level,IN_Operator,_runCounts,_error);
              IF _runCounts=0 OR _Level>=_maxLevel OR _error=1 THEN
                 LEAVE loop_label;
              END IF;
              SET _Level=_Level+1;
     END LOOP;


     IF _Level>1 THEN
         CALL proc_yw1_scsheet_add(IN_POrderId,_sId,IN_Operator,_error);
     END IF;
   END IF;

   SET OUT_Error=_error;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_automain
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_automain`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_automain`(IN `IN_POrderId` VARCHAR(12), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _Ids VARCHAR(20480) default '';
    declare _Propertys VARCHAR(255) default '';
    declare _Name VARCHAR(255);




    SELECT Name,Parameters FROM sys_config WHERE Cid=101 LIMIT 1 INTO _Name,_Propertys;

    SELECT GROUP_CONCAT(Id,'') FROM  cg1_stocksheet G
                   WHERE G.POrderId=IN_POrderId AND G.Mid=0 AND (G.AddQty+G.FactualQty)>0
                         AND EXISTS(SELECT P.Property FROM stuffproperty P WHERE P.StuffId=G.StuffId AND FIND_IN_SET(P.Property,_Propertys)) LIMIT 1  INTO _Ids;

    IF LENGTH(_Ids)>0  AND _Ids IS NOT NULL THEN
       CALL proc_cg1_stockmain_insert(_Ids,_Name,IN_Operator);
    END IF;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_check
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_check`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_check`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _StockId VARCHAR(15);
    declare _OrderQty  decimal(11,2);
    declare _NeedQty   decimal(11,2);
    declare _mainType MEDIUMINT(9);
    declare _MainTypes VARCHAR(255);

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default 'N';
    declare _error INTEGER DEFAULT 0;
    declare _done int default -1;



    declare myCursor cursor for SELECT S.StockId,S.OrderQty,A.NeedQty,T.mainType  FROM (
                                      SELECT G.StockId,SUM(G.OrderQty) AS NeedQty
                                             FROM cg1_stocksheet S
                                             LEFT JOIN  cg1_semifinished G ON G.POrderId=S.POrderId
                                             WHERE S.StockId=IN_StockId  GROUP BY G.StockId
                                       )A
                                      INNER JOIN cg1_stocksheet S ON S.StockId=A.StockId
                                      INNER JOIN stuffdata D ON D.StuffId=S.StuffId
                                      INNER JOIN stufftype T ON T.TypeId=D.TypeId
                                      WHERE A.NeedQty!=S.OrderQty;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

    SET _MainTypes=getSysConfig(102);

   START TRANSACTION;

   open myCursor;

    myLoop: LOOP

        fetch myCursor into _StockId,_OrderQty,_NeedQty,_mainType;

        if _done = 1 OR _error=1 then

            leave myLoop;

        end if;


        UPDATE cg1_stocksheet SET OrderQty=_NeedQty,FactualQty=_NeedQty WHERE StockId=_StockId;

         IF FIND_IN_SET(_mainType,_MainTypes)>0 THEN
             UPDATE yw1_scsheet SET Qty=_NeedQty WHERE StockId=_StockId;
        END IF;

        SET _log = CONCAT(_log,_StockId,"(",_OrderQty,"=>",_NeedQty,");");


    END LOOP  myLoop;

    close myCursor;

    IF _error=1 THEN
            ROLLBACK;
            SET _log = CONCAT("半成品需求单:",IN_StockId,"检查失败！",_log);
        ELSE

            COMMIT;
            SET _log = CONCAT("半成品需求单检查:",IN_StockId,"检查成功！",_log);
            SET _OperationResult='Y';
     END IF;

   SELECT _OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_cmprice_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_cmprice_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_cmprice_updated`(IN `IN_StockId` VARCHAR(15))
    SQL SECURITY INVOKER
BEGIN


     declare _NewStockId VARCHAR(15);
     declare _mStockId VARCHAR(15);
     declare _POrderId VARCHAR(12);
     declare _Price decimal(11,2);
     declare _NewPrice DECIMAL(11,2);
     declare _CostPrice decimal(11,2);
     declare _NewCostPrice DECIMAL(11,2);
     declare _Level SMALLINT(6);
     declare _ActionId MEDIUMINT(9);
     declare _SystemValue decimal(11,2);



     SELECT S.POrderId,S.mStockId,D.Price,D.CostPrice,S.`Level`,S.ActionId
     FROM yw1_scsheet S
     LEFT JOIN cg1_stocksheet G ON G.StockId = S.StockId
     LEFT JOIN stuffdata D ON D.StuffId = G.StuffId
     WHERE S.StockId = IN_StockId  LIMIT 1 INTO _POrderId, _mStockId,_Price,_CostPrice,_Level,_ActionId;


     SET _SystemValue = CONVERT(getSysParamByActionId(_ActionId),decimal(11,2));

     IF _Level>1 AND _ActionId>101  THEN
         SELECT  G.StockId
         FROM cg1_semifinished G
         LEFT JOIN stuffdata D ON D.StuffId = G.StuffId
         LEFT JOIN stufftype T ON T.TypeId = D.TypeId
         WHERE G.mStockId = _mStockId   AND  T.mainType =2 AND T.TypeId = 9175 INTO _NewStockId;
     ELSE
         SELECT G.StockId
         FROM cg1_stocksheet  G
         LEFT JOIN stuffdata D ON D.StuffId = G.StuffId
         LEFT JOIN stufftype T ON T.TypeId = D.TypeId
         WHERE G.POrderId = _POrderId   AND  T.mainType =2 AND T.TypeId = 9175 AND G.Level=1 INTO _NewStockId;

     END IF ;




     IF _NewStockId>0  AND _SystemValue>0 THEN



         SET _NewPrice = _Price * _SystemValue;
         SET _NewCostPrice = _CostPrice * _SystemValue;

         IF  _NewPrice>0  THEN

             UPDATE  cg1_stocksheet  SET Price =_NewPrice,CostPrice = _NewPrice  WHERE  StockId = _NewStockId;

         END IF;

     END IF ;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_delete
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_delete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_delete`(IN `IN_StockId` VARCHAR(15), IN `IN_Id` INT(11), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _Id INT(11);
    declare _Mid INT(11);
    declare _POrderId VARCHAR(12);
    declare _StockId VARCHAR(15);
    declare _OrderQty VARCHAR(15);
    declare _oStockQty decimal(11,2);
    declare _AddQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _cgSign TINYINT(4);
    declare _blSign TINYINT(4);
    declare _Estate TINYINT(4);
    declare _semiSign TINYINT(4);
    declare _NewPOrderId VARCHAR(12);
    declare _recount TINYINT(4);

    declare _upSign INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    declare _sError INTEGER DEFAULT 0;
    declare _AddRemark VARCHAR(255);

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;

         SHOW ERRORS;
     END;

    START TRANSACTION;

    IF IN_Id>0 THEN
         SELECT G.Id,G.Mid,G.POrderId,G.StockId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty,G.cgSign,G.Estate,(K.oStockQty-K.mStockQty) AS oStockQty,E.blSign
				FROM  cg1_stocksheet G
       	     	LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
                LEFT JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
				LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                LEFT JOIN stuffmaintype E ON E.Id=T.mainType
	            WHERE G.Id=IN_Id LIMIT 1 INTO  _Id,_Mid,_POrderId,_StockId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign,_Estate,_oStockQty,_blSign;
       ELSE
         SELECT G.Id,G.Mid,G.POrderId,G.StockId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty,G.cgSign,G.Estate,(K.oStockQty-K.mStockQty) AS oStockQty,E.blSign
				FROM  cg1_stocksheet G
       	     	LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
                LEFT JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
				LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                LEFT JOIN stuffmaintype E ON E.Id=T.mainType
	            WHERE G.StockId=IN_StockId LIMIT 1 INTO  _Id,_Mid,_POrderId,_StockId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign,_Estate,_oStockQty,_blSign;
    END IF;

loop_label:loop

    IF ISNULL(_StockId) THEN
       SET _error = 1;
       SET _log="该需求单不存在？";
       LEAVE loop_label;
    END IF;

    IF _OrderQty>0 AND _Estate!=4 THEN
       SET _error = 1;
       IF _cgSign=0 THEN
           SET _log="不能删除，不是特采单！";
         ELSE
           SET _log="不能删除，是半成品需求单！";
      END IF;
       LEAVE loop_label;
    END IF;


    IF _cgSign=1 AND (_AddQty+_FactualQty) > _oStockQty THEN
       SET _error = 1;
       SET _log="不能删除，配件的订单库存不足。";
       LEAVE loop_label;
    END IF;

   SELECT COUNT(1) AS Counts FROM  cg1_semifinished WHERE mStockId=_StockId  INTO _semiSign;
   SET _upSign=0;

   IF _semiSign=0 THEN
        IF _Mid=0  THEN
            IF _AddQty=0  THEN

                  DELETE FROM cg1_stocksheet WHERE Id=_Id;
               ELSE

                  SET _upSign=1;
                  SET _FactualQty=_AddQty;
            END IF;
        ELSE

            SET _upSign=1;
            SET _FactualQty=_AddQty+_FactualQty;
        END IF;

        IF _upSign=1 THEN
             UPDATE cg1_stocksheet SET POrderId='',cgSign=1,OrderQty=0,StockQty=0,AddQty=0,FactualQty=_FactualQty WHERE StockId=_StockId;
        END IF;

        IF _OrderQty>0  THEN
           DELETE FROM cg1_semifinished WHERE StockId=_StockId;
        END IF;
   ELSE
       IF _Mid=0  THEN
            IF _AddQty=0  THEN

                  CALL proc_cg1_semifinished_delete(_StockId,IN_Operator,_error,_log);
                  IF _error=0 THEN
                      DELETE FROM cg1_stocksheet WHERE Id=_Id;
                      DELETE FROM cg1_semifinished WHERE mStockId=_StockId;
                  END IF;
            ELSE

                  SET _upSign=1;
                  SET _FactualQty=_AddQty;
            END IF;
       ELSE

             SET _upSign=1;
             SET _FactualQty=_AddQty+_FactualQty;
       END IF;

       IF _upSign=1 THEN
             SET _NewPOrderId=getNewPOrderId(2,SUBSTR(_StockId,1,8));
             UPDATE cg1_stocksheet SET POrderId=_NewPOrderId,cgSign=1,OrderQty=0,StockQty=0,AddQty=0,FactualQty=_FactualQty WHERE StockId=_StockId;
             IF _OrderQty>0  THEN
                  UPDATE cg1_stocksheet SET AddRemark='因取消配件而转的特采单!' WHERE StockId=_StockId;
             END IF;

             CALL proc_cg1_semifinished_renew_a(IN_NewPOrderId,_StockId,_FactualQty,IN_Operator,_sError);
             SET _error=_sError;
        END IF;

        IF _OrderQty>0  THEN
           DELETE FROM cg1_semifinished WHERE StockId=_StockId;
        END IF;
   END IF;

   leave loop_label;
 end loop;

   IF LENGTH(_POrderId)>0 THEN
     SET _recount = setOrderCostPrice(_POrderId);
   END IF;

    IF _error = 1 THEN
            ROLLBACK;
           IF IN_Id>0 THEN
              SET _log = CONCAT("采购需求单ID:",IN_Id,"删除失败！<br>",_log);
           ELSE
              SET _log = CONCAT("采购需求单:",IN_StockId,"删除失败！<br>",_log);
           END IF;
        ELSE
            COMMIT;

            set _log = CONCAT("采购需求单:",_StockId, "删除成功！<br>",_log);
            set _OperationResult='Y';
        END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'需求单更新','删除',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_insert`(IN IN_POrderId varchar(12),IN IN_ProductId mediumint(9), IN IN_Qty int(9),IN IN_Operator mediumint(9),OUT OUT_Error integer)
    DETERMINISTIC
BEGIN

    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _Price decimal(10,3);
    declare _CostPrice decimal(10,3);
    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _bpRate TINYINT(4);
    declare _OrderQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _StockId VARCHAR(15);
    declare _Decimals TINYINT(4);

    declare _blSign TINYINT(4);
    declare _mainType MEDIUMINT(9);
    DECLARE _runCounts INTEGER DEFAULT 0;

    declare _done int default -1;

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";



    declare myCursor cursor for SELECT P.StuffId,P.Relation,P.bpRate,D.Price,IF(T.mainType IN (getSysConfig(103)),IFNULL(CP.CostPrice,D.CostPrice),D.CostPrice) AS CostPrice,B.BuyerId,B.CompanyId,U.Decimals,M.blSign
				FROM  pands P
				INNER JOIN stuffdata D ON D.StuffId=P.StuffId
                LEFT JOIN stuffcostprice CP ON CP.StuffId=P.StuffId
				LEFT JOIN bps B ON B.StuffId=D.StuffId
                LEFT JOIN stuffunit U ON U.Id=D.Unit
                LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                LEFT JOIN stuffmaintype M ON M.Id=T.mainType
				WHERE P.ProductId=IN_ProductId  ORDER BY blSign DESC,P.Id;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET OUT_Error=1;


    END;

    SET OUT_Error=0;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _StuffId,_Relation,_bpRate,_Price,_CostPrice,_BuyerId,_CompanyId,_Decimals,_blSign;


        if _done = 1 OR OUT_Error=1 then
            leave myLoop;
        end if;

        IF LENGTH(_StockId)>0 THEN
           SET _StockId=CONCAT(CONVERT(_StockId,signed)+1,'');
        ELSE
           SET _StockId=CONCAT(IN_POrderId,'001');
        END IF;


        SET _OrderQty=getRelationQty(IN_Qty,_Relation,_Decimals);


        IF _bpRate>0 THEN
          SET _OrderQty=getStandbyRateQty(_bpRate,_OrderQty,_Decimals);
        END IF;

        SET _FactualQty=_OrderQty;
        SET _StockQty=0;

        IF ISNULL(_CompanyId) THEN  SET _CompanyId=0; END IF;
        IF ISNULL(_BuyerId)   THEN  SET _BuyerId=0;  END IF;

        INSERT INTO cg1_stocksheet (Mid,Level,StockId,POrderId,StuffId,Relation,Price,CostPrice,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId,DeliveryDate,StockRemark,AddRemark,blSign,Estate,Locks,Date,Operator) VALUES
						('0','1',_StockId,IN_POrderId,_StuffId,_Relation,_Price,_CostPrice,_OrderQty,_StockQty,'0',_FactualQty,_CompanyId,_BuyerId,'0000-00-00','','',_blSign,'0','1',CURDATE(),IN_Operator);

        SET _runCounts=_runCounts+1;
        SET _done = -1;

    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_renew
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_renew`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_renew`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9), OUT `OUT_Error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _POrderId VARCHAR(12);
    declare _StockId VARCHAR(15);
    declare _StuffId  MEDIUMINT(9);
    declare _ChangeQty decimal(11,2);
    declare _oStockQty decimal(11,2);

    declare _Mid INT(11);
    declare _OrderQty decimal(11,2);
    declare _AddQty decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _blSign TINYINT(4);

    declare _NewAddQty decimal(11,2);
    declare _NewOrderQty decimal(11,2);
    declare _NewFactualQty decimal(11,2);
    declare _sPOrderId  VARCHAR(13);
    declare _ActionId MIDDLEINT(9);
    declare _WorkShopId MIDDLEINT(9);
    declare _NewScQty decimal(11,2);

    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;



  declare myCursor cursor for SELECT S.StockId,S.StuffId,(S.OldQty-S.OrderQty) AS ChangeQty,(K.oStockQty-K.mStockQty) AS oStockQty,E.blSign
           FROM cg1_stocksheet G
           INNER JOIN cg1_semifinished S ON S.sId=G.Id
           LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
           LEFT JOIN ck9_stocksheet K ON K.StuffId=S.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype E ON E.Id=T.mainType
           WHERE G.StockId=IN_StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;




     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;


     END;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into  _StockId,_StuffId,_ChangeQty,_oStockQty,_blSign;

        SELECT Id,POrderId,Mid,OrderQty,StockQty,AddQty,FactualQty FROM cg1_stocksheet WHERE StockId=_StockId INTO _Id,_POrderId,_Mid,_OrderQty,_StockQty,_AddQty,_FactualQty;

        if _done = 1 then
            leave myLoop;
        end if;

        SET _NewOrderQty=_OrderQty-_ChangeQty;

        IF _blSign=0 THEN
           IF _NewOrderQty=0 THEN
                DELETE FROM cg1_stocksheet WHERE Id=_Id;
             ELSE
                UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,FactualQty=_NewOrderQty  WHERE  Id=_Id;
                CALL proc_yw1_scsheet_updateQty(_POrderId,_StockId,_NewOrderQty,IN_Operator,_error);
           END IF;
        ELSE
          IF _Mid=0 THEN

           IF _NewOrderQty=0 THEN

             IF _AddQty=0 OR _oStockQty+_StockQty>=_AddQty THEN
                   DELETE FROM cg1_stocksheet WHERE Id=_Id;
               ELSE

               SET _NewFactualQty=_AddQty-_oStockQty-_StockQty;
               UPDATE cg1_stocksheet SET POrderId='',cgSign='1',OrderQty='0',StockQty='0',AddQty='0',FactualQty=_NewFactualQty,Estate='0',AddRemark='因取消配件而转的特采单!'  WHERE Id=_Id;
            END IF;
          ELSE

              SET _ChangeQty=0;
              IF _StockQty>=_NewOrderQty THEN
                  SET _ChangeQty=_StockQty-_NewOrderQty;
                  SET _StockQty=_NewOrderQty;
                ELSE
                  SET _StockQty=_StockQty+_oStockQty;
              END IF;

              SET _FactualQty=_NewOrderQty-_StockQty;

              IF _ChangeQty>0 THEN
                 SET _AddQty=_AddQty-_ChangeQty;
              END IF;

              IF _AddQty<0 OR (oStockQty-_StockQty)>_AddQty THEN
                    SET _AddQty=0;
              END IF;

              UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,StockQty=_StockQty,AddQty=_AddQty,FactualQty=_FactualQty  WHERE  Id=_Id;
            END IF;
         ELSE

             IF _NewOrderQty=0 THEN

                SET _NewFactualQty=_AddQty+_FactualQty;
                UPDATE cg1_stocksheet SET POrderId='',cgSign='1',OrderQty='0',StockQty='0',AddQty='0',FactualQty=_NewFactualQty,AddRemark='因取消配件而转的特采单!',Estate='0'  WHERE  Id=_Id;
             ELSE

                IF _FactualQty>_NewOrderQty THEN
                  SET _ChangeQty= _FactualQty-_NewOrderQty;
                  SET _FactualQty= _NewOrderQty;
                END IF;
                IF _StockQty>_NewOrderQty THEN
                   SET _StockQty=_NewOrderQty;
                END IF;
                UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,StockQty=_StockQty,AddQty=_AddQty+_ChangeQty,FactualQty=_FactualQty  WHERE  Id=_Id;
             END IF;
        END IF;
     END IF;

    END LOOP  myLoop;

   close myCursor;

   SET OUT_Error=_error;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_reset
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_reset`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_reset`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _POrderId VARCHAR(12);
    declare _FactualQty  decimal(11,2);
    declare _sId INT(11);
    declare _maxId INT(11);
    declare _sLevel TINYINT(4);
    declare _Level TINYINT(4);
    declare _maxLevel TINYINT(4);
    declare _runCounts INTEGER DEFAULT 0;

    declare _sign TINYINT(4);
    declare _recount TINYINT(4);
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default 'N';
    declare _error INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;

    END;


    START TRANSACTION;

    SELECT Id,Level,POrderId,(AddQty+FactualQty) AS Qty FROM cg1_stocksheet WHERE StockId=IN_StockId INTO _sId,_sLevel,_POrderId,_FactualQty;

    SELECT max(Id) AS Id FROM cg1_stocksheet WHERE POrderId=_POrderId INTO _maxId;

    SET _maxLevel=CONVERT(getSysConfig(105),signed);

    SET _sign=0;

    IF LENGTH(_POrderId)>0 AND  _FactualQty>0 THEN
      SET _Level=_sLevel;
      loop_label: LOOP
            IF _sign=0 THEN
                CALL proc_cg1_semifinished_reset(_POrderId,_sId,_Level,_sign,IN_Operator,_runCounts,_error);
                SET _sign=1;
             ELSE
                CALL proc_cg1_semifinished_reset(_POrderId,_maxId,_Level,_sign,IN_Operator,_runCounts,_error);
            END IF;
              IF _runCounts=0 OR _Level>=_maxLevel OR _error=1 THEN
                 LEAVE loop_label;
              END IF;
              SET _Level=_Level+1;
     END LOOP;

     IF _Level>_sLevel AND _error=0 THEN

            CALL proc_yw1_scsheet_add(_POrderId,_sId,IN_Operator,_error);

            CALL proc_cg1_stocksheet_automain(_POrderId,IN_Operator);
     END IF;
   END IF;

   IF LENGTH(_POrderId)>0 THEN
     SET _recount = setOrderCostPrice(_POrderId);
   END IF;

    IF _error=1 THEN
            ROLLBACK;
            set _log = CONCAT("－半成品需求单:",IN_StockId,"重置失败！");
        ELSE

             COMMIT;
            set _log = CONCAT("－半成品需求单:",IN_StockId,"重置成功！");
            set _OperationResult='Y';
     END IF;

   INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'需求单重置','保存',IN_Operator,_log,_OperationResult);

   SELECT _OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_resetqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_resetqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_resetqty`(IN `IN_Id` INT(11), IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _sId INT(11);
    declare _POrderId VARCHAR(12);
    declare _StockId VARCHAR(15);
    declare _StuffId MIDDLEINT(9);
    declare _OrderQty  decimal(11,2);
    declare _StockQty  decimal(11,2);
    declare _AddQty  decimal(11,2);
    declare _FactualQty  decimal(11,2);
    declare _oStockQty  decimal(11,2);
    declare _cgSign TINYINT(4);

    declare _oStockQty1  decimal(11,2);
    declare _semiSign MIDDLEINT(5);

    declare _sign TINYINT(4);
    declare _log TEXT default '';
    declare _sLog varchar(20000) default '';

    declare _StockQty2  decimal(11,2);
    declare _FactualQty2  decimal(11,2);

    declare _OperationResult VARCHAR(4) default 'N';
    declare _error INTEGER DEFAULT 0;
    declare _sError INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;

    END;


    START TRANSACTION;

    IF IN_Id>0 THEN
         SELECT Id,StockId,POrderId,StuffId,OrderQty,StockQty,AddQty,FactualQty,cgSign FROM cg1_stocksheet WHERE Id=IN_Id INTO _sId,_StockId,_POrderId,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign;
      ELSE

         SELECT Id,StockId,POrderId,StuffId,OrderQty,StockQty,AddQty,FactualQty,cgSign FROM cg1_stocksheet WHERE StockId=IN_StockId INTO _sId,_StockId,_POrderId,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_cgSign;
    END IF;

    SELECT (oStockQty-mStockQty) AS oStockQty FROM ck9_stocksheet WHERE StuffId=_StuffId INTO _oStockQty;




IF _oStockQty>0 THEN
    IF _AddQty>0 THEN
       IF _oStockQty<=_AddQty THEN
            SET _AddQty=_AddQty-_oStockQty;
            SET _log = CONCAT("情况1-分析完成：库存不足 需更新增购和可用库存<br>");
         ELSE
            SET _oStockQty1=_oStockQty-_AddQty;
            SET _AddQty=0;
            IF _oStockQty1>_FactualQty THEN
                 SET _StockQty=_OrderQty;
                 SET _FactualQty=0;
                 SET _log = CONCAT("情况2-分析完成:库存充足	需更新增购、需购数量、使用库存数量和可用库存数量<br>");
              ELSE
                 SET _FactualQty=_FactualQty-_oStockQty1;
                 IF _OrderQty>0 AND _StockQty>0 THEN
                    SET _StockQty=_OrderQty-_FactualQty;
                 END IF;
                 SET _log = CONCAT("情况3-分析完成:库存不足	需更新增购、需购数量、使用库存数量和可用库存数量<br>");
            END IF;
       END IF;
    ELSE
        IF  _oStockQty>=_FactualQty THEN
            SET _StockQty=_OrderQty;
            SET _FactualQty=0;
            SET _log = CONCAT("情况4-分析完成:库存充足	需更新增购、需购数量、使用库存数量和可用库存数量<br>");
        ELSE
            SET _FactualQty=_FactualQty-_oStockQty;
            IF _OrderQty>0  THEN
                    SET _StockQty=_OrderQty-_FactualQty;
            END IF;
            SET _log = CONCAT("情况5-分析完成:库存不足	需更新增购、需购数量、使用库存数量和可用库存数量<br>");
        END IF;
    END IF;

    SELECT COUNT(1) AS Counts FROM  cg1_semifinished WHERE mStockId=_StockId  INTO _semiSign;


    IF  _OrderQty=0 AND _FactualQty<=0  THEN
        IF _semiSign=0 THEN
            DELETE FROM cg1_stocksheet WHERE Id=_sId;
         ELSE
            CALL proc_cg1_semifinished_delete(_StockId,IN_Operator,_sError,_sLog);
            SET _log = CONCAT(_log,_sLog,"<br>");
            IF _sError=0 THEN
               DELETE FROM cg1_stocksheet WHERE Id=_sId;
               DELETE FROM cg1_semifinished WHERE mStockId=_StockId;
             ELSE
               SET _error=_sError;
           END IF;
        END IF;
    ELSE
       UPDATE cg1_stocksheet SET StockQty=_StockQty,AddQty=_AddQty,FactualQty=_FactualQty WHERE Id=_sId;
       IF _semiSign>0 THEN


           IF _FactualQty>0 THEN

              CALL proc_cg1_semifinished_resetqty(_StockId,IN_Operator,_sError,_sLog);
           ELSE
              CALL proc_cg1_semifinished_delete(_StockId,IN_Operator,_sError,_sLog);
           END IF;
           SET _log = CONCAT(_log,_sLog,"<br>");
           SET _error=_sError;
       END IF;
   END IF;
 ELSE
     SET _log = CONCAT("情况6-分析完成:采购单没有可用库存,无须重置.<br>");
     SET _error=1;
END IF;
    IF _error=1 THEN
            ROLLBACK;
            SET  _log = CONCAT("采购单:",_StockId,"重置失败！<br>",_log);
        ELSE

            COMMIT;
            SET  _log = CONCAT("采购单:",_StockId,"重置成功！<br>",_log);
            SET  _OperationResult='Y';
     END IF;

   SELECT _OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stocksheet_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stocksheet_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stocksheet_updated`(IN `IN_Id` INT(10), IN `IN_FactualQty` decimal(11,2), IN `IN_AddQty` decimal(11,2), IN `IN_Price` decimal(12,2), IN `IN_BuyerId` MEDIUMINT(9), IN `IN_CompanyId` MEDIUMINT(9), IN `IN_AddRemark` VARCHAR(2000), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


    declare _POrderId VARCHAR(12);
    declare _StuffId  MEDIUMINT(9);
    declare _Price decimal(12,2);
    declare _CostPrice decimal(12,2);
    declare _AddQty decimal(11,2);
    declare _FactualQty decimal(11,2);
    declare _oStockQty decimal(11,2);
    declare _BuyerId MEDIUMINT(9);
    declare _CompanyId MEDIUMINT(9);
    declare _StockId VARCHAR(15);
    declare _cgSign TINYINT(4);
    declare _semiCount INT(6);


    declare _sLog varchar(20000) default '';
    declare _done int default -1;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    declare _sError INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION

    BEGIN

      SET _error=1;

      SHOW ERRORS;

    END;



    START TRANSACTION;


        SELECT S.StockId,S.POrderId,S.StuffId,S.AddQty,S.FactualQty,S.Price,S.CostPrice,S.cgSign,K.oStockQty
		FROM cg1_stocksheet S
		LEFT JOIN ck9_stocksheet K ON K.StuffId=S.StuffId  WHERE S.Id=IN_Id  INTO _StockId,_POrderId,_StuffId,_AddQty,_FactualQty,_Price,_CostPrice,_cgSign,_oStockQty ;

        SELECT  COUNT(Id) AS semiCount FROM cg1_semifinished  WHERE  mStockId = _StockId INTO _semiCount;

        IF  _semiCount>0  AND _Price>0 THEN

              SET _CostPrice = (IN_Price*_CostPrice)/_Price;


        END IF ;


        IF _cgSign >0  THEN

           UPDATE cg1_stocksheet S SET S.AddRemark=IN_AddRemark,S.FactualQty=IN_FactualQty,S.Price=IN_Price,S.CostPrice=_CostPrice,S.BuyerId=IN_BuyerId,S.CompanyId=IN_CompanyId,S.Estate='1',S.Locks='1',S.modified= NOW(),S.modifier= IN_Operator WHERE S.Id=IN_Id;


           IF _semiCount>0  AND (IN_FactualQty>_FactualQty OR  IN_FactualQty < _FactualQty) AND IN_FactualQty>0  THEN


                CALL proc_cg1_semifinished_resetqty(_StockId,IN_Operator,_sError,_sLog);

                SET _error=_sError;
                SET _log = CONCAT(_log,_sLog,"<br>");

             END IF ;

        ELSE



             UPDATE cg1_stocksheet S SET S.AddRemark=IN_AddRemark,S.AddQty=IN_AddQty,S.Price=IN_Price,S.CostPrice=_CostPrice,S.BuyerId=IN_BuyerId,S.CompanyId=IN_CompanyId,S.Estate='1',S.Locks='1',S.modified= NOW(),S.modifier= IN_Operator WHERE S.Id=IN_Id;

             IF _semiCount>0  AND IN_AddQty>0 THEN

                CALL proc_cg1_semifinished_resetqty(_StockId,IN_Operator,_sError,_sLog);

                SET _error=_sError;

                SET _log = CONCAT(_log,_sLog,"<br>");

             END IF ;

        END IF ;


       IF _error = 0  THEN

           INSERT INTO cg1_stocksheet_log(StockId,Opcode,Estate,Locks,Date,Operator,creator,created) VALUES (_StockId,'3','1','1',CURDATE(),IN_Operator,IN_Operator,NOW());

       END IF ;


       IF _error=1 THEN

             ROLLBACK;

             set _log = CONCAT(_log,IN_Id,"－采购需求单更新",_StockId,"失败！");

        ELSE


             COMMIT;

             set _log = CONCAT(_log,IN_Id,"－采购需求单更新",_StockId,"成功！");

             set _OperationResult='Y';

        END IF;



      INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'需求单','更新',IN_Operator,_log,_OperationResult);

      SELECT _OperationResult AS OperationResult,_log AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stuffcombox_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stuffcombox_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stuffcombox_insert`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _POrderId VARCHAR(12);
    declare _StockId  VARCHAR(15);
    declare _mStuffId  MEDIUMINT(9);
    declare _StuffId  MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _RelationVal decimal(10,3);
    declare _StockQty MEDIUMINT(9);
    declare _AddQty MEDIUMINT(9);
    declare _OrderQty MEDIUMINT(9);
    declare _FactualQty MEDIUMINT(9);
    declare _position INT(9);

    declare _done int default -1;




    declare myCursor cursor for SELECT   S.StuffId,S.Relation,G.POrderId,S.mStuffId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty
				FROM  cg1_stocksheet G
				INNER JOIN stuffcombox_bom S ON S.mStuffId=G.StuffId
				WHERE G.StockId=IN_StockId  ORDER BY S.Id;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _StuffId,_Relation,_POrderId,_mStuffId,_OrderQty,_StockQty,_AddQty,_FactualQty;


        if _done = 1 then
            leave myLoop;
        end if;


        IF LENGTH(_StockId)>0 THEN
           SET _StockId=CONCAT(CONVERT(_StockId,signed)+1,'');
        ELSE
           SET _StockId=CONCAT(SUBSTR(IN_StockId,3),'01');
        END IF;




        SET _position=INSTR (_Relation ,'/');
        IF _position>0 THEN
          SET _RelationVal=SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);
        ELSE
          SET _RelationVal=_Relation;
        END IF;

        SET _OrderQty=CEIL(_OrderQty*_RelationVal);
        SET _AddQty=CEIL(_AddQty*_RelationVal);
        SET _StockQty=CEIL(_StockQty*_RelationVal);
        SET _FactualQty=CEIL(_FactualQty*_RelationVal);

         INSERT INTO cg1_stuffcombox (POrderId,mStockId,StockId,mStuffId,StuffId,Relation,OrderQty,StockQty,AddQty,FactualQty,Date,Operator)
		VALUES (_POrderId,IN_StockId,_StockId,_mStuffId,_StuffId,_Relation,_OrderQty,_StockQty,_AddQty,_FactualQty,CURDATE(),IN_Operator);





    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stuffcombox_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stuffcombox_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stuffcombox_updated`(IN `IN_StockId` VARCHAR(15), IN `IN_StuffId` MEDIUMINT(9), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    declare _Id VARCHAR(12);
    declare _Relation VARCHAR(15);
    declare _POrderId VARCHAR(12);
    declare _RelationVal decimal(10,3);
    declare _StockQty MEDIUMINT(9);
    declare _AddQty MEDIUMINT(9);
    declare _OrderQty MEDIUMINT(9);
    declare _FactualQty MEDIUMINT(9);
    declare _position INT(9);

    declare _done int default -1;


    declare myCursor cursor for SELECT   S.Id,S.Relation,G.POrderId,G.OrderQty,G.StockQty,G.AddQty,G.FactualQty
				FROM  cg1_stocksheet G
				INNER JOIN cg1_stuffcombox S ON S.mStockId=G.StockId
				WHERE G.StockId=IN_StockId AND S.mStuffId=IN_StuffId ORDER BY S.Id;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_Relation,_POrderId,_OrderQty,_StockQty,_AddQty,_FactualQty;


        if _done = 1 then
            leave myLoop;
        end if;


        SELECT LOCATE('/',_Relation) INTO _position;
        IF _position>0 THEN
          SET _RelationVal=SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);
        ELSE
          SET _RelationVal=_Relation;
        END IF;

        SET _OrderQty=CEIL(_OrderQty*_RelationVal);
        SET _AddQty=CEIL(_AddQty*_RelationVal);
        SET _StockQty=CEIL(_StockQty*_RelationVal);
        SET _FactualQty=CEIL(_FactualQty*_RelationVal);

        UPDATE cg1_stuffcombox SET POrderId=_POrderId,OrderQty=_OrderQty,StockQty=_StockQty,AddQty=_AddQty,FactualQty=_FactualQty,modifier=IN_Operator,modified=NOW() WHERE Id=_Id;


    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg1_stuffunite_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg1_stuffunite_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg1_stuffunite_add`(IN `IN_POrderId` VARCHAR(12), IN `IN_StuffId` MEDIUMINT(9), IN `IN_Unite` VARCHAR(1000), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _ProductId INT(9);
    declare _StuffId  MEDIUMINT(9);
    declare _uStuffId  MEDIUMINT(9);
    declare _ulen INT(9);
    declare j INT DEFAULT 1;

    declare _done int default -1;

    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
      SHOW ERRORS;
    END;


    START TRANSACTION;

      SELECT ProductId FROM yw1_ordersheet WHERE POrderId=IN_POrderId  LIMIT 1 INTO _ProductId;

      IF LENGTH(IN_Unite)>0 THEN
            SET _ulen=substrCount(IN_Unite,',')+1;
            SET j=1;
            uniteWhile:WHILE(j<=_ulen) DO
                SET _uStuffId=strSplit(IN_Unite,',',j);
                INSERT INTO cg1_stuffunite (POrderId,ProductId,StuffId,uStuffId,Relation,Date,Operator) VALUES(IN_POrderId,_ProductId,IN_StuffId,_uStuffId,1,CURDATE(),IN_Operator);
                SET j=j+1;
            END WHILE;
     END IF;

    IF _error=1 THEN
            ROLLBACK;
        ELSE

             COMMIT;
            set _OperationResult='Y';
    END IF;

   SELECT _OperationResult AS OperationResult;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_cg_orderqty_calculate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_cg_orderqty_calculate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_cg_orderqty_calculate`(IN `_StuffId` MEDIUMINT(9), IN `_OrderQty` decimal(11,2), OUT `_StockQty` decimal(11,2), OUT `_FactualQty` decimal(11,2), OUT `_error` INT)
    SQL SECURITY INVOKER
BEGIN

    declare _oStockQty decimal(11,2) DEFAULT 0;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

    SET _error=0;
    SET _StockQty=0;
    SET _FactualQty=0;

    SELECT (oStockQty-mStockQty) AS oStockQty FROM  ck9_stocksheet WHERE StuffId=_StuffId LIMIT 1 INTO _oStockQty;

    IF _oStockQty<=0 OR _oStockQty IS NULL THEN
         SET  _StockQty=0;
         SET  _FactualQty=_OrderQty;
     ELSE
         IF _oStockQty<_OrderQty THEN
             SET  _StockQty=_oStockQty;
             SET  _FactualQty=_OrderQty-_oStockQty;
           ELSE
               SET _StockQty=_OrderQty;
               SET _FactualQty=0;
          END IF;
    END IF;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck1_rksheet_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck1_rksheet_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck1_rksheet_insert`(IN `IN_StockId` VARCHAR(15), IN `IN_StuffId` MEDIUMINT(9), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

   declare _mStuffId  MEDIUMINT(9);
   declare _mStockId  VARCHAR(15);
   declare _oStockQty  MEDIUMINT(9);
   declare _tStockQty  MEDIUMINT(9);
   declare _Qty  MEDIUMINT(9);
   declare _Id  INT(11);

   SELECT mStuffId FROM stuffcombox_bom WHERE StuffId=IN_StuffId LIMIT 1 INTO _mStuffId;

   IF _mStuffId>0 AND _mStuffId IS NOT NULL THEN
       SELECT MIN(ROUND(A.oStockQty/A.Relation)) AS oStockQty,MIN(ROUND(A.tStockQty/A.Relation)) AS tStockQty
	                   FROM (
									SELECT S.Relation,K.oStockQty,K.tStockQty
									FROM  stuffcombox_bom S
									LEFT JOIN ck9_stocksheet K ON K.StuffId=S.StuffId
									WHERE S.mStuffId=_mStuffId
					  )A  INTO _oStockQty,_tStockQty;

        UPDATE ck9_stocksheet SET oStockQty=_oStockQty,tStockQty=_StockQty WHERE StuffId=_mStuffId;
   END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck1_rksheet_lldelete
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck1_rksheet_lldelete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck1_rksheet_lldelete`(IN `IN_StockId` VARCHAR(15), INOUT `IN_Mid` INT(11), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _Counts TINYINT(4);
     DECLARE _Id  INT(11);
     DECLARE _Qty decimal(11,2);
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;

       END;

     SELECT COUNT(*) AS Counts,SUM(Qty) AS Qty,MAX(Id) AS maxId FROM ck5_llsheet WHERE StockId=IN_StockId INTO _Counts,_Qty,_Id;

     IF _Counts>0  THEN
        UPDATE ck5_llsheet SET POrderId='',sPOrderId='',Type=4,FromFunction=CONCAT('删除订单(',POrderId,')的已领料单') WHERE StockId=IN_StockId;

      IF _Qty>0 THEN
        IF IN_Mid<=0 THEN
             INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate, creator, created)
                                   VALUES('删单转入库','0','删除已领料订单转入的入库记录','0',CURDATE(),IN_Operator,NOW(),'0',IN_Operator,NOW());
             SET IN_Mid = LAST_INSERT_ID();
        END IF;

        INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId, FromFunction, Locks, Estate , creator, created, `Date`, Operator)
                            SELECT IN_Mid,'','',StuffId,Price,_Qty,'0','1','0','4',Id,'删单入库','0','1',IN_Operator,NOW(),CURDATE(),IN_Operator FROM ck5_llsheet WHERE StockId=IN_StockId AND Id=_Id;
      END IF;
   END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck1_rksheet_location_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck1_rksheet_location_save`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck1_rksheet_location_save`(IN `IN_Id` INT(11), IN `IN_Qty` decimal(11,2), IN `IN_FrameCounts` MEDIUMINT(6), IN `IN_LocationId` INT(11), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _SendSign  INT(4);
     DECLARE _CompanyId  MEDIUMINT(9);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _sPOrderId VARCHAR(13);
     DECLARE _StockId  VARCHAR(15);
     DECLARE _shQty  decimal(11,2);
     DECLARE _rkQty  decimal(11,2);
     DECLARE _rkedQty  decimal(11,2);
     DECLARE _cgQty  decimal(11,2);
     DECLARE _rkSign TINYINT(4);

     DECLARE _Price decimal(11,2);
     DECLARE _Mid  INT(11);
     DECLARE _BillNumber  VARCHAR(100);
     DECLARE _NewBillNumber  VARCHAR(100);
     DECLARE _RkMid INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _BpId  INT(11);
     DECLARE _BcId  INT(11);

     DECLARE _mStockId  VARCHAR(15);
     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinRkQty  decimal(11,2);
     DECLARE _mRkQty  decimal(11,2);

     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
        SET _error=1;

     END;

    SELECT S.SendSign,S.StuffId,S.StockId,S.sPOrderId,S.Qty,M.CompanyId,M.BillNumber
           FROM gys_shsheet S
           LEFT JOIN gys_shmain M ON M.Id=S.Mid  WHERE S.Id = IN_Id INTO  _SendSign, _StuffId, _StockId, _sPOrderId, _shQty, _CompanyId,_BillNumber;

    SET  _rkQty  = IN_Qty;
    SET _Price = 0.00;
    SET _OperationResult="N";

    START TRANSACTION;

    IF  _StuffId >0 THEN

        CASE _SendSign
           WHEN 0 THEN
               IF IN_FrameCounts>0 THEN
                     SELECT IFNULL(SUM(A.Qty),0) AS Qty FROM(SELECT Qty FROM qc_cjtj WHERE Sid=IN_Id AND Estate=1 ORDER BY Id LIMIT IN_FrameCounts) A INTO _rkQty;
               END IF;

               SELECT IFNULL(SUM(Qty),0) AS Qty FROM ck1_rksheet WHERE StockId=_StockId INTO _rkedQty;

               SELECT FactualQty+AddQty AS cgQty,CostPrice FROM cg1_stocksheet WHERE StockId=_StockId INTO _cgQty,_Price;

               IF _cgQty IS NULL THEN
                   SELECT (G.FactualQty+G.AddQty)*S.Relation AS cgQty FROM cg1_stuffcombox S INNER JOIN cg1_stocksheet G ON G.StockId=S.mStockId WHERE S.StockId=_StockId INTO _cgQty;
               END IF;



               IF _cgQty>=_rkQty+_rkedQty AND _rkQty>0 THEN
                   SELECT Id  FROM ck1_rkmain  WHERE  CompanyId =_CompanyId  AND Date = CURDATE()  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid;

                   IF  _RkMid IS NULL THEN
                        INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark,Estate, Locks, Date, Operator, rkDate,creator,created)
                                        VALUES(_BillNumber,_CompanyId,'采购单品检的入库记录','1','0',CURDATE(),IN_Operator,NOW(),IN_Operator,NOW());
                        SET  _RkMid  = LAST_INSERT_ID();
                   END IF;

                   IF _RkMid > 0 THEN
                       INSERT INTO ck1_rksheet(Mid, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id,LocationId,Type, FromId ,FromFunction, Locks, Estate ,PLocks, creator, created,Date, Operator)
                                 VALUES (_RkMid,_sPOrderId,_StockId,_StuffId,_Price,_rkQty,'0','1',IN_Id,IN_LocationId,'1',IN_Id,'采购单品检入库','0','1','0',IN_Operator,NOW(),CURDATE(),IN_Operator);
                       SET _RkId= LAST_INSERT_ID();

                       IF  _RkId > 0 THEN
                           SET _OperationResult="Y";
                           IF IN_FrameCounts>0 THEN
                                UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1 ORDER BY Id Limit IN_FrameCounts;
                           ELSE
                                UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1;

                           END IF;

                           IF _cgQty>(_rkQty+_rkedQty) THEN
                                SET _rkSign=2;
                              ELSE
                                SET _rkSign=0;
                           END IF;

                           UPDATE cg1_stocksheet G  SET G.rkSign=_rkSign WHERE G.StockId = _StockId;

                       END IF;


                       SELECT  mStockId,mStuffId  FROM   cg1_stuffcombox  WHERE StockId =  _StockId  INTO _mStockId,_mStuffId;
                       IF   _mStuffId > 0  THEN
                                 SELECT MIN(A.rkQty) AS rkQty,A.CostPrice,A.cgQty
	                              FROM (
		                             SELECT G.CostPrice, IFNULL(SUM(K.Qty),0) AS rkQty,(G.FactualQty+G.AddQty) AS cgQty
		                             FROM cg1_stuffcombox  S
		                             LEFT JOIN cg1_stocksheet G ON G.StockId = S.mStockId
		                             LEFT JOIN ck1_rksheet  K ON K.StockId = S.StockId
		                             WHERE  S.mStockId=_mStockId GROUP BY S.StockId
                                  ) A  INTO  _MinRkQty,_mPrice,_cgQty;

                                  SELECT IFNULL(SUM(Qty),0) AS Qty FROM ck1_rksheet where StockId=_mStockId  INTO _mRkQty;

                                  IF  _MinRkQty > 0   THEN
                                         IF   _mRkQty = 0  THEN
                                               INSERT INTO ck1_rksheet(Mid, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId ,FromFunction, Locks, Estate , creator, created, Date, Operator)
                                               VALUES (_RkMid,_sPOrderId,_mStockId,_mStuffId,_mPrice,_MinRkQty,'0','1',IN_Id,'1',IN_Id,'采购单品检入库(母配件自动入库)','0','1',IN_Operator,NOW(),CURDATE(),IN_Operator);

                                               IF   LAST_INSERT_ID() = 0 THEN
                                                   SET _error = 1;
                                               END IF ;
                                         END IF;

                                         IF  _mRkQty > 0  AND  _MinRkQty > _mRkQty  THEN
                                                UPDATE  ck1_rksheet SET Qty=_MinRkQty,llSign = 1  WHERE StockId = _mStockId;
                                         END IF;

                                         IF  _cgQty>(_rkQty+_rkedQty) THEN
                                             SET _rkSign=2;
                                         ELSE
                                            SET _rkSign=0;
                                        END IF;
                                        UPDATE cg1_stocksheet G  SET G.rkSign=_rkSign WHERE G.StockId = _StockId;
                                  END IF;
                          END IF;
                   END IF;
                ELSE
                   IF _cgQty=_rkedQty  THEN
                         IF IN_FrameCounts>0 THEN
                                UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1 ORDER BY Id Limit IN_FrameCounts;
                           ELSE
                                UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1;

                           END IF;
                          SET _OperationResult="Y";
                   END IF;
             END IF;

           WHEN 1 THEN
                   SELECT Id  FROM ck3_bcmain  WHERE  CompanyId =_CompanyId  AND Date = CURDATE()  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _Mid;

                   IF  _Mid IS NULL THEN
                         INSERT INTO ck3_bcmain  (BillNumber,CompanyId,Locks,Date,Operator,Estate,PLocks, creator, created)
                                          VALUES (_BillNumber,_CompanyId,'0',CURDATE(),IN_Operator,'1','0',IN_Operator,NOW());
                         SET  _Mid  = LAST_INSERT_ID();
                   END IF;

                   IF _Mid > 0 THEN
                        IF IN_FrameCounts>0 THEN
                                   SELECT IFNULL(SUM(A.Qty),0) AS Qty FROM(SELECT Qty FROM qc_cjtj WHERE Sid=IN_Id AND Estate=1 ORDER BY Id LIMIT IN_FrameCounts)A INTO _rkQty;
                         END IF;

                        INSERT INTO ck3_bcsheet(Mid, StuffId, Qty, Remark, RkId, Locks, Estate, PLocks, creator, created,  Date, Operator)
                                        VALUES (_Mid,_StuffId,_rkQty,'','0','0','1','0',IN_Operator,NOW(),CURDATE(),IN_Operator);
                        SET _BcId = LAST_INSERT_ID();

                        SELECT Id  FROM ck1_rkmain  WHERE  CompanyId =_CompanyId  AND Date = CURDATE()  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid;

                        IF  _RkMid IS NULL THEN
                            INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, Date, Operator, rkDate, Estate,PLocks, creator, created)
                                            VALUES(_BillNumber,_CompanyId,'采购单品检的入库记录','0',CURDATE(),IN_Operator,NOW(),'1','0',IN_Operator,NOW());
                            SET  _RkMid  = LAST_INSERT_ID();
                        END IF;

                        IF _BcId>0 AND _RkMid>0 THEN

                             SELECT CostPrice FROM stuffdata WHERE StuffId=_StuffId INTO _Price;

                             INSERT INTO ck1_rksheet(Mid, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, LocationId,Type, FromId,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, Date, Operator)
                                 VALUES (_RkMid,'','',_StuffId,_Price,_rkQty,'0','1',IN_Id,IN_LocationId,'3',_BcId,'补仓入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                            SET _RkId= LAST_INSERT_ID();

                           IF  _RkId > 0 THEN
                                SET _OperationResult="Y";
                                UPDATE  ck3_bcsheet  SET RkId = _RkId  WHERE Id = _BcId;
                                IF IN_FrameCounts>0 THEN
                                      UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1 ORDER BY Id Limit IN_FrameCounts;
                                ELSE
                                      UPDATE  qc_cjtj SET Estate=0 WHERE Sid=IN_Id AND Estate=1;

                                END IF;
                          END IF;
                   END IF;
              END IF;

         WHEN 2 THEN
                  SELECT Id  FROM ck11_bpmain  WHERE  CompanyId =_CompanyId  AND Date = CURDATE()  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _Mid;

                   IF  _Mid IS NULL THEN
                         INSERT INTO ck11_bpmain  (BillNumber,CompanyId,Estate,Locks,Date,Operator,creator,created)
                                           VALUES (_BillNumber,_CompanyId,'1','0',CURDATE(),IN_Operator,IN_Operator,NOW());
                         SET  _Mid  = LAST_INSERT_ID();
                   END IF;

                   IF _Mid > 0 THEN
                        INSERT INTO ck11_bpsheet(Mid, StuffId, Qty, Remark, Locks, Estate, creator, created, Date, Operator)
                                 VALUES (_Mid,_StuffId,_rkQty,'','0','1',IN_Operator,NOW(),CURDATE(),IN_Operator);
                        SET  _BpId  = LAST_INSERT_ID();

                        IF _BpId >0 THEN

                          SET _OperationResult="Y";
                       END IF ;
                   END IF;
    END CASE;
 END IF;


   IF _error = 1 OR _OperationResult="N" THEN
            ROLLBACK;
            SET _log = CONCAT("配件ID:",_StuffId,"品检入库失败！<br>",_log);
        ELSE

            COMMIT;
            SET _log = CONCAT("配件ID:",_StuffId,"品检入库成功！<br>",_log);
     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'来料品检入库','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck1_rksheet_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck1_rksheet_save`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck1_rksheet_save`(IN `IN_Id` INT(11), IN `IN_BadQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _SendSign  INT(4);
     DECLARE _CompanyId  MEDIUMINT(9);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _sPOrderId VARCHAR(13);
     DECLARE _StockId  VARCHAR(15);
     DECLARE _shQty  decimal(11,2);
     DECLARE _rkQty  decimal(11,2);

     DECLARE _Price decimal(11,2);
     DECLARE _Mid  INT(11);
     DECLARE _BillNumber  VARCHAR(100);
     DECLARE _NewBillNumber  VARCHAR(100);
     DECLARE _RkMid INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _BpId  INT(11);
     DECLARE _BcId  INT(11);


     DECLARE _mStockId  VARCHAR(15);
     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinRkQty  decimal(11,2);
     DECLARE _mRkQty  decimal(11,2);



     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
        SET _error=1;
        SHOW ERRORS;
     END;



    SELECT S.SendSign,S.StuffId,S.StockId,S.sPOrderId,S.Qty,M.CompanyId,M.BillNumber  FROM gys_shsheet S

    LEFT JOIN gys_shmain M ON M.Id=S.Mid  WHERE S.Id = IN_Id INTO  _SendSign, _StuffId, _StockId, _sPOrderId, _shQty, _CompanyId,_BillNumber ;

    SET  _rkQty  =  _shQty - IN_BadQty ;

    SET _Price = 0.00;

    SELECT  Price   FROM   cg1_stocksheet  WHERE  StockId  = _StockId  INTO  _Price;


    START TRANSACTION;

    IF  _StuffId >0 THEN


        IF  _SendSign = 0  THEN

              SELECT Id,BillNumber  FROM ck1_rkmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid , _NewBillNumber;

              IF  _RkMid >0 THEN

                   SET _BillNumber  =  _NewBillNumber;

              ELSE

                  INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate,PLocks, creator, created, modifier, modified)VALUES(_BillNumber,_CompanyId,'采购单品检的入库记录','0',DATE(NOW()),IN_Operator,NOW(),'1','0',IN_Operator,NOW(),IN_Operator,NOW());

                  SET  _RkMid  = LAST_INSERT_ID();

              END IF;


              IF _RkMid > 0 THEN

                     INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId ,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                                 VALUES (_RkMid,_sPOrderId,_StockId,_StuffId,_Price,_rkQty,'0','1',IN_Id,'1',IN_Id,'采购单品检入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                     SET _RkId= LAST_INSERT_ID();

                     IF  _RkId > 0 THEN


                         UPDATE  gys_shsheet S  SET S.Estate=0,S.Locks=0  WHERE  S.Id = IN_Id;

                         UPDATE cg1_stocksheet G
                                SET G.rkSign=(CASE
                                         WHEN  G.FactualQty+G.AddQty>( SELECT IFNULL(SUM(R.Qty),0) AS Qty  FROM ck1_rksheet R  WHERE R.StockId = _StockId )
                                         THEN 2
                                         ELSE 0
                                         END) WHERE G.StockId = _StockId;



                          SELECT  mStockId,mStuffId  FROM   cg1_stuffcombox  WHERE StockId =  _StockId  INTO _mStockId,_mStuffId;



                          IF   _mStockId > 0  THEN

                                 SELECT MIN(A.rkQty) AS rkQty,A.Price
	                              FROM (
		                             SELECT G.Price, IFNULL(SUM(K.Qty),0) AS rkQty
		                             FROM cg1_stuffcombox  S
		                             LEFT JOIN cg1_stocksheet G ON G.StockId = S.mStockId
		                             LEFT JOIN ck1_rksheet  K ON K.StockId = S.StockId
		                             WHERE  S.mStockId=_mStockId GROUP BY S.StockId
                                  ) A  INTO  _MinRkQty,_mPrice;


                                  SELECT IFNULL(SUM(Qty),0) AS Qty FROM ck1_rksheet where StockId=_mStockId  INTO _mRkQty;


                                  IF  _MinRkQty > 0   THEN

                                         IF   _mRkQty = 0  THEN

                                               INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId ,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                                               VALUES (_RkMid,_sPOrderId,_mStockId,_mStuffId,_mPrice,_MinRkQty,'0','1',IN_Id,'1',IN_Id,'采购单品检入库(母配件自动入库)','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);



                                               IF   LAST_INSERT_ID() = 0 THEN

                                                  SET _error = 1;

                                               END IF ;


                                         END IF;


                                         IF  _mRkQty > 0  AND  _MinRkQty > _mRkQty  THEN

                                                UPDATE  ck1_rksheet SET Qty=_MinRkQty,llSign = 1  WHERE StockId = _mStockId;

                                         END IF ;


                                         UPDATE cg1_stocksheet G
                                                SET G.rkSign=(CASE
                                                              WHEN  G.FactualQty+G.AddQty>( SELECT IFNULL(SUM(R.Qty),0) AS Qty  FROM ck1_rksheet R  WHERE R.StockId = _mStockId )
                                                              THEN 2
                                                              ELSE 0
                                                              END
                                                 ) WHERE G.StockId = _mStockId;

                                  END IF ;

                          END IF ;

                    ELSE

                        SET  _error = 1;

                    END IF;
              ELSE

                    SET  _error = 1;

              END IF;

         END IF ;








        IF  _SendSign = 1  THEN


              SELECT Id,BillNumber  FROM ck3_bcmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _Mid , _NewBillNumber;

              IF  _Mid >0 THEN

                   SET _BillNumber  =  _NewBillNumber;

              ELSE
                  INSERT INTO ck3_bcmain  (BillNumber,CompanyId,Locks,Date,Operator,Estate,`PLocks`, `creator`, `created`, `modifier`, `modified`) VALUES (_BillNumber,_CompanyId,'0',NOW(),IN_Operator,'1','0',IN_Operator,NOW(),IN_Operator,NOW());

                  SET  _Mid  = LAST_INSERT_ID();


              END IF;


              IF _Mid >0  THEN

                    INSERT INTO ck3_bcsheet(`Mid`, `StuffId`, `Qty`, `Remark`, `RkId`, `Locks`, `Estate`, `PLocks`, `creator`, `created`, `modifier`, `modified`, `Date`, `Operator`) VALUES (_Mid,_StuffId,_rkQty,'','0','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);
                    SET _BcId = LAST_INSERT_ID();


                    SELECT M.Id FROM ck1_rksheet  S   INNER JOIN  ck1_rkmain  M  ON M.Id = S.Mid  WHERE M.CompanyId =_CompanyId AND DATE_FORMAT(M.rkDate,'%Y-%m-%d') = DATE(NOW()) AND S.Type = 3  GROUP BY M.Id  LIMIT 1 INTO _RkMid;


                    IF _RkMid = 0 OR  _RkMid =''  OR _RkMid IS NULL THEN

                       INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate,PLocks, creator, created, modifier, modified)VALUES('补仓入库',_CompanyId,'补仓的入库记录','0',DATE(NOW()),IN_Operator,NOW(),'1','0',IN_Operator,NOW(),IN_Operator,NOW());

                       SET _RkMid = LAST_INSERT_ID();

                    END IF;


                    IF _RkMid > 0  AND _BcId >0 THEN

                         INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                                 VALUES (_RkMid,'','',_StuffId,_Price,_rkQty,'0','1',IN_Id,'3',_BcId,'补仓入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                         SET _RkId= LAST_INSERT_ID();

                         IF  _RkId > 0 THEN

                             UPDATE  gys_shsheet S  SET S.Estate=0,S.Locks=0  WHERE  S.Id=IN_Id;

                             UPDATE  ck3_bcsheet  SET RkId = _RkId  WHERE Id = _BcId;

                        ELSE

                            SET  _error = 1;

                        END IF;
                   ELSE

                        SET  _error = 1;

                   END IF;

              END IF ;

         END IF ;




        IF  _SendSign = 2  THEN

             SELECT Id,BillNumber  FROM ck11_bpmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _Mid , _NewBillNumber;

              IF  _Mid >0 THEN

                   SET _BillNumber  =  _NewBillNumber;

              ELSE

                  INSERT INTO ck11_bpmain  (BillNumber,CompanyId,Locks,Date,Operator,Estate) VALUES (_BillNumber,_CompanyId,'0',NOW(),IN_Operator,'1');

                  SET  _Mid  = LAST_INSERT_ID();

              END IF;



              IF _Mid >0  THEN

                     INSERT INTO ck11_bpsheet(`Mid`, `StuffId`, `Qty`, `Remark`, `Locks`, `Estate`, `PLocks`, `creator`, `created`, `modifier`, `modified`, `Date`, `Operator`)
                                 VALUES (_Mid,_StuffId,_rkQty,'','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);
                     SET  _BpId  = LAST_INSERT_ID();

                     IF _BpId >0 THEN

                          UPDATE  gys_shsheet S  SET S.Estate=0,S.Locks=0  WHERE  S.Id=IN_Id;

                     ELSE

                          SET  _error = 1;

                     END IF ;
              ELSE

                SET  _error = 1;

              END IF ;


         END IF ;


   END IF ;



   IF _error = 1 THEN

            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"品检入库失败！<br>",_log);

        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"品检入库成功！<br>",_log);

     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'来料品检入库','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck2_thsheet_updatedestate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck2_thsheet_updatedestate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck2_thsheet_updatedestate`(IN `IN_Id` INT(10), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN



     DECLARE _RkId  INT(11);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _CompanyId  MEDIUMINT(9);
     DECLARE _thQty  decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);

     DECLARE _llId  INT(11);

     DECLARE _Price  decimal(10,3);
     DECLARE _updateSign TINYINT(3);


     DECLARE _cgdId  INT(11);
     DECLARE _cgdQty decimal(11,2);
     DECLARE _cdgAutoSign  INT(4);
     DECLARE _autoSign  INT(4);
     DECLARE _targetQty decimal(11,2);


     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;



     DECLARE myCursor CURSOR FOR SELECT  Id, (Qty - llQty) AS lastQty,Price  FROM ck1_rksheet  WHERE StuffId IN (SELECT StuffId FROM ck2_thsheet WHERE Id = IN_Id ) AND llQty<Qty AND llSign >0 ORDER BY Id ASC;

     DECLARE myCursor2  CURSOR FOR  SELECT Id,Qty,AutoSign FROM cw1_fkoutsheet  WHERE StuffId IN (SELECT StuffId FROM ck2_thsheet WHERE Id = IN_Id ) AND AutoSign IN  ('2','4') And Estate = '3' ORDER BY OPdatetime DESC;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
        SET _error=1;
        SHOW ERRORS;
     END;

     DECLARE CONTINUE HANDLER FOR NOT FOUND set _done=1;


     SET _RkId = 0 ,_updateSign = 0 ,_llId = 0;



     SELECT M.CompanyId,S.StuffId,S.Qty
			                FROM ck2_thsheet S
			                LEFT JOIN ck9_stocksheet K ON K.StuffId = S.StuffId
							LEFT JOIN ck2_thmain M ON S.Mid=M.Id
							WHERE  S.Id=IN_Id AND K.tStockQty >= S.Qty AND S.Estate>0  INTO _CompanyId,_StuffId,_thQty;



    START TRANSACTION;

    IF IN_Id >0 AND _thQty>0 THEN

        UPDATE  ck2_thsheet  SET Estate = 0  WHERE Id = IN_Id AND Estate>0;
        SET _updateSign = ROW_COUNT();

     END IF;


     IF _updateSign >0 THEN


           OPEN myCursor;

           myLoop: LOOP


             FETCH myCursor INTO _RkId,_lastQty,_Price;


             IF _lastQty = 0 OR _lastQty = '' THEN
                SET _done = 1;
             END IF;


             IF _done = 1  THEN
                   LEAVE myLoop;
             END IF;

             SET _llId = 0;

             IF _lastQty > _thQty  AND _thQty>0 THEN


                 SET _llQty = _thQty ;

                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_StuffId,_Price,_llQty,'0','3',IN_Id,'物料退货领料',_rkId,'0','1',NOW(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW(),IN_Operator,NOW());

                 SET _llId = LAST_INSERT_ID();

                  IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign=2  WHERE Id = _rkId;

                     SET _done = 1;

                     SET  _thQty = _thQty-_llQty;

                   ELSE

                      SET _error = 1;

                 END IF;

              ELSE

                 SET _llQty = _lastQty ;

                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_StuffId,_Price,_llQty,'0','3',IN_Id,'物料退货领料',_rkId,'0','1',NOW(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW(),IN_Operator,NOW());
                 SET _llId = LAST_INSERT_ID();

                 IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign = 0  WHERE Id = _rkId;

                     SET  _thQty = _thQty - _llQty;

                 ELSE

                     SET _error = 1;

                 END IF;

              END IF;


           END LOOP  myLoop;

           IF  _thQty >0  THEN

              SET _error = 1;

           END IF;



           CLOSE myCursor;


           SET  _targetQty = _thQty;

           OPEN myCursor2;

           myLoop2: LOOP


             FETCH myCursor2 INTO _cgdId,_cgdQty,_cdgAutoSign;

             IF _cgdQty = 0 OR _cgdQty = '' THEN
                SET _done = 1;
             END IF;


             IF _done = 1  THEN
                   LEAVE myLoop2;
             END IF;

             IF  _targetQty>=_cgdQty THEN

                 SET _autoSign = _cdgAutoSign - 1;

                 Update cw1_fkoutsheet Set Estate = '2', AutoSign = _autoSign Where Id = _cgdId;

                 SET _targetQty = _targetQty-_cgdQty;

                 IF  _targetQty <= 0 THEN

                     SET _done = 1;

                 END IF ;

             END IF ;


           END LOOP  myLoop2;


           CLOSE myCursor2;

     END IF ;


    IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"退料审核失败！<br>",_log);
        ELSE
            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"退料审核成功！<br>",_log);
     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'物料退货','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;



END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck3_bcsheet_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck3_bcsheet_save`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck3_bcsheet_save`(IN `IN_BillNumber` VARCHAR(50), IN `IN_CompanyId` MEDIUMINT(9), IN `IN_StuffId` MEDIUMINT(9), IN `IN_Qty` decimal(11,2), IN `IN_Remark` VARCHAR(200), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN



     DECLARE _Price DECIMAL(11,2);
     DECLARE _Mid  INT(11);

     DECLARE _RkMid INT(11);
     DECLARE _RkId  INT(11);

     DECLARE _BcId  INT(11);

     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
        SET _error=1;
        SHOW ERRORS;
     END;

     SET _Price = 0.00;

          SELECT Id  FROM ck3_bcmain  WHERE  CompanyId =IN_CompanyId   AND  BillNumber=IN_BillNumber  LIMIT 1 INTO _Mid ;

          IF  _Mid = 0 OR _Mid IS NULL THEN


             INSERT INTO ck3_bcmain  (BillNumber,CompanyId,Locks,Date,Operator,Estate,`PLocks`, `creator`, `created`, `modifier`, `modified`)
                              VALUES (IN_BillNumber,IN_CompanyId,'0',NOW(),IN_Operator,'1','0',IN_Operator,NOW(),IN_Operator,NOW());

             SET  _Mid  = LAST_INSERT_ID();


         END IF;



         IF _Mid >0  THEN

               INSERT INTO ck3_bcsheet(`Mid`, `StuffId`, `Qty`, `Remark`, `RkId`, `Locks`, `Estate`, `PLocks`, `creator`, `created`, `modifier`, `modified`, `Date`, `Operator`)
                               VALUES (_Mid,IN_StuffId,IN_Qty,'','0','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

               SET _BcId = LAST_INSERT_ID();


               SELECT M.Id FROM ck1_rksheet  S   INNER JOIN  ck1_rkmain  M  ON M.Id = S.Mid  WHERE M.CompanyId = IN_CompanyId AND DATE_FORMAT(M.rkDate,'%Y-%m-%d') = DATE(NOW()) AND S.Type = 3  GROUP BY M.Id  LIMIT 1 INTO _RkMid;


               IF _RkMid = 0 OR  _RkMid =''  OR _RkMid IS NULL THEN

                 INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate,PLocks, creator, created, modifier, modified)
                                 VALUES('补仓入库',IN_CompanyId,'补仓的入库记录','0',DATE(NOW()),IN_Operator,NOW(),'1','0',IN_Operator,NOW(),IN_Operator,NOW());

                  SET _RkMid = LAST_INSERT_ID();

               END IF;


              IF _RkMid > 0  AND _BcId >0 THEN

                   INSERT INTO ck1_rksheet(Mid, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                                 VALUES (_RkMid,'','',IN_StuffId,_Price,IN_Qty,'0','1',_BcId,'3',_BcId,'补仓入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                   SET _RkId= LAST_INSERT_ID();

                   IF  _RkId > 0 THEN

                       UPDATE  ck3_bcsheet  SET RkId = _RkId  WHERE Id = _BcId;

                   ELSE

                       SET  _error = 1;

                   END IF;
             ELSE

                  SET  _error = 1;

             END IF;

        END IF ;


        IF _error = 1 THEN

            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"品检入库失败！<br>",_log);

        ELSE

            COMMIT;

            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"品检入库成功！<br>",_log);

        END IF;

        INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'来料品检入库','审核',IN_Operator,_log,_OperationResult);

        SELECT _OperationResult AS OperationResult,_log  AS OperationLog;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_combox_updateqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_combox_updateqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_combox_updateqty`(IN `IN_StockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _Qty MEDIUMINT(9);
    declare _llQty MEDIUMINT(9) DEFAULT 0;
    declare _changeQty MEDIUMINT(9) DEFAULT 0;
    declare _upSign TINYINT(4) DEFAULT 1;

    declare _StockId VARCHAR(15);
    declare _oldStockId VARCHAR(15) DEFAULT '';
    declare _OrderQty MEDIUMINT(9);

    declare _done int default -1;


    declare myCursor cursor for SELECT M.StockId,M.OrderQty,L.Id,L.Qty FROM cg1_stuffcombox M
								INNER JOIN ck5_llsheet L  ON M.StockId=L.StockId
								WHERE M.mStockId=IN_StockId  order by M.StockId,Qty;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _StockId,_OrderQty,_Id,_Qty;


        if _done = 1 then
            leave myLoop;
        end if;

        IF  _oldStockId!=_StockId THEN
            SET _oldStockId=_StockId;
            SET _llQty = 0;
            SET _upSign = 1;
        END IF;

        SET _llQty=_llQty+_Qty;

        IF (_llQty>_OrderQty AND _upSign=1) THEN
            SET _changeQty=_llQty-_OrderQty;

            UPDATE ck5_llsheet SET Qty=Qty-_changeQty   WHERE Id=_Id;
            SET _upSign=0;

          ELSE
            IF _upSign=0 THEN
                 DELETE FROM  ck5_llsheet WHERE Id=_Id;
            END IF;
        END IF;


    END LOOP  myLoop;


    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_save`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_save`(IN `IN_POrderId` VARCHAR(12), IN `IN_sPOrderId` VARCHAR(13), IN `IN_StockId` VARCHAR(15), IN `IN_StuffId` MEDIUMINT(9), IN `IN_llQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9), IN `IN_fromPage` VARCHAR(20))
    SQL SECURITY INVOKER
BEGIN

     DECLARE  _StuffId  MEDIUMINT(9);
     DECLARE _rkQty INT(10);
     DECLARE _Price decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);
     DECLARE _rkId INT(11);
     DECLARE _avePrice decimal(11,2);
     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;

    DECLARE  _tempSubStuffId MEDIUMINT(9);
    DECLARE  _comboxSign INT(4);

    DECLARE  _mStuffId  MEDIUMINT(9);
    DECLARE  _mStockId  VARCHAR(15);

    DECLARE  _subStockId  VARCHAR(15);
    DECLARE  _subStuffId  MEDIUMINT(9);
    DECLARE  _subRelation  INT(4);
    DECLARE  _subllQty  decimal(11,2);
    DECLARE  _sumllQty decimal(11,2);

     DECLARE myCursor CURSOR FOR SELECT  StockId,StuffId,Relation  FROM cg1_stuffcombox  WHERE mStockId = IN_StockId ;

     DECLARE CONTINUE HANDLER FOR  NOT FOUND set _done=1;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;
         SHOW ERRORS;
       END;
     START TRANSACTION;
     SET  _comboxSign  = 1 ;

     SELECT  StuffId FROM cg1_stuffcombox WHERE mStockId =  IN_StockId  LIMIT 1  INTO _tempSubStuffId ;

     SELECT  mStuffId FROM cg1_stuffcombox WHERE StockId =  IN_StockId  LIMIT 1  INTO _mStuffId ;

     IF  _tempSubStuffId IS NOT NULL AND  _tempSubStuffId >0  THEN

         SET  _comboxSign  = 0 ;

     END IF ;


     IF IN_llQty>0  THEN


        SET  _error = saveNewllQty(IN_POrderId,IN_sPOrderId,IN_StockId,IN_StuffId,IN_llQty,IN_Operator,IN_fromPage,_comboxSign);

     END IF ;








    IF  _tempSubStuffId IS NOT NULL AND  _tempSubStuffId >0  AND  _error = 0 THEN

         OPEN myCursor;

         myLoop: LOOP


         FETCH myCursor INTO _subStockId,_subStuffId,_subRelation;

         IF _subStockId = 0 OR _subStockId = '' THEN

            SET _done = 1;

         END IF;


         IF _done = 1  THEN
               LEAVE myLoop;
         END IF;

         SET _subllQty = IN_llQty * _subRelation;

         IF  _subllQty>0  THEN

            SET  _error = saveNewllQty(IN_POrderId,IN_sPOrderId,_subStockId,_subStuffId,_subllQty,IN_Operator,IN_fromPage,_comboxSign);

         END IF ;

        END LOOP  myLoop;


       CLOSE myCursor;

    END IF ;



    IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("工单号为:",IN_sPOrderId,"的配件ID:",IN_StuffId,"备料失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("工单号为:",IN_sPOrderId,"的配件ID:",IN_StuffId,"备料成功！<br>",_log);
    END IF;


     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'工单领料','更新',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_save_finished
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_save_finished`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_save_finished`(IN `IN_POrderId` VARCHAR(12), IN `IN_ProductId` MEDIUMINT(9), IN `IN_RkQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN


     DECLARE  _StockId   VARCHAR(15);
     DECLARE  _StuffId   MEDIUMINT(9);
     DECLARE  _OrderQty  decimal(11,2);
     DECLARE  _tStockQty  decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _TotalllQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);

     DECLARE _Price decimal(12,2);
     DECLARE _rkId INT(11);

     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;


     DECLARE myCursor CURSOR FOR SELECT G.StockId,G.StuffId,G.OrderQty ,K.tStockQty
                                 FROM cg1_stocksheet G
                                 LEFT JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
                                 WHERE G.POrderId=IN_POrderId AND G.Level =1 AND G.blSign = 1 ;


     DECLARE CONTINUE HANDLER FOR  NOT FOUND set _done=1;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;
         SHOW ERRORS;
       END;

     START TRANSACTION;


      OPEN myCursor;

         myLoop: LOOP


         FETCH myCursor INTO _StockId,_StuffId,_OrderQty,_tStockQty;



         SELECT IFNULL(SUM(Qty),0) AS llQty FROM ck5_llsheet WHERE StockId=_StockId  INTO _TotalllQty;

         IF  _tStockQty > (_OrderQty-_TotalllQty) THEN

             SET _llQty = _OrderQty - _TotalllQty;

          ELSE

               SET _llQty = _tStockQty;

          END IF ;

         IF _StockId = 0 OR _StockId = ''  THEN

            SET _done = 1;

         END IF;





         IF _done = 1  THEN
               LEAVE myLoop;
         END IF;


         IF  _llQty >0    THEN


            SET  _error = saveFinishedllQty(IN_POrderId,_StockId,_StuffId,_llQty,IN_Operator);


         END IF ;

        END LOOP  myLoop;


       CLOSE myCursor;


       IF _error =0  THEN

           SET  _error =  saveFinishedOrderIn(IN_POrderId,IN_RkQty,IN_Operator);


       END IF ;




     IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("订单流水号为:",IN_POrderId,"的成品ID:",IN_ProductId,"备料转成品仓库失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("订单流水号为:",IN_POrderId,"的成品ID:",IN_ProductId,"备料转成品仓库成功！<br>",_log);
      END IF;


     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'成品订单转成品仓备料','更新',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_split
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_split`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_split`(IN `IN_StockId` VARCHAR(15), IN `IN_OrderQty` MEDIUMINT(9), IN `IN_NewPOrderId` VARCHAR(12), IN `IN_NewStockId` VARCHAR(15), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _Qty MEDIUMINT(9);
    declare _llQty MEDIUMINT(9) DEFAULT 0;
    declare _changeQty MEDIUMINT(9) DEFAULT 0;
    declare _upSign TINYINT(4) DEFAULT 1;

    declare _StockId VARCHAR(15);
    declare _oldStockId VARCHAR(15);
    declare _newStockId VARCHAR(15);
    declare _OrderQty MEDIUMINT(9);
    declare _Relation VARCHAR(15);
    declare _RelationVal decimal(10,3);
    declare _position INT(9);

    declare _done int default -1;


    declare myCursor cursor for SELECT  Id,Qty FROM ck5_llsheet  WHERE StockId=IN_StockId;

    declare myCursor2 cursor for SELECT M.StockId,M.Relation,L.Id,L.Qty FROM cg1_stuffcombox M
								INNER JOIN ck5_llsheet L  ON M.StockId=L.StockId
								WHERE M.mStockId=IN_StockId  order by M.StockId,Qty;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_Qty;


        if _done = 1 then
            leave myLoop;
        end if;

        SET _llQty=_llQty+_Qty;

        IF (_llQty>IN_OrderQty AND _upSign=1) THEN
            SET _changeQty=_llQty-IN_OrderQty;

            UPDATE ck5_llsheet SET Qty=Qty-_changeQty   WHERE Id=_Id;

            INSERT INTO ck5_llsheet SELECT NULL,Pid,Mid,IN_NewPOrderId,IN_NewStockId,StuffId,_changeQty,Locks,Estate,'0',IN_Operator,NOW(),IN_Operator,NOW(),CURDATE(),IN_Operator FROM ck5_llsheet WHERE Id=_Id;
            SET _upSign=0;

          ELSEIF _upSign=0 THEN
             UPDATE ck5_llsheet SET POrderId=IN_NewPOrderId,StockId=IN_NewStockId   WHERE Id=_Id;
        END IF;


    END LOOP  myLoop;


    close myCursor;


    SET _done = 0;
    SET _llQty = 0;
    SET _upSign=1;

    open myCursor2;


    myLoop2: LOOP


        fetch myCursor2 into _StockId,_Relation,_Id,_Qty;


        if _done = 1 then
            leave myLoop2;
        end if;

        IF LENGTH(_oldStockId)<=0 OR _oldStockId!=_StockId THEN
            SET _oldStockId=_StockId;
            SELECT LOCATE('/',_Relation) INTO _position;
            IF _position>0 THEN
                SET _RelationVal=SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);
            ELSE
                SET _RelationVal=_Relation;
            END IF;
            SET _OrderQty=CEIL(IN_OrderQty*_RelationVal);
            SET _newStockId=CONCAT(substr(IN_NewStockId,2, 12),substr(_StockId,-2));
            SET _llQty = 0;
            SET _upSign = 1;
        END IF;

        SET _llQty=_llQty+_Qty;

        IF (_llQty>_OrderQty AND _upSign=1) THEN
            SET _changeQty=_llQty-_OrderQty;

            UPDATE ck5_llsheet SET Qty=Qty-_changeQty   WHERE Id=_Id;

            INSERT INTO ck5_llsheet SELECT NULL,Pid,Mid,0,_newStockId,StuffId,_changeQty,Locks,Estate,'0',IN_Operator,NOW(),IN_Operator,NOW(),CURDATE(),IN_Operator FROM ck5_llsheet WHERE Id=_Id;
            SET _upSign=0;

          ELSEIF _upSign=0 THEN
             UPDATE ck5_llsheet SET StockId=_newStockId   WHERE Id=_Id;
        END IF;


    END LOOP  myLoop2;


    close myCursor2;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_updated`(IN `IN_sPOrderId` VARCHAR(13), IN `IN_StuffId` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

   DECLARE _llQty decimal(11,2);
   DECLARE _blQty decimal(11,2);
   DECLARE _level TINYINT(4);
   DECLARE _relation DECIMAL(11,3);
   DECLARE _POrderId VARCHAR(12);
   DECLARE _mStockId VARCHAR(15);

   IF LENGTH(IN_sPOrderId)>0 THEN

       SELECT  POrderId,Level FROM yw1_scsheet WHERE sPOrderId = IN_sPOrderId INTO _POrderId,_level;

       SELECT SUM(Qty) AS llQty FROM ck5_llsheet WHERE sPOrderId=IN_sPOrderId  AND ComboxSign=0  INTO  _llQty;

       IF _level = 1 THEN

              SELECT   IFNULL(SUM(ROUND(G.OrderQty*(S.Qty/Y.Qty),1)),0) AS OrderQty
              FROM yw1_scsheet  S
              LEFT JOIN cg1_stocksheet  G ON G.POrderId = S.POrderId
              LEFT JOIN yw1_ordersheet  Y ON Y.POrderId = S.POrderId
              WHERE S.sPOrderId =  IN_sPOrderId  AND G.blSign = 1 AND G.`Level` =1  INTO _blQty;
       ELSE

              SELECT   S.Qty/(G.AddQty+G.FactualQty) AS Relation,S.mStockId
              FROM yw1_scsheet  S
              LEFT JOIN cg1_stocksheet  G ON G.StockId = S.mStockId  WHERE S.sPOrderId =  IN_sPOrderId  INTO _relation,_mStockId;
              SELECT   IFNULL(SUM(ROUND(OrderQty*_relation,1)),0) AS OrderQty  FROM cg1_semifinished  WHERE  POrderId=_POrderId AND mStockId = _mStockId    INTO  _blQty;

       END IF ;

       IF _llQty>0 AND _llQty=_blQty THEN

          UPDATE yw1_scsheet SET scFrom=2 WHERE sPOrderId=IN_sPOrderId;

       ELSE

          UPDATE yw1_scsheet SET scFrom=1 WHERE sPOrderId=IN_sPOrderId;

       END IF;
   END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck5_llsheet_updateqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck5_llsheet_updateqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck5_llsheet_updateqty`(IN `IN_sPOrderId` VARCHAR(13), IN `IN_Qty` MEDIUMINT(9), IN `IN_NewQty` MEDIUMINT(9), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _Qty MEDIUMINT(9);
    declare _llQty MEDIUMINT(9) DEFAULT 0;
    declare _changeQty MEDIUMINT(9) DEFAULT 0;
    declare _upSign TINYINT(4) DEFAULT 1;
    DECLARE _Decimals TINYINT(4);

    declare _StockId VARCHAR(15);
    declare _oldStockId VARCHAR(15) DEFAULT '';
    declare _newStockId VARCHAR(15);
    declare _OrderQty    decimal(11,2);
    declare _NewOrderQty decimal(11,2);

    declare _done int default -1;



    declare myCursor cursor for SELECT  L.Id,L.StockId,L.Qty,S.OrderQty,U.Decimals FROM ck5_llsheet L
                               LEFT JOIN cg1_stocksheet S ON S.StockId=L.StockId
                               LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
                               LEFT JOIN stuffunit U ON U.Id=D.Unit
                               WHERE L.sPOrderId=IN_sPOrderId AND S.Level=1;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_StockId,_Qty,_OrderQty,_Decimals;


        if _done = 1 then
            leave myLoop;
        end if;

        IF _oldStockId<>_StockId THEN
             SET _NewOrderQty=ROUND(IN_NewQty/IN_Qty*_OrderQty,_Decimals);
             SET _oldStockId=_StockId;
             SET _llQty=_Qty;
             SET _upSign=1;
        ELSE
           SET _llQty=_llQty+_Qty;
        END IF;

        IF (_llQty>_NewOrderQty AND _upSign=1) THEN
            SET _changeQty=_llQty-_NewOrderQty;

            UPDATE ck5_llsheet SET Qty=Qty-_changeQty  WHERE Id=_Id;

            CALL proc_ck5_llsheet_combox_updateqty(_StockId,IN_Operator);
            SET _upSign=0;

          ELSE
            IF _upSign=0 THEN
                DELETE FROM  ck5_llsheet WHERE Id=_Id;
            END IF;
        END IF;


    END LOOP  myLoop;


    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck7_bprk_updatedestate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck7_bprk_updatedestate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck7_bprk_updatedestate`(IN `IN_Id` INT(10), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN


     DECLARE _Mid  INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _Relation INT(4);
     DECLARE _rkQty  decimal(11,2);
     DECLARE _msumRkQty  decimal(11,2);
     DECLARE _Price  decimal(11,2);
     DECLARE _updateSign TINYINT(3);
     DECLARE _Property  INT(4);
     DECLARE _LocationId INT(10);


     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;

       END;


     SET _RkId = 0 , _Mid = 0 ,_Price = 0.00;
     SET _updateSign = 0 ;



     START TRANSACTION;

     IF IN_Id >0 THEN

        UPDATE  ck7_bprk  SET Estate = 0  WHERE Id = IN_Id;
        SET _updateSign = ROW_COUNT();

     END IF;


      IF _updateSign >0 THEN


           SELECT B.StuffId,B.Qty,B.Price,B.LocationId FROM ck7_bprk  B  INNER JOIN stuffdata D ON D.StuffId = B.StuffId  WHERE B.Id = IN_Id  INTO _StuffId,_rkQty,_Price,_LocationId;

           SELECT  Property   FROM stuffproperty  WHERE StuffId = _StuffId  AND Property = 10   INTO  _Property ;


           SELECT M.Id FROM ck1_rksheet  S
                       INNER JOIN  ck1_rkmain  M  ON M.Id = S.Mid
                       WHERE M.CompanyId = 0 AND DATE_FORMAT(M.rkDate,'%Y-%m-%d') = CURDATE() AND S.Type = 2  GROUP BY M.Id  LIMIT 1 INTO _Mid;

           IF _Mid = 0 OR _Mid IS NULL THEN

             INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate,PLocks, creator, created, modifier, modified)
                                   VALUES('备品转入','0','备品转入的入库记录','0',DATE(NOW()),IN_Operator,NOW(),'1','0',IN_Operator,NOW(),IN_Operator,NOW());
             SET _Mid = LAST_INSERT_ID();

           END IF;


           IF _Mid>0 THEN

                INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id,LocationId, Type, FromId, FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                            VALUES (_Mid,'','',_StuffId,_Price,_rkQty,'0','1','0',_LocationId,'2',IN_Id,'备品入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                SET _RkId= LAST_INSERT_ID();

               IF  _RkId > 0 THEN

                   UPDATE   ck7_bprk  SET RkId = _RkId  WHERE Id = IN_Id;

                   UPDATE  ck9_stocksheet SET oStockQty = oStockQty+ _rkQty WHERE StuffId=_StuffId;

                   set _log = CONCAT("配件ID:",_StuffId,"入库记录新增成功！<br>",_log);

               ELSE

                   SET   _error  = 1;

               END IF;

           END IF;





          IF  _error = 0 AND  _Mid >0  AND _Property = 10 THEN

                SET  _error =  saveStuffCombox_Bprk(_StuffId,_Mid,IN_Operator) ;

           END IF ;

       END IF;



     IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"备品转入审核失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"备品转入审核成功！<br>",_log);
     END IF;


     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'备品转入','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck8_bfsheet_updatedestate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck8_bfsheet_updatedestate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck8_bfsheet_updatedestate`(IN `IN_Id` INT(10), IN `IN_OutSign` TINYINT(4), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _rkId  INT(11);
     DECLARE _llId  INT(11);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _bfQty decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);
     DECLARE _Price  decimal(11,2);
     DECLARE _Property  INT(4);
     DECLARE _updateSign TINYINT(3);
     DECLARE _Type  TINYINT(4);

     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;


     DECLARE myCursor cursor for SELECT  Id, (Qty - llQty) AS lastQty,Price  FROM ck1_rksheet
                                 WHERE StuffId IN (SELECT StuffId FROM ck8_bfsheet WHERE Id = IN_Id ) AND llQty<Qty AND llSign >0 ORDER BY Id ASC;

     DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;
         SHOW ERRORS;
       END;


     SET _llId = 0 , _rkId = 0 ,_Price = 0.00,_updateSign = 0 ;

     SELECT B.StuffId,B.Qty FROM ck8_bfsheet  B  INNER JOIN stuffdata D ON D.StuffId = B.StuffId  WHERE B.Id = IN_Id  INTO _StuffId,_bfQty;


     START TRANSACTION;

     IF IN_Id >0 THEN

        UPDATE  ck8_bfsheet  SET Estate = 0  WHERE Id = IN_Id;

        SET _updateSign = ROW_COUNT();

     END IF;

     IF  IN_OutSign = 1  THEN

       SET _Type =2 ;

     ELSE

        SET  _Type = 7;

     END IF ;


     IF _updateSign >0 THEN

        OPEN myCursor;

           myLoop: LOOP


             FETCH myCursor INTO _rkId,_lastQty,_Price;


             IF _lastQty = 0 OR _lastQty = '' THEN
                SET _done = 1;
             END IF;



             IF _done = 1  THEN
                   LEAVE myLoop;
             END IF;



             IF _lastQty > _bfQty  THEN


                 SET _llQty = _bfQty ;

                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_StuffId,_Price,_llQty,'0','2',IN_Id,'报废领料',_rkId,'0','0',NOW(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW(),IN_Operator,NOW());


                 SET _llId = LAST_INSERT_ID();


                  IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign=2  WHERE Id = _rkId;

                     UPDATE ck9_stocksheet SET oStockQty = oStockQty - _llQty WHERE StuffId=_StuffId;

                     SET  _bfQty = _bfQty-_llQty;

                     SET _done = 1;

                   ELSE

                      SET _error = 1;

                 END IF;

              ELSE

                 SET _llQty = _lastQty ;


                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_StuffId,_Price,_llQty,'0','2',IN_Id,'报废领料',_rkId,'0','0',NOW(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW(),IN_Operator,NOW());

                 SET _llId = LAST_INSERT_ID();

                 IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign = 0  WHERE Id = _rkId;

                     UPDATE ck9_stocksheet SET oStockQty = oStockQty - _llQty WHERE StuffId=_StuffId;

                     SET  _bfQty = _bfQty - _llQty;


                 ELSE

                     SET _error = 1;

                 END IF;


              END IF;


           END LOOP  myLoop;



           CLOSE myCursor;

           IF  _bfQty >0  THEN

              SET _error = 1;

           END IF;



          SELECT  IFNULL(Property,0) AS  Property  FROM stuffproperty  WHERE StuffId = _StuffId  AND Property = 10   INTO  _Property ;

          IF  _error = 0  AND _Property = 10 THEN

                SET  _error =  saveStuffCombox_Bf(_StuffId,IN_Operator) ;

           END IF ;

     END IF ;



    IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"报废审核失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"报废审核成功！<br>",_log);
    END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'备品转入','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_ck9_stocksheet_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_ck9_stocksheet_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_ck9_stocksheet_updated`(IN `IN_StuffId` INT(9))
    SQL SECURITY INVOKER
BEGIN

   declare _mStuffId  MEDIUMINT(9);
   declare _mStockId  VARCHAR(14);
   declare _oStockQty  MEDIUMINT(9);
   declare _tStockQty  MEDIUMINT(9);
   declare _Qty  MEDIUMINT(9);
   declare _Id  INT(11);

   SELECT mStuffId FROM stuffcombox_bom WHERE StuffId=IN_StuffId LIMIT 1 INTO _mStuffId;

   IF _mStuffId>0 AND NOT ISNULL(_mStuffId) THEN
       SELECT MIN(ROUND(A.oStockQty/A.Relation)) AS oStockQty,MIN(ROUND(A.tStockQty/A.Relation)) AS tStockQty
	                   FROM (
									SELECT S.Relation,K.oStockQty,K.tStockQty
									FROM  stuffcombox_bom S
									LEFT JOIN ck9_stocksheet K ON K.StuffId=S.StuffId
									WHERE S.mStuffId=_mStuffId
					  )A  INTO _oStockQty,_tStockQty;

        UPDATE ck9_stocksheet SET oStockQty=_oStockQty,tStockQty=_tStockQty WHERE StuffId=_mStuffId;
   END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_new_bom_init
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_new_bom_init`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_new_bom_init`(IN `IN_Id` INT(11), IN `IN_BadQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _SendSign  INT(4);
     DECLARE _CompanyId  MEDIUMINT(9);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _sPOrderId VARCHAR(13);
     DECLARE _StockId  VARCHAR(15);
     DECLARE _shQty  decimal(11,2);
     DECLARE _rkQty  decimal(11,2);
     DECLARE _ForShort  VARCHAR(15);
     DECLARE _KHCompanyId  VARCHAR(15);
     DECLARE _KHForShort  VARCHAR(15);
     DECLARE _UnitId  VARCHAR(15);
     DECLARE _UnitName  VARCHAR(15);
     DECLARE _NewStuffId  VARCHAR(15);
     DECLARE _StuffCName  VARCHAR(15);

     DECLARE _Price decimal(11,2);
     DECLARE _Mid  INT(11);
     DECLARE _BillNumber  VARCHAR(100);
     DECLARE _NewBillNumber  VARCHAR(100);
     DECLARE _RkMid INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _BpId  INT(11);
     DECLARE _BcId  INT(11);


     DECLARE _mStockId  VARCHAR(15);
     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinRkQty  decimal(11,2);
     DECLARE _mRkQty  decimal(11,2);
     DECLARE _done INT DEFAULT -1;

     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;


    DECLARE myCursor CURSOR FOR
           select a.Quantities,b.Specs,b.Sizes from trade_steel a
           LEFT JOIN trade_steel_data b on (a.BuildingNo=b.BuildingNo)  where a.TradeId = 34 and a.BuildingNo = 23
           GROUP BY a.Quantities,b.Specs,b.Sizes order by a.CmptTypeId ;

     DECLARE CONTINUE HANDLER FOR  NOT FOUND set _done=1;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;
         SHOW ERRORS;
       END;




     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'来料品检入库','WMS',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_sale_ordersheet_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_sale_ordersheet_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_sale_ordersheet_insert`(IN `IN_CompanyId` MEDIUMINT(9), IN `IN_OrderPO` VARCHAR(30), IN `IN_OrderDate` DATE, IN `IN_ProductId` VARCHAR(3000), IN `IN_Qty` VARCHAR(3000), IN `IN_Price` VARCHAR(3000), IN `IN_Type` TINYINT(4), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    DECLARE _Mid INT(10);
    DECLARE _POrderId VARCHAR(12);
    DECLARE _StockId VARCHAR(15);
    DECLARE _ProductId MEDIUMINT(9);
    DECLARE _CompanyId MEDIUMINT(9);
    DECLARE _BuyerId MEDIUMINT(9);
    DECLARE _Qty MEDIUMINT(9);
    DECLARE _Price decimal(11,2);
    DECLARE _CgPrice decimal(11,2);

    DECLARE _len INT(9);
    DECLARE _date VARCHAR(10);
    DECLARE _runCounts INTEGER DEFAULT 0;
    DECLARE _done INT DEFAULT -1;
    DECLARE _log TEXT DEFAULT '';
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE i INT DEFAULT 1;



    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
    END;


    START TRANSACTION;


    INSERT INTO sale_ordermain (CompanyId,OrderPO,OrderDate,ClientOrder,Type,Estate,Locks,`Date`,Operator) VALUES (IN_CompanyId,IN_OrderPO,IN_OrderDate,'',IN_Type,'1','0',CURDATE(),IN_Operator);

    SET _Mid = LAST_INSERT_ID();

    SET IN_ProductId=CONCAT(IN_ProductId,'|');
    SET IN_Qty=CONCAT(IN_Qty,'|');
    SET IN_Price=CONCAT(IN_Price,'|');

    SET _len=substrCount(IN_ProductId,'|');

    myWhile:WHILE(i<=_len AND _Mid>0 ) DO
        SET _ProductId=strSplit(IN_ProductId,'|',i);
        SET _Qty=strSplit(IN_Qty,'|',i);
        SET _Price=strSplit(IN_Price,'|',i);

        SELECT  S.SuplierId,S.BuyerId,P.Price FROM sale_productdata S LEFT JOIN productdata  P ON P.ProductId = S.ProductId  WHERE S.ProductId =_ProductId  INTO _CompanyId,_BuyerId,_CgPrice;


        SET _POrderId=getNewSalePOrderId(1,'');


         INSERT INTO sale_ordersheet (`Mid`,OrderPO,POrderId,ProductId,Qty,Price,Remark,DeliveryDate,ShipType,scFrom,Estate,Locks,`Date`,Operator,PLocks,creator,created,modifier,modified)
                           VALUES (_Mid,IN_OrderPO,_POrderId,_ProductId,_Qty,_Price,'','0000-00-00','','1','1','0',CURDATE(),IN_Operator,'0',IN_Operator,NOW(),IN_Operator,NOW());


        SET _StockId = getNewSaleStockId(_POrderId,1);
        INSERT INTO sale_stocksheet (`Mid`,StockId,POrderId,ProductId,Relation, Price, OrderQty, StockQty, AddQty,FactualQty,CompanyId,BuyerId, DeliveryDate,DeliveryWeek,StockRemark,AddRemark,cgSign,rkSign,Estate,Locks,`Date`,Operator,PLocks,creator, created,modifier,modified)
                     VALUES ('0',_StockId,_POrderId,_ProductId,'1',_CgPrice,_Qty,0,0,_Qty,_CompanyId,_BuyerId,'0000-00-00','0','','','0','1','0','0',CURDATE(),IN_Operator,'0',IN_Operator,NOW(),IN_Operator,NOW());

        IF _error = 1 THEN
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单生成失败！<br>");
            leave myWhile;
         ELSE
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单生成成功！订单流水号:", _POrderId ,"<br>");
        END IF;

        SET i=i+1;
    END WHILE;

    IF _error = 1 THEN
            ROLLBACK;
    ELSE
            COMMIT;

            SET _OperationResult="Y";

    END IF;

    INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'新增订单','保存',IN_Operator,_log,_OperationResult);

    SELECT _Mid AS Mid,_OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_sale_ordersheet_updateqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_sale_ordersheet_updateqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_sale_ordersheet_updateqty`(IN `IN_POrderId` VARCHAR(12), IN `IN_NewQty` MEDIUMINT(9), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN

    DECLARE _POrderId VARCHAR(12);
    DECLARE _ProductId MEDIUMINT(9);
    DECLARE _CompanyId MEDIUMINT(9);
    DECLARE _Qty decimal(11,2);
    DECLARE _Price decimal(11,2);
    DECLARE _CgPrice decimal(11,2);
    DECLARE _scFrom TINYINT(4);
    DECLARE _Estate TINYINT(4);

    DECLARE _log TEXT DEFAULT '';

    DECLARE _Mid INT(11);
    DECLARE _StockId VARCHAR(15);
    DECLARE _Relation VARCHAR(50);
    DECLARE _OrderQty  decimal(11,2);
    DECLARE _StockQty  decimal(11,2);
    DECLARE _AddQty  decimal(11,2);
    DECLARE _FactualQty decimal(11,2);
    DECLARE _oStockQty decimal(11,2);

    DECLARE _NewOrderQty decimal(11,2);
    DECLARE _OldOrderQty decimal(11,2);
    DECLARE _NewStockQty decimal(11,2);
    DECLARE _NewAddQty  decimal(11,2);
    DECLARE _NewFactualQty decimal(11,2);
    DECLARE _ChangeQty decimal(11,2);
    DECLARE  OUT_Error INTEGER DEFAULT 0;
    DECLARE _RunCounts TINYINT(4);
    DECLARE _RepeatCounts TINYINT(4);
    DECLARE _FoundSign TINYINT(4);
    DECLARE _useStockSign TINYINT(4);

    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE i INT DEFAULT 1;
    DECLARE _done INT DEFAULT -1;


    declare myCursor cursor for SELECT S.Mid,S.CompanyId,S.StockId,S.ProductId,S.Relation,S.OrderQty,S.StockQty,S.AddQty,S.FactualQty,S.Price
                FROM sale_stocksheet  S
				WHERE S.POrderId=IN_POrderId  ORDER BY S.Id;


    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;


     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;
         SHOW ERRORS;
     END;

    SELECT POrderId,ProductId,Qty,Price,scFrom,Estate FROM sale_ordersheet WHERE POrderId=IN_POrderId AND Estate>0 AND Estate<4 LIMIT 1 INTO _POrderId,_ProductId,_Qty,_Price,_scFrom,_Estate;



    START TRANSACTION;

    IF  _ProductId>0 AND IN_NewQty>0  THEN

        UPDATE sale_ordersheet SET Qty=IN_NewQty,Remark=concat(Remark,'(订单数量更新:',_Qty,'=>',IN_NewQty,')') WHERE  POrderId=_POrderId;


        OPEN myCursor;

        myLoop: LOOP


        FETCH myCursor into _Mid,_CompanyId,_StockId,_ProductId,_Relation,_OrderQty,_StockQty,_AddQty,_FactualQty,_CgPrice;


        IF _done = 1  then
            leave myLoop;
        END IF;


        SET _NewOrderQty=IN_NewQty;

        SET _NewAddQty=_AddQty;
        SET _NewStockQty=_StockQty;
        SET _NewFactualQty=_FactualQty;

        SELECT  oStockQty FROM  sale_productstock WHERE ProductId=_ProductId INTO _oStockQty;
        IF (IN_NewQty>_Qty) THEN

          SET _ChangeQty=_NewOrderQty-_OrderQty;
             IF _Mid=0  THEN
                IF _oStockQty<=0 THEN
                     SET _NewFactualQty=_FactualQty+_ChangeQty;
                ELSEIF _oStockQty<_ChangeQty THEN
                     SET _NewStockQty=_StockQty+_oStockQty;
                     SET _NewFactualQty=_NewOrderQty-_NewStockQty;
                ELSE
                    SET _NewStockQty=_StockQty+_ChangeQty;
                    SET _NewFactualQty=_FactualQty;
                END IF;
            ELSE

                SET _NewAddQty = 0 ;
                SET _NewOrderQty=_ChangeQty;

                IF _oStockQty<=0 THEN
                    SET _NewStockQty = 0 ;
                    SET _NewFactualQty = _NewOrderQty-_NewStockQty;

                ELSEIF _oStockQty<_ChangeQty THEN
                    SET _NewStockQty = _oStockQty ;
                    SET _NewFactualQty = _NewOrderQty-_NewStockQty;

                ELSE
                    SET _NewStockQty = _ChangeQty ;
                    SET _NewFactualQty = _NewOrderQty-_NewStockQty;
                END IF ;

                SET _StockId=getNewSaleStockId(IN_POrderId,1);


                INSERT INTO sale_stocksheet (`Mid`,StockId,POrderId,ProductId,Relation,Price,OrderQty,StockQty,AddQty,FactualQty,CompanyId,BuyerId, DeliveryDate,DeliveryWeek,StockRemark,AddRemark,cgSign,rkSign,Estate,Locks,`Date`,Operator,PLocks,creator, created,modifier,modified)
                     VALUES ('0',_StockId,IN_POrderId,_ProductId,'1',_CgPrice,_NewOrderQty,_NewStockQty,_NewAddQty,_NewFactualQty,_CompanyId,'0','0000-00-00','0','','','0','1','1','0',CURDATE(),IN_Operator,'0',IN_Operator,NOW(),IN_Operator,NOW());
           END IF;
        ELSE

          SET _ChangeQty=_OrderQty-_NewOrderQty;
          IF _Mid=0  THEN
                 IF (_StockQty>=_NewOrderQty) THEN
                    SET _NewFactualQty=0;
                    SET _NewStockQty=_NewOrderQty;
                 ELSE
                    SET _NewFactualQty=_NewOrderQty-_StockQty;
                 END IF;
          ELSEIF _StockQty>=_NewOrderQty THEN
                 SET _NewFactualQty=0;
                 SET _NewStockQty=_NewOrderQty;
                 SET _NewAddQty=_AddQty+_FactualQty;
          ELSE
                 SET _NewFactualQty=_NewOrderQty-_StockQty;
                 SET _NewAddQty=_AddQty+_ChangeQty;
          END IF;

       END IF;


       UPDATE sale_stocksheet SET OrderQty=_NewOrderQty,StockQty=_NewStockQty,AddQty=_NewAddQty,FactualQty=_NewFactualQty WHERE StockId=_StockId;


      END LOOP  myLoop;

      close myCursor;

   END IF;

    IF _error = 1 THEN
            ROLLBACK;
             SET _log=CONCAT(_log,'订单:',_POrderId,'的数量更新：',_Qty,'=>',IN_NewQty,'失败！<br>');
        ELSE
            COMMIT;
            SET _log=CONCAT(_log,'订单:',_POrderId,'的数量更新：',_Qty,'=>',IN_NewQty,'成功!<br>');
            SET _OperationResult="Y";
    END IF;

    INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'订单数量','更新',IN_Operator,_log,_OperationResult);

    SELECT _POrderId AS POrderId,_OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_sc1_cjtj_split
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_sc1_cjtj_split`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_sc1_cjtj_split`(IN `IN_POrderId` VARCHAR(12), IN `IN_Qty` MEDIUMINT(9), IN `IN_NewPOrderId` VARCHAR(12), IN `IN_Operator` MEDIUMINT(9))
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _Id  INT(11);
    declare _Qty MEDIUMINT(9);
    declare _scQty MEDIUMINT(9) DEFAULT 0;
    declare _changeQty MEDIUMINT(9) DEFAULT 0;
    declare _upSign TINYINT(4) DEFAULT 1;

    declare _TypeId MEDIUMINT(9);
    declare _oldTypeId MEDIUMINT(9);

    declare _done int default -1;


    declare myCursor cursor for SELECT  Id,TypeId,Qty FROM sc1_cjtj WHERE POrderId=IN_POrderId ORDER BY TypeId,Id;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_TypeId,_Qty;


        if _done = 1 then
            leave myLoop;
        end if;

        IF _oldTypeId=0 OR _TypeId!=_oldTypeId THEN
            SET _oldTypeId=_TypeId;
            SET _scQty = 0;
            SET _upSign = 1;
        END IF;


        SET _scQty=_scQty+_Qty;
        IF _scQty>IN_Qty AND _upSign=1 THEN
            SET _changeQty=_scQty-IN_Qty;

            UPDATE sc1_cjtj SET Qty=Qty-_changeQty,Remark='随订单拆分的生产记录' WHERE Id=_Id;

            INSERT INTO sc1_cjtj SELECT NULL,GroupId,TypeId,IN_NewPOrderId,_changeQty,'生产记录随订单拆分',NULL,Weight,Date,Estate,Locks,Leader,'0',IN_Operator,NOW(),IN_Operator,NOW(),IN_Operator FROM sc1_cjtj WHERE Id=_Id;
            SET _upSign=0;

          ELSEIF _upSign=0 THEN
              UPDATE sc1_cjtj SET POrderId=IN_NewPOrderId  WHERE Id=_Id;
        END IF;


    END LOOP  myLoop;


    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_sc_tlsheet_updatedestate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_sc_tlsheet_updatedestate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_sc_tlsheet_updatedestate`(IN `IN_Id` INT(10), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _Mid  INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _llId  INT(11);
     DECLARE _POrderId VARCHAR(12);
     DECLARE _sPOrderId VARCHAR(13);

     DECLARE _StockId VARCHAR(15);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _thQty  decimal(11,2);
     DECLARE _Price  decimal(12,2);

     DECLARE _updateSign TINYINT(3);


     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
       BEGIN
         SET _error=1;
         SHOW ERRORS;
       END;


     SET _RkId = 0 , _llId = 0 , _Mid = 0, _updateSign = 0 ;



     START TRANSACTION;

     IF IN_Id >0 THEN

        UPDATE  sc_tlsheet  SET Estate = 0  WHERE Id = IN_Id AND Estate>0;
        SET _updateSign = ROW_COUNT();

     END IF;


     IF _updateSign >0 THEN


           SELECT SC.POrderId,S.sPOrderId, S.StockId, S.StuffId, S.Qty,S.Price FROM sc_tlsheet   S
           LEFT JOIN  yw1_scsheet  SC ON SC.sPOrderId = S.sPOrderId
           WHERE S.Id = IN_Id  INTO _POrderId,_sPOrderId, _StockId, _StuffId, _thQty,_Price;


           IF  _StockId > 0  THEN

               INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES(_POrderId,_sPOrderId,_StockId,_StuffId,_Price,-_thQty,'0','5',IN_Id,'车间退料','0','0','0',NOW(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW(),IN_Operator,NOW());

               SET _llId = LAST_INSERT_ID();


           END IF;



           IF  _llId > 0  THEN

                UPDATE  yw1_scsheet  SET ScFrom = 1  WHERE sPOrderId = _sPOrderId ;

                SELECT M.Id FROM ck1_rksheet  S
                INNER JOIN  ck1_rkmain  M  ON M.Id = S.Mid
                WHERE M.CompanyId = 0 AND DATE_FORMAT(M.rkDate,'%Y-%m-%d') = DATE(NOW()) AND S.Type = 5  GROUP BY M.Id  LIMIT 1 INTO _Mid;


                IF _Mid = 0 THEN

                    INSERT INTO ck1_rkmain(BillNumber, CompanyId, Remark, Locks, `Date`, Operator, rkDate, Estate,PLocks, creator, created, modifier, modified)VALUES('车间退料','0','车间退料的入库记录','0',DATE(NOW()),IN_Operator,NOW(),'1','0',IN_Operator,NOW(),IN_Operator,NOW());
                    SET _Mid = LAST_INSERT_ID();

                END IF;


                IF _Mid>0 THEN

                     INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId, FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                            VALUES (_Mid,_sPOrderId,'',_StuffId,_Price,_thQty,'0','1','0','5',IN_Id,'车间退料入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                     SET _RkId= LAST_INSERT_ID();

                     IF  _RkId = 0 THEN

                        SET   _error  = 1;

                     END IF;
                 ELSE

                    SET   _error  = 1;

                 END IF;
            ELSE

                SET   _error  = 1;

            END IF;

       END IF;

     IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("工单流水号:",_sPOrderId,"采购流水号:",_StockId,"配件ID:",_StuffId,"车间退料审核失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("工单流水号:",_sPOrderId,"采购流水号:",_StockId,"配件ID:",_StuffId,"车间退料审核成功！<br>",_log);
     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'车间退料','审核',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_semifinished_costprice
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_semifinished_costprice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_semifinished_costprice`(IN IN_StuffId  MEDIUMINT(9),OUT OUT_Log VARCHAR(10000) )
    DETERMINISTIC
BEGIN

    declare _mStuffId MIDDLEINT(9);
    declare _CostPrice decimal(10,3) default 0.0;

    declare _depth TINYINT(4);
    declare _log VARCHAR(1000) DEFAULT '';
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;

    declare myCursor cursor for  SELECT G.mStuffId FROM  semifinished_bom G  WHERE  G.StuffId=IN_StuffId GROUP BY G.mStuffId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
      SHOW ERRORS;
    END;

   SET OUT_Log='';
   SET _depth=getSysConfig(105);
   SET @@max_sp_recursion_depth =_depth;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _mStuffId;


        if _done = 1 then
            leave myLoop;
        end if;

        SET _CostPrice=setNewStuffCostPrice(_mStuffId);
        SET _log=CONCAT(_log,_mStuffId,',');
        SET  OUT_Log=CONCAT(OUT_Log,_log);

        CALL proc_semifinished_costprice(_mStuffId,_log);

        IF LENGTH(_log)>0 THEN
            SET OUT_Log=CONCAT(OUT_Log,_log);
        END IF;


    END LOOP  myLoop;

    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_semifinished_setdeliverydate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_semifinished_setdeliverydate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_semifinished_setdeliverydate`(IN_mStockId varchar(15),IN_DeliveryDate date,OUT OUT_Error integer)
BEGIN

declare _Id INT(11);
declare _Mid INT(9);
declare _StockId VARCHAR(15);
declare _ReduceWeeks TINYINT(4);
declare _DeliveryDate DATE;
declare _minReduceWeeks TINYINT(4);

DECLARE _ActionId MIDDLEINT(6);
DECLARE _ActionIds VARCHAR(50);
declare _days INT(9);
declare _depth TINYINT(4);
declare _done int default -1;
declare _error INTEGER DEFAULT 0;

declare myCursor cursor for  SELECT S.Id,S.Mid,G.StockId,IFNULL(E.ReduceWeeks,0) AS ReduceWeeks
           FROM  cg1_semifinished G
           LEFT JOIN cg1_stocksheet S ON S.StockId=G.StockId
           LEFT JOIN semifinished_deliverydate E ON E.mStuffId=G.mStuffId
           LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype M ON M.Id=T.mainType
           WHERE  G.mStockId=IN_mStockId AND S.rkSign>0 AND M.blSign>0;

 DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
 BEGIN
    SET _error=1;

END;
   SET _ActionIds=getSysConfig(107);
   SET _depth=getSysConfig(105);
   SET @@max_sp_recursion_depth =_depth;
   SET _error=0;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Id,_Mid,_StockId,_ReduceWeeks;


        if _done = 1 then
            leave myLoop;
        end if;

       SELECT ActionId FROM yw1_scsheet WHERE  mStockId=_StockId LIMIT 1 INTO _ActionId;

       IF FIND_IN_SET(_ActionId,_ActionIds)=0 THEN
            SELECT  MIN(IFNULL(D.ReduceWeeks,0)) AS ReduceWeeks
                FROM cg1_semifinished G
                LEFT JOIN cg1_stocksheet S ON S.StockId=G.mStockId
                LEFT JOIN semifinished_deliverydate D ON D.mStuffId=G.mStuffId
                WHERE G.StockId=_StockId AND S.DeliveryWeek>0 INTO _minReduceWeeks;

            IF  NOT ISNULL(_minReduceWeeks) THEN
               IF _minReduceWeeks<_ReduceWeeks THEN
                  SET _ReduceWeeks=_minReduceWeeks;
               END IF;
            END IF;

            SET _days=_ReduceWeeks*7;
            SET _DeliveryDate=DATE_ADD(IN_DeliveryDate, interval _days day);
         ELSE
            SET _DeliveryDate=IN_DeliveryDate;
        END IF;

        IF  _DeliveryDate<CURDATE() THEN
            SET _DeliveryDate=DATE_ADD(CURDATE(), interval +1 day);
        END IF;

        UPDATE cg1_stocksheet SET DeliveryDate=_DeliveryDate WHERE Id=_Id;

        CALL proc_semifinished_setdeliverydate(_StockId,_DeliveryDate,_error);

        SET _done=-1;

    END LOOP  myLoop;

    close myCursor;

    SET OUT_Error=_error;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_stuffdata_costprice
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_stuffdata_costprice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_stuffdata_costprice`(IN IN_StuffId  MEDIUMINT(9))
    DETERMINISTIC
BEGIN

    declare _mStuffId MIDDLEINT(9);
    declare _CostPrice decimal(10,3) default 0.0;

    declare _depth TINYINT(4);
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;
    declare _Counts INTEGER DEFAULT 0;

    declare myCursor cursor for  SELECT mStuffId FROM  semifinished_bom  WHERE  StuffId=IN_StuffId GROUP BY mStuffId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;

    open myCursor;
    myLoop: LOOP

        fetch myCursor into _mStuffId;

        if _done = 1 then
            leave myLoop;
        end if;
        SET _Counts=setNewStuffCostPrice(_mStuffId);

        IF _Counts>0 THEN
           CALL proc_stuffdata_costprice(_mStuffId);
        END IF;
    END LOOP  myLoop;
    close myCursor;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_stuffdata_mcostprice
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_stuffdata_mcostprice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_stuffdata_mcostprice`(IN IN_mStuffId  MEDIUMINT(9))
    DETERMINISTIC
BEGIN

    declare _mStuffId MIDDLEINT(9);
    declare _CostPrice decimal(10,3) default 0.0;

    declare _depth TINYINT(4);
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;
    declare _Counts INTEGER DEFAULT 0;

    declare myCursor cursor for  SELECT mStuffId FROM  semifinished_bom  WHERE  StuffId=IN_mStuffId GROUP BY mStuffId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

    SET _depth=getSysConfig(105);
    SET @@max_sp_recursion_depth =_depth;

    SET _Counts=setNewStuffCostPrice(IN_mStuffId);

    open myCursor;
    myLoop: LOOP

        fetch myCursor into _mStuffId;

        if _done = 1 then
            leave myLoop;
        end if;
        SET _Counts=setNewStuffCostPrice(_mStuffId);

        IF _Counts>0 THEN
           CALL proc_stuffdata_costprice(_mStuffId);
        END IF;
    END LOOP  myLoop;
    close myCursor;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_update_costprice_temp
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_update_costprice_temp`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_update_costprice_temp`(IN IN_StuffId  MEDIUMINT(9))
    DETERMINISTIC
BEGIN

    declare _Counts MIDDLEINT(9) DEFAULT 0;
    declare _StuffId MIDDLEINT(9);

    declare _log VARCHAR(1000) DEFAULT '';
    declare _done int default -1;
    declare _error INTEGER DEFAULT 0;

    declare myCursor cursor for  SELECT A.StuffId FROM  semifinished_bom A
             LEFT JOIN stuffdata D  ON D.StuffId=A.StuffId
		     LEFT JOIN stufftype T ON T.TypeId=D.TypeId
		     LEFT JOIN stuffmaintype M ON M.Id=T.mainType
             WHERE  1 AND M.blSign=1 AND NOT EXISTS (SELECT B.StuffId FROM semifinished_bom B WHERE B.mStuffId=A.StuffId) GROUP BY A.StuffId;

    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;
      SHOW ERRORS;
    END;


    START TRANSACTION;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _StuffId;


        if _done = 1 then
            leave myLoop;
        end if;

        CALL proc_stuffdata_costprice(_StuffId);

        SET _Counts=_Counts+1;


    END LOOP  myLoop;

    close myCursor;

    IF _error=1 THEN
            ROLLBACK;
             SELECT 'error' AS Logs;
        ELSE

             COMMIT;
             SELECT _Counts AS Logs;
        END IF;


END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_wms_rksheet_save
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_wms_rksheet_save`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_wms_rksheet_save`(IN `IN_Id` INT(11), IN `IN_BadQty` decimal(11,2), IN `IN_Operator` MEDIUMINT(9))
    SQL SECURITY INVOKER
BEGIN


     DECLARE _SendSign  INT(4);
     DECLARE _CompanyId  MEDIUMINT(9);
     DECLARE _StuffId MEDIUMINT(9);
     DECLARE _sPOrderId VARCHAR(13);
     DECLARE _StockId  VARCHAR(15);
     DECLARE _shQty  decimal(11,2);
     DECLARE _rkQty  decimal(11,2);
     DECLARE _ForShort  VARCHAR(15);
     DECLARE _KHCompanyId  VARCHAR(15);
     DECLARE _KHForShort  VARCHAR(15);
     DECLARE _UnitId  VARCHAR(15);
     DECLARE _UnitName  VARCHAR(15);
     DECLARE _NewStuffId  VARCHAR(15);
     DECLARE _StuffCName  VARCHAR(15);

     DECLARE _Price decimal(11,2);
     DECLARE _Mid  INT(11);
     DECLARE _BillNumber  VARCHAR(100);
     DECLARE _NewBillNumber  VARCHAR(100);
     DECLARE _RkMid INT(11);
     DECLARE _RkId  INT(11);
     DECLARE _BpId  INT(11);
     DECLARE _BcId  INT(11);


     DECLARE _mStockId  VARCHAR(15);
     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinRkQty  decimal(11,2);
     DECLARE _mRkQty  decimal(11,2);



     DECLARE _log TEXT DEFAULT '';
     DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
     DECLARE _error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
        SET _error=1;
        SHOW ERRORS;
     END;


    SELECT S.SendSign,S.StuffId,S.StockId,S.sPOrderId,S.Qty,M.CompanyId,T.ForShort,M.BillNumber  FROM gys_shsheet S
    LEFT JOIN gys_shmain M ON M.Id=S.Mid
    LEFT JOIN trade_object T ON T.CompanyId=M.CompanyId
    WHERE S.Id = IN_Id INTO  _SendSign, _StuffId, _StockId, _sPOrderId, _shQty, _CompanyId,_ForShort,_BillNumber ;

    SELECT  S.CompanyId,T.ForShort  FROM yw1_ordermain S
    LEFT JOIN yw1_ordersheet M ON S.OrderNumber=M.OrderNumber
    LEFT JOIN trade_object T ON T.CompanyId=S.CompanyId
    WHERE M.POrderId = left(_StockId,12) INTO _KHCompanyId,_KHForShort ;

    SET  _rkQty  =  _shQty - IN_BadQty ;
    START TRANSACTION;

    IF  _StuffId >0 THEN


        IF  _SendSign = 0  THEN

        SELECT Id,BillNumber  FROM ck1_rkmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid , _NewBillNumber;

        ELSEIF _SendSign = 1  THEN

        SELECT Id,BillNumber  FROM ck3_bcmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid , _NewBillNumber;

        ELSEIF  _SendSign = 2  THEN

        SELECT Id,BillNumber  FROM ck11_bpmain  WHERE  CompanyId =_CompanyId  AND Date = DATE(NOW())  AND  BillNumber=_BillNumber ORDER BY BillNumber DESC LIMIT 1 INTO _RkMid , _NewBillNumber;

        END IF;

       IF  _RkMid >0 THEN

           INSERT INTO wms_rkmain(BillNumber,CompanyId,ForShort,KHCompanyId,KHForShort,InType, Remark, `Status`, Locks, `Date`, Operator,  Estate,PLocks, creator, created, modifier, modified)
                 VALUES(_BillNumber,_CompanyId,_ForShort,_KHCompanyId,_KHForShort,'0','采购入库','1','0',DATE(NOW()),IN_Operator,'1','0',IN_Operator,NOW(),IN_Operator,NOW());

           SET  _RkMid  = LAST_INSERT_ID();
       ELSE

           SET  _error = 1;

       END IF;


       IF _RkMid > 0 THEN

           SELECT  S.StuffCName,U.Id,U.`Name`  FROM stuffdata S
           LEFT JOIN stuffunit U ON U.Id=S.Unit
           WHERE S.StuffId = _StuffId
           INTO _StuffCName,_UnitId, _UnitName ;

           INSERT INTO wms_rksheet(`Mid`, sPOrderId, StockId, StuffId,StuffCName, Qty, UnitId, UnitName, LocationId,Type, FromId ,FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
               VALUES (_RkMid,_sPOrderId,_StockId,_StuffId,_StuffCName,_rkQty,_UnitId, _UnitName,'0','1','0','采购单入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

           SET _RkId= LAST_INSERT_ID();

           IF  _RkId <= 0 THEN

               SET  _error = 1;

           END IF;

       END IF;

   END IF ;



   IF _error = 1 THEN

            ROLLBACK;
            set _log = CONCAT("配件ID:",_StuffId,"生成入库单失败！<br>",_log);

        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("配件ID:",_StuffId,"生成入库单成功！<br>",_log);

     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'来料品检入库','WMS',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_orderrk_update
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_orderrk_update`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_orderrk_update`(IN IN_POrderId varchar(12), IN IN_sPOrderId varchar(13), IN IN_StockId varchar(15),IN IN_LocationId INT(9), IN IN_Operator mediumint(9))
BEGIN

     declare _ProductId MIDDLEINT(9);
     declare _Qty INT(11);
     declare _Price decimal(10,3);
     declare _OrderQty INT(11);

     declare _stockQty INT(11);
     declare _lastQty INT(11);
     declare _scDate VARCHAR(10);
     DECLARE _shipType VARCHAR(10);

     declare _splitId  INT(11);
     declare _prosuctStockId  INT(11);
     SET _splitId = 0 ,_prosuctStockId = 0;


     SELECT  Y.ProductId, IFNULL( SUM( C.Qty ) , 0 ) AS ScQty, Y.Price,Y.Qty,Y.ShipType
     FROM sc1_cjtj C
     INNER JOIN yw1_ordersheet Y ON Y.POrderId = C.POrderId
     INNER JOIN cg1_stocksheet G ON G.StockId = C.StockId
     WHERE C.POrderId=IN_POrderId  AND C.StockId = IN_StockId   AND   C.sPOrderId = IN_sPOrderId AND G.Level = 1
     INTO _ProductId,_Qty,_Price,_OrderQty,_shipType;


     IF LENGTH(_ProductId)>0 THEN

         SELECT Id FROM ch1_shipsplit WHERE POrderId = IN_POrderId LIMIT 1 INTO _splitId;

         IF _splitId = 0 OR _splitId IS NULL THEN

             INSERT INTO ch1_shipsplit (POrderId, ShipId, Qty, ShipType, Estate, OrderSign,shipSign,Locks,PLocks,creator,created,modifier,modified,`Date`,Operator)
                          VALUES (IN_POrderId,0,_OrderQty,_shipType,1,0,0,0,0,IN_Operator,NOW(),IN_Operator,NOW(),CURDATE(),IN_Operator);

         END IF ;

         SELECT  Id FROM productstock WHERE ProductId = _ProductId INTO _prosuctStockId;

         IF _prosuctStockId = 0  OR  _prosuctStockId IS NULL THEN

             INSERT INTO productstock (ProductId, tStockQty,oStockQty,Estate,Locks,`Date`,Operator,PLocks,creator,created,modifier,modified)
             VALUES (_ProductId,0,0,1,0,CURDATE(),IN_Operator,0,IN_Operator,NOW(),IN_Operator,NOW());

         END IF ;


         SELECT IFNULL(SUM(Qty),0) AS Qty FROM yw1_orderrk WHERE POrderId = IN_POrderId  AND  sPOrderId = IN_sPOrderId INTO _stockQty;

         SET _lastQty = _Qty - _stockQty;



         IF _Qty = 0 THEN
              DELETE FROM yw1_orderrk  WHERE POrderId = IN_POrderId AND  sPOrderId = IN_sPOrderId;
         END IF;


         IF _lastQty >0  AND _stockQty = 0 THEN

               INSERT INTO yw1_orderrk (POrderId,sPOrderId,ProductId,Qty,Price,scDate,LocationId,Locks,Estate,Date,Operator) VALUES (IN_POrderId,IN_sPOrderId,_ProductId,_lastQty,_Price,CURDATE(),IN_LocationId,0,1,CURDATE(),IN_Operator);

         END IF;


         IF  _lastQty!=0  AND _stockQty > 0 THEN

               UPDATE yw1_orderrk  SET  Qty = Qty + _lastQty WHERE POrderId = IN_POrderId AND  sPOrderId = IN_sPOrderId;

         END IF;

         IF _lastQty!=0 THEN

               UPDATE productstock set tStockQty = tStockQty + _lastQty WHERE ProductId = _ProductId;

         END IF;

        SELECT IFNULL(SUM(Qty),0) AS Qty FROM yw1_orderrk WHERE POrderId = IN_POrderId  INTO _stockQty;

        IF _stockQty=_OrderQty THEN

              UPDATE yw1_ordersheet SET scFrom=0,Estate=2 WHERE POrderId=IN_POrderId AND Estate=1;

           ELSE

              UPDATE yw1_ordersheet SET scFrom=2,Estate=1 WHERE POrderId=IN_POrderId;

        END IF;

     END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_ordersheet_delete
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_ordersheet_delete`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_ordersheet_delete`(IN IN_POrderId VARCHAR(12), IN IN_Operator mediumint(9))
BEGIN

    DECLARE _POrderId VARCHAR(12);
    DECLARE _ProductId  MEDIUMINT(9);
    DECLARE _Qty MEDIUMINT(9);
    DECLARE _scQty MEDIUMINT(9);
    DECLARE _Price decimal(10,3);
    DECLARE _scFrom TINYINT(4);
    DECLARE _Estate TINYINT(4);
    DECLARE _OrderNumber BIGINT(10);

    DECLARE _log TEXT DEFAULT '';

    DECLARE _Id INT(11);
    DECLARE _Mid INT(11);
    DECLARE _StockId VARCHAR(15);
    DECLARE _StuffId  MEDIUMINT(9);
    DECLARE _OrderQty  decimal(11,2);
    DECLARE _SumOrderQty  decimal(11,2);
    DECLARE _StockQty  decimal(11,2);
    DECLARE _AddQty  decimal(11,2);
    DECLARE _FactualQty decimal(11,2);
    DECLARE _oStockQty decimal(11,2);
    DECLARE _MainTypes  VARCHAR(255) default '';
    DECLARE _MainType  MEDIUMINT(9);
    DECLARE _Decimals TINYINT(4);

    DECLARE _RkMid INT(11) DEFAULT 0;

    declare _NewPOrderId VARCHAR(12);
    declare _NewFactualQty decimal(11,2);

    DECLARE _semiSign MEDIUMINT(5) DEFAULT 0;
    DECLARE _chSign MEDIUMINT(9) DEFAULT 0;
    DECLARE _Position TINYINT(4);
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE _errorSign INTEGER DEFAULT 0;
    DECLARE _done INT DEFAULT -1;


    declare myCursor cursor for SELECT S.Id,S.Mid,S.StockId,S.StuffId,S.OrderQty,S.StockQty,S.AddQty,S.FactualQty,U.Decimals,T.mainType
                FROM cg1_stocksheet  S
                LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
                LEFT JOIN stuffunit U ON U.Id=D.Unit
                LEFT JOIN stufftype T ON T.TypeId=D.TypeId
				WHERE S.POrderId=IN_POrderId AND S.Level=1 ORDER BY S.Id;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;



     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;


     END;

    SELECT OrderNumber FROM yw1_ordersheet WHERE POrderId=IN_POrderId INTO _OrderNumber;

    START TRANSACTION;

    SELECT COUNT(*) AS Counts FROM ch1_shipsheet WHERE POrderId=IN_POrderId INTO _chSign;

    IF _chSign=0 THEN
       SET _MainTypes=getSysConfig(102);

      open myCursor;

      myLoop: LOOP


        fetch myCursor into _Id,_Mid,_StockId,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_Decimals,_MainType;

        if _done = 1 OR _error=1 then
            leave myLoop;
        end if;

        SELECT COUNT(1) AS Counts FROM  cg1_semifinished WHERE mStockId=_StockId  INTO _semiSign;

        SET _Position= FIND_IN_SET(_MainType,_MainTypes);

        IF _semiSign=0 THEN
             IF _Mid>0  AND _Position=0  THEN
                  UPDATE cg1_stocksheet SET POrderId='',cgSign=1,OrderQty=0,StockQty=0,AddQty=0,FactualQty=FactualQty+_AddQty,AddRemark='因删除订单转成特采单' WHERE Id=_Id;
                  SET _log=CONCAT(_log,"采购需求单:",_StockId,"转为特采单成功。<br>");
               ELSE

                  DELETE FROM cg1_stocksheet WHERE Id=_Id;
                  SET _log=CONCAT(_log,"采购需求单:",_StockId,"删除成功。<br>");
             END IF;
        ELSE
            IF _Mid=0 THEN
                CALL proc_cg1_semifinished_delete(_StockId,IN_Operator,_errorSign,_log);
                IF _errorSign=0 THEN
                    DELETE FROM cg1_stocksheet WHERE Id=_Id;
                    DELETE FROM cg1_semifinished WHERE mStockId=_StockId;
                    SET _log=CONCAT(_log,"采购需求单:",_StockId,"删除成功。<br>");
                 ELSE
                    SET _error=1;
                    SET _log=CONCAT(_log,"采购需求单:",_StockId,"删除失败！<br>");
                END IF;
            ELSE
                SET _NewPOrderId=getNewPOrderId(2,SUBSTR(_StockId,1,8));
                SET _NewFactualQty=_FactualQty+_AddQty;
                UPDATE cg1_stocksheet SET POrderId=_NewPOrderId,cgSign=1,OrderQty=0,StockQty=0,AddQty=0,FactualQty=_NewFactualQty,AddRemark='因删除订单转成特采单' WHERE Id=_Id;
                CALL proc_cg1_semifinished_renew_b(_NewPOrderId,_StockId,_NewFactualQty,IN_Operator,_errorSign);
                IF _errorSign=0 THEN
                     SET _log=CONCAT(_log,"采购需求单:",_StockId,"转为特采单成功。<br>");
                   ELSE
                     SET _error=1;
                     SET _log=CONCAT(_log,"采购需求单:",_StockId,"转为特采单失败！<br>");
                END IF;
            END IF;
        END IF;



        CALL proc_ck1_rksheet_lldelete(_StockId,_RkMid,IN_Operator);

      END LOOP  myLoop;


   close myCursor;
    IF _error=0 THEN
       DELETE FROM cg1_stuffunite WHERE POrderId=IN_POrderId;
       DELETE FROM yw1_ordersheet WHERE POrderId=IN_POrderId;
       DELETE FROM yw1_ordermain  WHERE OrderNumber=_OrderNumber AND NOT EXISTS (SELECT OrderNumber FROM yw1_ordersheet  WHERE  OrderNumber=_OrderNumber);
   END IF;

ELSE
    SET _error=1;
    set _log ="该订单已有办理出货";
   END IF;

    IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT("业务订单流水号:",IN_POrderId,"删除失败！<br>",_log);
        ELSE

            COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("业务订单流水号:",IN_POrderId,"删除成功！<br>",_log);
    END IF;

   INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'业务订单','删除',IN_Operator,_log,_OperationResult);

   SELECT _OperationResult AS OperationResult,_log  AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_ordersheet_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_ordersheet_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_ordersheet_insert`(IN IN_CompanyId mediumint(9), IN IN_SubClientId mediumint(9), IN IN_OrderPO varchar(30), IN IN_OrderDate date, IN IN_ProductId varchar(3000), IN IN_StockId varchar(15), IN IN_Qty varchar(3000), IN IN_Price varchar(3000), IN IN_Operator mediumint(9))
BEGIN

    DECLARE _OrderNumber BIGINT(10);
    DECLARE _POrderId VARCHAR(12);
    DECLARE _sPOrderId VARCHAR(12);
    DECLARE _ProductId  MEDIUMINT(9);
    DECLARE _Qty MEDIUMINT(9);
    DECLARE _Price decimal(10,3);

    DECLARE _len INT(9);
    DECLARE _date VARCHAR(10);
    DECLARE _Level TINYINT(4);
    DECLARE _maxLevel TINYINT(4);
    DECLARE _runCounts INTEGER DEFAULT 0;
    DECLARE _done INT DEFAULT -1;
    DECLARE _taxtypeId  INT(9);
    DECLARE _log TEXT DEFAULT '';
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE i INT DEFAULT 1;
    DECLARE _costSign TINYINT(4);



    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;


    END;

   SELECT IFNULL(MAX(OrderNumber),0) AS Mid FROM yw1_ordermain  INTO  _OrderNumber;
    SET _OrderNumber=_OrderNumber+1;


    START TRANSACTION;


    INSERT INTO yw1_ordermain (CompanyId,SubClientId,OrderNumber,OrderPO,OrderDate,ClientOrder,Locks,Operator) VALUES (IN_CompanyId,IN_SubClientId,_OrderNumber,IN_OrderPO,IN_OrderDate,'','0',IN_Operator);

    SET IN_ProductId=CONCAT(IN_ProductId,'|');
    SET IN_Qty=CONCAT(IN_Qty,'|');
    SET IN_Price=CONCAT(IN_Price,'|');

    SET _len=substrCount(IN_ProductId,'|');

    myWhile:WHILE(i<=_len) DO
        SET _ProductId=strSplit(IN_ProductId,'|',i);
        SET _Qty=strSplit(IN_Qty,'|',i);
        SET _Price=strSplit(IN_Price,'|',i);


        SET _POrderId=getNewPOrderId(1,'');

        SELECT taxtypeId FROM productdata WHERE ProductId=_ProductId INTO _taxtypeId;


         INSERT INTO yw1_ordersheet (OrderNumber,OrderPO,POrderId,ProductId,Qty,Price,PackRemark,cgRemark,sgRemark,dcRemark,DeliveryDate,ShipType,taxtypeId,StockId,scFrom,Estate,Locks,Date,Operator)
                           VALUES (_OrderNumber,IN_OrderPO,_POrderId,_ProductId,_Qty,_Price,'','','','','0000-00-00','',_taxtypeId,IN_StockId,'1','1','0',CURDATE(),IN_Operator);


        CALL proc_cg1_stocksheet_insert(_POrderId,_ProductId,_Qty,IN_Operator,_error);
        IF _error = 1 THEN
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单添加采购需求单失败！<br>");
            leave myWhile;
        END IF;


        SET _Level=1;
        SET _maxLevel=CONVERT(getSysConfig(105),signed);
        loop_label: LOOP
              CALL proc_cg1_semifinished_insert(_POrderId,_Level,IN_Operator,_runCounts,_error);
              IF _runCounts=0 OR _Level>=_maxLevel OR _error=1 THEN
                 LEAVE loop_label;
              END IF;
              SET _Level=_Level+1;
        END LOOP;

        IF _error = 1 THEN
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单添加半成品采购需求单失败！<br>");
            leave myWhile;
        END IF;



        CALL proc_yw1_scsheet_insert(_POrderId,IN_Operator,_error);
        IF _error = 1 THEN
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单添加生产工单失败！<br>");
            leave myWhile;
        END IF;


        INSERT INTO cg1_stuffunite (POrderId,ProductId,StuffId,uStuffId,Relation,Date,Operator) SELECT _POrderId,ProductId,StuffId,uStuffId,Relation,CURDATE(),IN_Operator FROM pands_unite WHERE ProductId=_ProductId;


        CALL proc_cg1_stocksheet_automain(_POrderId,IN_Operator);

        IF _error = 1 THEN
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单生成失败！<br>");
            leave myWhile;
         ELSE
            SET _log = CONCAT(_log,"新增产品ID:",_ProductId, " 的客户订单生成成功！订单流水号:", _POrderId ,"<br>");

        END IF;

        SET i=i+1;
    END WHILE;

    IF _error = 1 THEN
            ROLLBACK;
        ELSE
            COMMIT;

            SET _OperationResult="Y";

        END IF;

    INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'新增订单','保存',IN_Operator,_log,_OperationResult);

    SELECT _OrderNumber AS OrderNumber,_OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_ordersheet_occupy
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_ordersheet_occupy`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_ordersheet_occupy`(IN_POrderId varchar(12), IN_sPOrderId varchar(13), IN IN_Operator mediumint(9))
BEGIN

    DECLARE _Counts MIDDLEINT(6);
    DECLARE _scSign MIDDLEINT(6);
    DECLARE _lastSign MIDDLEINT(6);

    DECLARE _StockId VARCHAR(15);
    DECLARE _StuffId MIDDLEINT(9);
    DECLARE _OrderQty  decimal(10,3);
    DECLARE _tStockQty decimal(10,3);
    DECLARE _llQty  decimal(10,3);
    DECLARE _Decimals TINYINT(4);
    DECLARE _ComboxSign TINYINT(4);
    DECLARE _llSign TINYINT(4);

    DECLARE _log TEXT DEFAULT '';
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;

    DECLARE myCursor CURSOR FOR SELECT G.StockId,G.StuffId,ROUND(G.OrderQty*(S.Qty/Y.Qty),U.Decimals) AS OrderQty,K.tStockQty,SUM(IFNULL(L.Qty,0))  as llQty,U.Decimals,D.ComboxSign,IF (LA.lledQty=G.OrderQty,1,0) AS llSign
				FROM yw1_scsheet S
        INNER JOIN yw1_ordersheet Y ON Y.POrderId=S.POrderId
				INNER JOIN cg1_stocksheet G ON G.POrderId=S.POrderId
				INNER JOIN stuffdata D ON D.StuffId=G.StuffId
				INNER JOIN stufftype T ON T.TypeId=D.TypeId
				INNER JOIN stuffmainType TM ON TM.Id=T.mainType
        INNER JOIN stuffunit U ON U.Id=D.Unit
				INNER JOIN ck9_stocksheet K ON  K.StuffId=G.StuffId
				LEFT JOIN  ck5_llsheet L ON L.sPOrderId=S.sPOrderId AND L.StockId=G.StockId
        LEFT JOIN (
                     SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=IN_POrderId   GROUP BY StockId
                  )LA ON LA.StockId=G.StockId
				WHERE S.sPOrderId=IN_sPOrderId AND G.Level=1 AND G.blSign=1
				GROUP BY G.StockId
        UNION ALL
                SELECT G.StockId,G.StuffId,ROUND(G.OrderQty*(S.Qty/Y.Qty),U.Decimals) AS OrderQty,K.tStockQty,SUM(IFNULL(L.Qty,0)) as llQty,U.Decimals,D.ComboxSign,IF (LA.lledQty=G.OrderQty,1,0) AS llSign
				FROM yw1_scsheet S
        INNER JOIN yw1_ordersheet Y ON Y.POrderId=S.POrderId
				INNER JOIN cg1_stocksheet MG ON MG.POrderId=S.POrderId
        INNER JOIN cg1_stuffcombox G ON G.mStockId=MG.StockId
				INNER JOIN stuffdata D ON D.StuffId=G.StuffId
				INNER JOIN stufftype T ON T.TypeId=D.TypeId
				INNER JOIN stuffmainType TM ON TM.Id=T.mainType
        INNER JOIN stuffunit U ON U.Id=D.Unit
				INNER JOIN ck9_stocksheet K ON  K.StuffId=G.StuffId
				LEFT JOIN  ck5_llsheet L ON L.sPOrderId=S.sPOrderId AND L.StockId=G.StockId
        LEFT JOIN (
              SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=IN_POrderId   GROUP BY StockId
              )LA ON LA.StockId=G.StockId
				WHERE S.sPOrderId=IN_sPOrderId AND MG.Level=1 AND TM.blSign=1
				GROUP BY G.StockId ORDER BY ComboxSign,StockId;

    DECLARE myCursor1 CURSOR FOR SELECT G.StockId,G.StuffId,ROUND(G.OrderQty-IFNULL(LA.lledQty,0),U.Decimals) AS OrderQty,K.tStockQty,SUM(IFNULL(L.Qty,0))  as llQty,U.Decimals,D.ComboxSign,IF (LA.lledQty=G.OrderQty,1,0) AS llSign
				FROM yw1_scsheet S
                INNER JOIN yw1_ordersheet Y ON Y.POrderId=S.POrderId
				INNER JOIN cg1_stocksheet G ON G.POrderId=S.POrderId
				INNER JOIN stuffdata D ON D.StuffId=G.StuffId
				INNER JOIN stufftype T ON T.TypeId=D.TypeId
				INNER JOIN stuffmainType TM ON TM.Id=T.mainType
                INNER JOIN stuffunit U ON U.Id=D.Unit
				INNER JOIN ck9_stocksheet K ON  K.StuffId=G.StuffId
				LEFT JOIN  ck5_llsheet L ON L.sPOrderId=S.sPOrderId AND L.StockId=G.StockId
                LEFT JOIN (
                     SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=IN_POrderId AND sPOrderId!=IN_sPOrderId  GROUP BY StockId
                 )LA ON LA.StockId=G.StockId
				WHERE S.sPOrderId=IN_sPOrderId AND G.Level=1 AND G.blSign=1
				GROUP BY G.StockId
        UNION ALL
                SELECT G.StockId,G.StuffId,ROUND(G.OrderQty-IFNULL(LA.lledQty,0),U.Decimals) AS OrderQty,K.tStockQty,SUM(IFNULL(L.Qty,0)) as llQty,U.Decimals,D.ComboxSign,IF (LA.lledQty=G.OrderQty,1,0) AS llSign
				FROM yw1_scsheet S
                INNER JOIN yw1_ordersheet Y ON Y.POrderId=S.POrderId
				INNER JOIN cg1_stocksheet MG ON MG.POrderId=S.POrderId
                INNER JOIN cg1_stuffcombox G ON G.mStockId=MG.StockId
				INNER JOIN stuffdata D ON D.StuffId=G.StuffId
				INNER JOIN stufftype T ON T.TypeId=D.TypeId
				INNER JOIN stuffmainType TM ON TM.Id=T.mainType
                INNER JOIN stuffunit U ON U.Id=D.Unit
				INNER JOIN ck9_stocksheet K ON  K.StuffId=G.StuffId
				LEFT JOIN  ck5_llsheet L ON L.sPOrderId=S.sPOrderId AND L.StockId=G.StockId
                LEFT JOIN (
                     SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=IN_POrderId AND sPOrderId!=IN_sPOrderId  GROUP BY StockId
                 )LA ON LA.StockId=G.StockId
				WHERE S.sPOrderId=IN_sPOrderId AND MG.Level=1 AND TM.blSign=1
				GROUP BY G.StockId ORDER BY ComboxSign,StockId;

    DECLARE CONTINUE HANDLER FOR  NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;


    END;

    SET _error=0;

    START TRANSACTION;

   IF getCanStock(IN_sPOrderId,1)=0 THEN
     SET _error=1;
   ELSE
     SELECT COUNT(1) AS Counts,SUM(scSign) AS scSign
				FROM (
				    SELECT 1 AS Counts,IF(C.sPOrderId IS NULL,0,1) AS scSign
				    FROM yw1_scsheet S
				    LEFT JOIN sc1_cjtj C ON C.sPOrderId=S.sPOrderId
				    WHERE S.POrderId=IN_POrderId  and S.LEVEL=1 GROUP BY S.sPOrderId
				)A INTO _Counts,_scSign;

    SET _lastSign=_Counts-_scSign;
    IF  _lastSign<=0 THEN
      SET  _lastSign=1;
    END IF;

    IF _lastSign=1 THEN
          open myCursor1;
      ELSE
          open myCursor;
    END IF;

    myLoop: LOOP

         IF _lastSign=1 THEN

              fetch myCursor1 into _StockId,_StuffId,_OrderQty,_tStockQty,_llQty,_Decimals,_ComboxSign,_llSign;
         ELSE
              fetch myCursor  into _StockId,_StuffId,_OrderQty,_tStockQty,_llQty,_Decimals,_ComboxSign,_llSign;
         END IF;




        if _done = 1 OR _error=1 then
            leave myLoop;
        end if;

        SET _OrderQty = ROUND(_OrderQty,_Decimals);
        SET _llQty    = _OrderQty - _llQty;

        IF _llQty>0 AND _llSign=0 THEN
            SET  _error = saveNewllQty(IN_POrderId,IN_sPOrderId,_StockId,_StuffId,_llQty,IN_Operator,1,_ComboxSign);
            IF _error = 1 THEN
                SET _log=CONCAT(_log,'采购需求单:',_StockId,'备料占用失败,',_llQty);
            END IF;
        END IF;

    END LOOP  myLoop;

    IF _lastSign=1 THEN
          CLOSE myCursor1;
      ELSE
          CLOSE myCursor;
    END IF;
  END IF;

    IF _error = 1 THEN
            ROLLBACK;
            SET _log=CONCAT('业务工单:',IN_sPOrderId,'备料占用失败<br>',_log);
        ELSE
            COMMIT;

            SET _OperationResult="Y";
            SET _log=CONCAT('业务工单:',IN_sPOrderId,'备料占用成功<br>');

        END IF;

    INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'工单备料','保存',IN_Operator,_log,_OperationResult);

    SELECT _OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_ordersheet_setdeliverydate
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_ordersheet_setdeliverydate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_ordersheet_setdeliverydate`(IN IN_POrderId VARCHAR(12),IN IN_DeliveryDate date,IN IN_ReduceWeeks TINYINT,IN IN_NewSign TINYINT, IN IN_Operator mediumint(9))
BEGIN

    DECLARE _Id INT(11);
    DECLARE _StockId VARCHAR(15);

    DECLARE _PiId INT(11) DEFAULT 0;
    DECLARE _days INT(9);
    DECLARE _DeliveryDate DATE;
    DECLARE _log TEXT DEFAULT '';

    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _done INT DEFAULT -1;
    DECLARE _error INTEGER DEFAULT 0;

    declare myCursor cursor for SELECT G.Id,G.StockId
				   	FROM cg1_stocksheet G
					LEFT JOIN  stuffdata D ON D.StuffId=G.StuffId
                    LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                    LEFT JOIN stuffmaintype M ON M.Id=T.mainType
					WHERE G.POrderId=IN_POrderId AND G.Level=1 AND M.blSign>0;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;
         SHOW ERRORS;
     END;


    START TRANSACTION;

    IF IN_NewSign=1 THEN
      SELECT  IFNULL(PI.Id,0) AS PiId FROM yw1_ordersheet S LEFT JOIN  yw3_pisheet PI ON PI.oId=S.Id WHERE S.POrderId=IN_POrderId LIMIT 1 INTO _PiId;

      IF _PiId>0 THEN
          UPDATE  yw3_pisheet SET Leadtime=IN_DeliveryDate,modifier=IN_Operator,modified=NOW() WHERE Id=_PiId;
       ELSE
          REPLACE INTO yw3_pileadtime(Id,POrderId,Leadtime,Date,Operator) Values (NULL,IN_POrderId,IN_DeliveryDate,CURDATE(),IN_Operator);
      END IF;

      REPLACE INTO yw2_cgdeliverydate(Id,POrderId,ReduceWeeks,Date,Operator) Values (NULL,IN_POrderId,IN_ReduceWeeks,CURDATE(),IN_Operator);
    END IF;


    INSERT INTO cg1_deliverydate(StockId,DeliveryDate,DeliveryWeek,Date,Operator,creator,created) SELECT StockId,DeliveryDate,DeliveryWeek,CURDATE(),IN_Operator,IN_Operator,NOW() FROM cg1_stocksheet
             WHERE POrderId=IN_POrderId AND Mid>0 AND DeliveryWeek>0;

    IF IN_ReduceWeeks=0 THEN
       SET _DeliveryDate=IN_DeliveryDate;
    ELSE
       SET _days=IN_ReduceWeeks*7;
       SET _DeliveryDate=DATE_ADD(IN_DeliveryDate, interval _days day);
       IF  _DeliveryDate<CURDATE() THEN
            SET _DeliveryDate=DATE_ADD(CURDATE(), interval +1 day);
       END IF;
    END IF;


    open myCursor;

    myLoop: LOOP

        fetch myCursor into _Id,_StockId;

        if _done = 1 OR _error=1 then
            leave myLoop;
        end if;
        UPDATE cg1_stocksheet SET DeliveryDate=_DeliveryDate WHERE Id=_Id;

        CALL proc_semifinished_setdeliverydate(_StockId,_DeliveryDate,_error);

   END LOOP  myLoop;


   close myCursor;

   IF _error = 1 THEN
            ROLLBACK;
             SET _log=CONCAT(_log,'订单:',IN_POrderId,'设置采购单交期:',IN_DeliveryDate,' 失败！<br>');
        ELSE
            COMMIT;
            SET _log=CONCAT(_log,'订单:',IN_POrderId,'设置采购单交期:',IN_DeliveryDate,' 成功！<br>');
            SET _OperationResult="Y";
    END IF;

    SELECT _OperationResult AS OperationResult,_log AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_ordersheet_updateqty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_ordersheet_updateqty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_ordersheet_updateqty`(IN IN_POrderId VARCHAR(12), IN IN_NewQty mediumint(9),  IN IN_Operator mediumint(9))
BEGIN

    DECLARE _POrderId VARCHAR(12);
    DECLARE _ProductId  MEDIUMINT(9);
    DECLARE _Qty MEDIUMINT(9);
    DECLARE _scQty MEDIUMINT(9);
    DECLARE _Price decimal(10,3);
    DECLARE _scFrom TINYINT(4);
    DECLARE _Estate TINYINT(4);

    DECLARE _log TEXT DEFAULT '';

    DECLARE _Mid INT(11);
    DECLARE _Id INT(11);
    DECLARE _StockId VARCHAR(15);
    DECLARE _StuffId  MEDIUMINT(9);
    DECLARE _Relation VARCHAR(50);
    DECLARE _OrderQty  decimal(11,2);
    DECLARE _StockQty  decimal(11,2);
    DECLARE _AddQty  decimal(11,2);
    DECLARE _FactualQty decimal(11,2);
    DECLARE _oStockQty decimal(11,2);
    DECLARE _Property  MEDIUMINT(9);
    DECLARE _Decimals TINYINT(4);
    DECLARE _blSign TINYINT(4);
    DECLARE _mainType INT (11);
    DECLARE _Level TINYINT(4);

    DECLARE _NewOrderQty decimal(11,2);
    DECLARE _OldOrderQty decimal(11,2);
    DECLARE _NewStockQty decimal(11,2);
    DECLARE _NewAddQty  decimal(11,2);
    DECLARE _NewFactualQty decimal(11,2);
    DECLARE _ChangeQty decimal(11,2);

    DECLARE _NewSemiQty decimal(11,2);
    DECLARE _RunCounts TINYINT(4);
    DECLARE _RepeatCounts TINYINT(4);
    DECLARE _semiCounts INT DEFAULT 0;
    DECLARE _MainTypes MEDIUMINT(9);
    DECLARE _FoundSign TINYINT(4);
    DECLARE _updateSign TINYINT(4);

    DECLARE _setProperty MEDIUMINT(9);
    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE _callError INTEGER DEFAULT 0;
    DECLARE _recount TINYINT(4);
    DECLARE i INT DEFAULT 1;
    DECLARE _done INT DEFAULT -1;


    declare myCursor cursor for SELECT S.Level,S.Mid,S.StockId,S.StuffId,S.Relation,S.OrderQty,S.StockQty,S.AddQty,S.FactualQty,U.Decimals,IFNULL(P.Property,0) AS Property,E.blSign,T.mainType
                FROM cg1_stocksheet  S
                LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
                LEFT JOIN stuffunit U ON U.Id=D.Unit
                LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                LEFT JOIN stuffmaintype E ON E.Id=T.mainType
                LEFT JOIN  stuffproperty  P  ON P.StuffId=S.StuffId AND P.Property=getSysConfig(101)
				WHERE S.POrderId=IN_POrderId AND S.Level=1 ORDER BY S.Id;

    declare myCursor2 cursor for SELECT S.Level,G.Id,G.StockId,SUM(G.OrderQty) AS NewOrderQty,SUM(G.OldQty) AS OldOrderQty,S.Mid,S.StuffId,S.OrderQty,S.StockQty,S.AddQty,S.FactualQty,U.Decimals,IFNULL(P.Property,0) AS Property,E.blSign,T.mainType
                FROM cg1_semifinished G
                LEFT JOIN cg1_stocksheet S ON S.StockId=G.StockId
                LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
                LEFT JOIN stuffunit U ON U.Id=D.Unit
                LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                LEFT JOIN stuffmaintype E ON E.Id=T.mainType
                LEFT JOIN stuffproperty  P  ON P.StuffId=S.StuffId AND P.Property=getSysConfig(101)
				WHERE G.POrderId=IN_POrderId AND G.OldQty>0 GROUP BY G.StockId ORDER BY S.Id;

     declare myCursor3 cursor for SELECT S.StockId,IFNULL(G.OrderQty,0) AS OrderQty
                FROM yw1_scsheet S
                LEFT JOIN cg1_stocksheet G ON S.StockId=G.StockId
                WHERE S.POrderId=IN_POrderId  GROUP BY S.StockId ORDER BY S.StockId;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;



     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET _error=1;

     END;

    SELECT POrderId,ProductId,Qty,Price,scFrom,Estate FROM yw1_ordersheet WHERE POrderId=IN_POrderId AND Estate>0 AND Estate<4 LIMIT 1 INTO _POrderId,_ProductId,_Qty,_Price,_scFrom,_Estate;

    SELECT SUM(scQty) as scQty FROM yw1_scsheet WHERE POrderId=IN_POrderId AND ActionId='101' INTO _scQty;

    IF  _scQty IS NULL THEN

       SET  _scQty = 0 ;

    END IF ;

    SET _setProperty=CONVERT(getSysConfig(101),signed);

    SET  _MainTypes=getSysConfig(103);


    START TRANSACTION;

    IF  _ProductId>0 AND _scQty<=IN_NewQty  THEN



         UPDATE yw1_ordersheet SET Qty=IN_NewQty,PackRemark=concat(PackRemark,'(订单数量更新:',_Qty,'=>',IN_NewQty,')') WHERE  POrderId=_POrderId;


         open myCursor;

        myLoop: LOOP


        fetch myCursor into _Level,_Mid,_StockId,_StuffId,_Relation,_OrderQty,_StockQty,_AddQty,_FactualQty,_Decimals,_Property,_blSign,_mainType;

        if _done = 1  then
            leave myLoop;
        end if;


       IF  ISNULL(_Relation) OR LENGTH(_Relation)<=0 THEN
           SET _Relation=CONCAT((_OrderQty/_Qty),'');
       END IF;

       SET _NewOrderQty=getRelationQty(IN_NewQty,_Relation,_Decimals);


       IF _blSign=0 THEN
            UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,FactualQty=_NewOrderQty WHERE StockId=_StockId;
       ELSE
         SET _updateSign=1;
         SET _NewAddQty=_AddQty;
         SET _NewStockQty=_StockQty;
         SET _NewFactualQty=_FactualQty;

        IF (IN_NewQty>_Qty) THEN

          SET _ChangeQty=_NewOrderQty-_OrderQty;
          IF ((_Mid=0 AND FIND_IN_SET(_mainType,_MainTypes)=0) OR _Property=_setProperty) THEN
               SET _NewFactualQty=_FactualQty+_ChangeQty;
          ELSE

              SET _updateSign=0;
              CALL proc_cg1_stocksheet_addnew(IN_POrderId,_StuffId,_ChangeQty,IN_Operator,_callError);
              IF _callError>0 THEN
                   SET _log=CONCAT(_log,'配件',_StuffId,'增购采购数量:',_ChangeQty,'失败！<br>');
                   SET _error=1;
              ELSE
                  SET _log=CONCAT(_log,'配件',_StuffId,'增购采购数量:',_ChangeQty,'成功.<br>');

                  UPDATE cg1_stocksheet SET Relation=CONCAT(_OrderQty,'/',IN_NewQty) WHERE StockId=_StockId;
              END IF;
          END IF;
        ELSE

              SET _ChangeQty=_OrderQty-_NewOrderQty;
              IF (_Mid=0 OR _Property=_setProperty) THEN
                 IF (_StockQty>=_NewOrderQty) THEN
                    SET _NewFactualQty=0;
                    SET _NewStockQty=_NewOrderQty;
                 ELSE
                    SET _NewFactualQty=_NewOrderQty-_StockQty;
                 END IF;
              ELSE
                IF _StockQty>=_NewOrderQty THEN
                     SET _NewStockQty=_NewOrderQty;
                     SET _NewAddQty=_AddQty+_FactualQty;
                     SET _NewFactualQty = 0;
                   ELSE
                     SET _NewFactualQty=_NewOrderQty-_StockQty;
                     SET _NewAddQty=_AddQty+_ChangeQty;
                END IF;
             END IF;
          END IF;

           IF _updateSign=1 THEN
            UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,StockQty=_NewStockQty,AddQty=_NewAddQty,FactualQty=_NewFactualQty WHERE StockId=_StockId;

            SET _NewSemiQty=_NewAddQty+_NewFactualQty;

            CALL proc_cg1_semifinished_updateqty(IN_POrderId,_StockId,_NewSemiQty,IN_Operator,_semiCounts,_callError);
            IF _callError=1 THEN
                    SET _log=CONCAT(_log,'更新采单半成品数据记录',_StockId,'资料失败！<br>');
                    SET _error=1;
            END IF;

          END IF;
      END IF;
      END LOOP  myLoop;

      close myCursor;


     SET _log=CONCAT(_log,'Step 1 error:',_error,'<br>');


    IF _error=0 THEN
       SET _RepeatCounts=0;
       REPEAT
           open myCursor2;
           SET _done=-1;
           SET _RunCounts=0;
           myLoop2: LOOP
               fetch myCursor2 into _Level,_Id,_StockId,_NewOrderQty,_OldOrderQty,_Mid,_StuffId,_OrderQty,_StockQty,_AddQty,_FactualQty,_Decimals,_Property,_blSign,_mainType;

              if _done = 1 OR  _error=1  then
                  leave myLoop2;
             end if;

             IF _blSign=0 THEN
                 SET _ChangeQty=_NewOrderQty-_OldOrderQty;
                 UPDATE cg1_stocksheet SET OrderQty=_OrderQty+_ChangeQty,FactualQty=_FactualQty+_ChangeQty WHERE StockId=_StockId;
                 UPDATE cg1_semifinished SET OldQty=0 WHERE Id=_Id AND OldQty>0;
                 SET _log=CONCAT(_log,'配件',_StuffId,'采购数量:',_NewOrderQty,'更新成功.<br>');
             ELSE

                 SET _updateSign=1;
				 SET _NewAddQty=_AddQty;
				 SET _NewStockQty=_StockQty;
                 SET _NewFactualQty=_FactualQty;
                 SET _ChangeQty=_NewOrderQty-_OldOrderQty;

			     IF (_ChangeQty>0) THEN

                   SET _NewOrderQty=_OrderQty+_ChangeQty;
                   IF (_Mid=0 OR _Property=_setProperty) THEN
                         SET _NewFactualQty=_FactualQty+_ChangeQty;
                   ELSE

                        SET _updateSign=0;
                        CALL proc_cg1_stocksheet_addnew(IN_POrderId,_StuffId,_ChangeQty,IN_Operator,_callError);
                        IF _callError>0 THEN
                             SET _error=1;
                             SET _log=CONCAT(_log,'配件',_StuffId,'增购采购数量失败！');
                          ELSE
                             SET _log=CONCAT(_log,'配件',_StuffId,'增购采购数量:',_ChangeQty,'成功.<br>');
                        END IF;
                    END IF;
               ELSE

                SET _ChangeQty=_OldOrderQty-_NewOrderQty;
                SET _NewOrderQty=_OrderQty-_ChangeQty;

                 IF _StockQty>=_NewOrderQty THEN
                      SET _NewStockQty=_NewOrderQty;
                   ELSE
                      SET _NewFactualQty=_NewOrderQty-_StockQty;
                  END IF;

                IF (_Mid=0 OR _Property=_setProperty) THEN
                    IF _StockQty>=_NewOrderQty THEN
                      SET _NewStockQty = _NewOrderQty;
                      SET _NewFactualQty = 0;
                   ELSE
                      SET _NewFactualQty=_NewOrderQty-_StockQty;
                   END IF;
                ELSE
                   IF _StockQty>=_NewOrderQty THEN
                      SET _NewStockQty=_NewOrderQty;
                      SET _NewAddQty=_AddQty+_ChangeQty;
                      SET _NewFactualQty = 0;
                   ELSE
                      SET _NewFactualQty=_NewOrderQty-_StockQty;
                      SET _NewAddQty=_AddQty+_ChangeQty;
                   END IF;
               END IF;
           END IF;


           IF  _updateSign=1 THEN
              UPDATE cg1_stocksheet SET OrderQty=_NewOrderQty,StockQty=_NewStockQty,AddQty=_NewAddQty,FactualQty=_NewFactualQty WHERE StockId=_StockId;

              SET _log=CONCAT(_log,'配件',_StuffId,'采购数量:',_NewOrderQty,'更新成功.<br>');

              SET _NewSemiQty=_NewAddQty+_NewFactualQty;
              CALL proc_cg1_semifinished_updateqty(IN_POrderId,_StockId,_NewSemiQty,IN_Operator,_semiCounts,_callError);

              IF _callError=1 THEN
                    SET _error=1;
                    SET _log=CONCAT(_log,_StockId,'更新半成品记录失败！<br>');
                 ELSE
                    IF _semiCounts>0 THEN
                        SET _log=CONCAT(_log,_StockId,'更新半成品记录成功.<br>');
                    END IF;
              END IF;
            END IF;

            UPDATE cg1_semifinished SET OldQty=0 WHERE Id=_Id AND OldQty>0;
          END IF;
              SET _RunCounts=_RunCounts+1;
       END LOOP  myLoop2;

       close myCursor2;
       SET _RepeatCounts=_RepeatCounts+1;
       UNTIL _RunCounts=0 OR _error=1 OR _RepeatCounts>=10  END REPEAT;

     IF IN_NewQty<_Qty AND _RepeatCounts>0 THEN

        DELETE FROM cg1_semifinished WHERE POrderId=IN_POrderId AND OrderQty<=0;
        DELETE FROM cg1_stocksheet WHERE  POrderId=IN_POrderId AND Level>1 AND OrderQty<=0 AND AddQty<=0;
     END IF;
   END IF;

    SET _log=CONCAT(_log,'Step 2 error:',_error,',RepeatCounts:',_RepeatCounts,'<br>');

    IF _error=0 THEN
       SET _done=-1;
       open myCursor3;
           myLoop3: LOOP
                 fetch myCursor3 into _StockId,_NewOrderQty;

                 if _done = 1  then
                    leave myLoop3;
                 end if;
                 IF _NewOrderQty=0 THEN
                    DELETE FROM yw1_scsheet WHERE POrderId=IN_POrderId AND StockId=IN_StockId;
                 ELSE
                    CALL proc_yw1_scsheet_updateQty(IN_POrderId,_StockId,_NewOrderQty,IN_Operator,_callError);
                    IF _callError=1 THEN
                          SET _error=1;
                    END IF;
                 END IF;
          END LOOP  myLoop3;

         close myCursor3;
    END IF;

    SET _log=CONCAT(_log,'Step 3 error:',_error,'<br>');
    INSERT INTO yw1_orderchange (POrderId, OldQty,Qty, Date, Operator) VALUES (_POrderId,_Qty,IN_NewQty, CURDATE(),IN_Operator);

    IF _scQty=IN_NewQty THEN
         UPDATE yw1_ordersheet SET scFrom=0 WHERE  POrderId=_POrderId;
    END IF;

    UPDATE yw1_ordersheet Y
	      LEFT JOIN(SELECT SUM(Qty) AS Qty,POrderId FROM ch1_shipsheet WHERE POrderId=_POrderId)A ON A.POrderId=Y.POrderId
          SET  Y.Estate=0
	      WHERE Y.POrderId=_POrderId AND A.Qty=Y.Qty AND Y.Estate>0;

   ELSEIF _scQty>IN_NewQty THEN
        SET _error=1;
        SET _log=CONCAT('订单:',_POrderId,'已生产数量：',_scQty,'大于',IN_NewQty,'<br>');
     ELSE
        SET _log=CONCAT('读取订单:',_POrderId,'资料失败！');
   END IF;

   IF LENGTH(_POrderId)>0 THEN
     SET _recount = setOrderCostPrice(_POrderId);
   END IF;

    IF _error = 1 THEN
            ROLLBACK;
             SET _log=CONCAT(_log,'订单:',_POrderId,'的数量更新：',_Qty,'=>',IN_NewQty,'失败！<br>');
        ELSE
              COMMIT;

            SET _log=CONCAT(_log,'订单:',_POrderId,'的数量更新：',_Qty,'=>',IN_NewQty,'成功!<br>');
            SET _OperationResult="Y";
    END IF;

    INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'订单数量','更新',IN_Operator,_log,_OperationResult);

    SELECT _POrderId AS POrderId,_OperationResult AS OperationResult,_log AS OperationLog;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_add`(IN IN_POrderId varchar(12),IN IN_Id INT(11),IN IN_Operator mediumint(9),OUT OUT_Error integer )
BEGIN

    declare _sPOrderId  VARCHAR(13);
    declare _StockId VARCHAR(15);
    declare _mStockId VARCHAR(15);
    declare _ActionId MIDDLEINT(9);
    declare _WorkShopId MIDDLEINT(9);
    declare _OrderQty decimal(11,2);
    declare _Level TINYINT(4);

    declare _done int default -1;



    declare myCursor cursor for SELECT G.`Level`,G.StockId,G.OrderQty,T.ActionId,T.WorkShopId,M.mStockId
           FROM cg1_stocksheet G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN cg1_semifinished M ON M.StockId=G.StockId
           WHERE G.POrderId=IN_POrderId AND G.Id>=IN_Id  AND FIND_IN_SET(T.mainType,getSysConfig(102))
              AND  NOT EXISTS(SELECT S.StockId FROM yw1_scsheet  S WHERE S.StockId=G.StockId);


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;


     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
       SET OUT_Error=1;


     END;

    SET  OUT_Error=0;

    SELECT MAX(sPOrderId) AS sPOrderId FROM yw1_scsheet WHERE POrderId=IN_POrderId OR sPOrderId LIKE CONCAT(RIGHT(IN_POrderId,10),'%')  INTO _sPOrderId;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Level,_StockId,_OrderQty,_ActionId,_WorkShopId,_mStockId;


        if _done = 1 then
            leave myLoop;
        end if;



         IF LENGTH(_sPOrderId)>10 AND _sPOrderId IS NOT NULL THEN
              SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
           ELSE
              SET _sPOrderId=CONCAT(SUBSTR(IN_POrderId,3),'001');
        END IF;

        INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,Level,Type,ScFrom,Qty,Estate,Remark,Date,Operator) VALUES (_sPOrderId,IN_POrderId,_mStockId,_StockId,_ActionId,_WorkShopId,_Level,0,1,_OrderQty,1,'新单重置',CURDATE(),IN_Operator);

    END LOOP  myLoop;


    close myCursor;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_check
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_check`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_check`(IN IN_POrderId varchar(12),IN IN_StockId  varchar(15),IN IN_Operator mediumint(9))
BEGIN

    declare _sPOrderId  VARCHAR(13);
    declare _StockId VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _Qty decimal(11,2);
    declare _Level TINYINT(4);
    declare _Counts TINYINT(4);

    declare _done int default -1;
    declare _RunCount INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;



    declare myCursor cursor for  SELECT A.StockId,A.Qty,A.OrderQty FROM (
         SELECT G.StockId,SUM(G.OrderQty) AS Qty,O.OrderQty
         FROM yw1_scsheet S
         LEFT JOIN yw1_stocksheet G ON G.sPOrderId=S.sPOrderId
         LEFT JOIN cg1_stocksheet O ON O.StockId=G.StockId
         WHERE S.POrderId=IN_POrderId and S.StockId=IN_StockId GROUP BY G.StockId
     )A WHERE A.Qty!=A.OrderQty;

    declare myCursor2 cursor for  SELECT A.StockId,A.Qty,A.OrderQty FROM (
         SELECT G.StockId,SUM(G.OrderQty) AS Qty,O.OrderQty
         FROM yw1_scsheet S
         LEFT JOIN cg1_semifinished M ON M.StockId=S.StockId
         LEFT JOIN yw1_stocksheet G ON G.sPOrderId=S.sPOrderId
         LEFT JOIN cg1_semifinished O ON O.mStockId=M.mStockId AND O.StockId=G.StockId
         WHERE S.POrderId=IN_POrderId and S.StockId=IN_StockId GROUP BY G.StockId
     )A WHERE A.Qty!=A.OrderQty;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    SELECT sPOrderId,Level,COUNT(1) AS Counts FROM yw1_scsheet WHERE POrderId=IN_POrderId AND StockId=IN_StockId INTO _sPOrderId,_Level,_Counts;

    IF _Level=1 THEN
         open myCursor;
    ELSE
        open myCursor2;
    END IF;

    myLoop: LOOP


        IF _Level=1 THEN
            fetch myCursor into _StockId,_Qty,_OrderQty;
         ELSE
            fetch myCursor2 into _StockId,_Qty,_OrderQty;
         END IF;

        if _done = 1 then
            leave myLoop;
        end if;

        SET _RunCount=_RunCount+1;
        UPDATE yw1_stocksheet SET OrderQty=OrderQty+(_OrderQty-_Qty) WHERE sPOrderId=_sPOrderId AND StockId=_StockId;
        set _log = CONCAT(_log,_StockId,"的数量增加(",_OrderQty-_Qty,")<br>");

    END LOOP  myLoop;



     IF _Level=1 THEN
        close myCursor;
     ELSE
        close myCursor2;
     END IF;

    IF (_RunCount>0) THEN

       IF _error = 1 THEN
            set _log = CONCAT("生产工单(",_sPOrderId,")备料明细表更新失败！<br>",_log);
        ELSE
            set _log = CONCAT("生产工单(",_sPOrderId,")备料明细表更新成功！<br>",_log);
            set _OperationResult='Y';
        END IF;
        INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'生产工单','更新备料表',IN_Operator,_log,_OperationResult);
        SELECT _log;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_events
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_events`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_events`(IN IN_Start varchar(12))
BEGIN

    declare _sPOrderId  VARCHAR(13) default '';
    declare _POrderId VARCHAR(12);
    declare _mStockId VARCHAR(15);
    declare _StockId VARCHAR(15);
    declare _ActionId MIDDLEINT(9);
    declare _WorkShopId MIDDLEINT(9);
    declare _OrderQty decimal(11,2);
    declare _Level TINYINT(4);
    declare _Operator MIDDLEINT(9);
    declare OUT_Error TINYINT(4);
    declare _done int default -1;


    declare myCursor cursor for SELECT G.POrderId,G.`Level`,G.StockId,IF (G.Level=1,G.OrderQty,G.AddQty+G.FactualQty) AS OrderQty,T.ActionId,T.WorkShopId,M.mStockId,G.Operator
           FROM cg1_stocksheet G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN cg1_semifinished M ON M.StockId=G.StockId
           LEFT JOIN yw1_scsheet S ON S.StockId=G.StockId
           WHERE G.blSign=0 AND T.mainType IN (getSysConfig(102))  AND S.StockId IS NULL GROUP BY G.StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
       SET OUT_Error=1;
       SELECT _Level,_StockId,_OrderQty,_ActionId,_WorkShopId;
       SHOW ERRORS;
     END;

    SET OUT_Error=0;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _POrderId,_Level,_StockId,_OrderQty,_ActionId,_WorkShopId,_mStockId,_Operator;


        if _done = 1 then
            leave myLoop;
        end if;

        SELECT MAX(sPOrderId) AS sPOrderId FROM yw1_scsheet WHERE POrderId=_POrderId OR sPOrderId LIKE CONCAT(RIGHT(_POrderId,10),'%') INTO _sPOrderId;

        IF LENGTH(_sPOrderId)>10 AND (_sPOrderId IS NOT NULL) THEN
              SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
           ELSE
              SET _sPOrderId=CONCAT(SUBSTR(_POrderId,3),'001');
        END IF;

        INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,scLineId,Level,Type,ScFrom,Qty,Estate,Date,Operator) VALUES (_sPOrderId,_POrderId,_mStockId,_StockId,_ActionId,_WorkShopId,0,_Level,0,1,_OrderQty,1,CURDATE(),_Operator);


    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_insert
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_insert`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_insert`(IN IN_POrderId varchar(12),IN IN_Operator mediumint(9),OUT OUT_Error integer)
BEGIN

    declare _sPOrderId  VARCHAR(13) default '';
    declare _mStockId VARCHAR(15);
    declare _StockId VARCHAR(15);
    declare _ActionId MIDDLEINT(9);
    declare _WorkShopId MIDDLEINT(9);
    declare _OrderQty decimal(11,2);
    declare _Level TINYINT(4);

    declare _done int default -1;


    declare myCursor cursor for SELECT G.`Level`,G.StockId,G.OrderQty,T.ActionId,T.WorkShopId,M.mStockId
           FROM cg1_stocksheet G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN cg1_semifinished M ON M.StockId=G.StockId
           WHERE G.POrderId=IN_POrderId  AND T.mainType IN (getSysConfig(102)) GROUP BY G.StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
       SET OUT_Error=1;


     END;

    SET OUT_Error=0;
    DELETE FROM yw1_scsheet WHERE POrderId=IN_POrderId;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Level,_StockId,_OrderQty,_ActionId,_WorkShopId,_mStockId;


        if _done = 1 then
            leave myLoop;
        end if;

        IF LENGTH(_sPOrderId)>10 THEN
              SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
           ELSE
              SET _sPOrderId=CONCAT(SUBSTR(IN_POrderId,3),'001');
        END IF;

        INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,scLineId,Level,Type,ScFrom,Qty,Estate,Remark,Date,Operator) VALUES (_sPOrderId,IN_POrderId,_mStockId,_StockId,_ActionId,_WorkShopId,0,_Level,0,1,_OrderQty,1,'新增业务订单',CURDATE(),IN_Operator);


    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_renew
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_renew`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_renew`(IN IN_POrderId varchar(12) )
BEGIN

    declare _sPOrderId  VARCHAR(13) default '';
    declare _POrderId VARCHAR(12);
    declare _mStockId VARCHAR(15);
    declare _StockId VARCHAR(15);
    declare _ActionId MIDDLEINT(9);
    declare _WorkShopId MIDDLEINT(9);
    declare _OrderQty decimal(11,2);
    declare _Level TINYINT(4);
    declare _Operator MIDDLEINT(9);

    declare _done int default -1;
    declare _error int default 0;

    declare myCursor cursor for SELECT G.POrderId,G.`Level`,G.StockId,G.OrderQty,T.ActionId,T.WorkShopId,M.mStockId,G.Operator
           FROM cg1_stocksheet G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN cg1_semifinished M ON M.StockId=G.StockId
           LEFT JOIN yw1_scsheet S ON S.StockId=G.StockId
           WHERE G.POrderId=IN_POrderId AND G.blSign=0 AND  FIND_IN_SET(T.mainType,getSysConfig(102))>0  AND S.StockId IS NULL GROUP BY G.StockId;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
       SET _error=1;


     END;

    SET _error=0;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _POrderId,_Level,_StockId,_OrderQty,_ActionId,_WorkShopId,_mStockId,_Operator;


        if _done = 1 then
            leave myLoop;
        end if;

        SELECT MAX(sPOrderId) AS sPOrderId FROM yw1_scsheet WHERE POrderId=_POrderId OR sPOrderId LIKE CONCAT(RIGHT(_POrderId,10),'%')  INTO _sPOrderId;

        IF LENGTH(_sPOrderId)>10 AND (_sPOrderId IS NOT NULL) THEN
              SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
           ELSE
              SET _sPOrderId=CONCAT(SUBSTR(_POrderId,3),'001');
        END IF;

        INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,scLineId,Level,Type,ScFrom,Qty,Remark,Estate,Date,Operator) VALUES (_sPOrderId,_POrderId,_mStockId,_StockId,_ActionId,_WorkShopId,0,_Level,0,1,_OrderQty,'renew',1,CURDATE(),_Operator);


    END LOOP  myLoop;


    close myCursor;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_retset
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_retset`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_retset`(IN IN_POrderId varchar(12),IN IN_StockId  varchar(15),IN IN_Operator mediumint(9))
BEGIN

    declare _sPOrderId  VARCHAR(13);
    declare _StockId VARCHAR(15);
    declare _OrderQty decimal(11,2);
    declare _Qty decimal(11,2);
    declare _Level TINYINT(4);
    declare _Counts TINYINT(4);

    declare _done int default -1;
    declare _RunCount INTEGER DEFAULT 0;
    declare _log TEXT default '';
    declare _OperationResult VARCHAR(4) default "N";
    declare _error INTEGER DEFAULT 0;



    declare myCursor cursor for  SELECT A.StockId,A.Qty,A.OrderQty FROM (
         SELECT G.StockId,SUM(G.OrderQty) AS Qty,O.OrderQty
         FROM yw1_scsheet S
         LEFT JOIN yw1_stocksheet G ON G.sPOrderId=S.sPOrderId
         LEFT JOIN cg1_stocksheet O ON O.StockId=G.StockId
         WHERE S.POrderId=IN_POrderId and S.StockId=IN_StockId GROUP BY G.StockId
     )A WHERE A.Qty!=A.OrderQty;

    declare myCursor2 cursor for  SELECT A.StockId,A.Qty,A.OrderQty FROM (
         SELECT G.StockId,SUM(G.OrderQty) AS Qty,O.OrderQty
         FROM yw1_scsheet S
         LEFT JOIN cg1_semifinished M ON M.StockId=S.StockId
         LEFT JOIN yw1_stocksheet G ON G.sPOrderId=S.sPOrderId
         LEFT JOIN cg1_semifinished O ON O.mStockId=M.mStockId AND O.StockId=G.StockId
         WHERE S.POrderId=IN_POrderId and S.StockId=IN_StockId GROUP BY G.StockId
     )A WHERE A.Qty!=A.OrderQty;


    DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    SELECT sPOrderId,Level,COUNT(1) AS Counts FROM yw1_scsheet WHERE POrderId=IN_POrderId AND StockId=IN_StockId INTO _sPOrderId,_Level,_Counts;

    IF _Level=1 THEN
         open myCursor;
    ELSE
        open myCursor2;
    END IF;

    myLoop: LOOP


        IF _Level=1 THEN
            fetch myCursor into _StockId,_Qty,_OrderQty;
         ELSE
            fetch myCursor2 into _StockId,_Qty,_OrderQty;
         END IF;

        if _done = 1 then
            leave myLoop;
        end if;

        SET _RunCount=_RunCount+1;
        UPDATE yw1_stocksheet SET OrderQty=OrderQty+(_OrderQty-_Qty) WHERE sPOrderId=_sPOrderId AND StockId=_StockId;
        set _log = CONCAT(_log,_StockId,"的数量增加(",_OrderQty-_Qty,")<br>");

    END LOOP  myLoop;



     IF _Level=1 THEN
        close myCursor;
     ELSE
        close myCursor2;
     END IF;

    IF (_RunCount>0) THEN

       IF _error = 1 THEN
            set _log = CONCAT("生产工单(",_sPOrderId,")备料明细表更新失败！<br>",_log);
        ELSE
            set _log = CONCAT("生产工单(",_sPOrderId,")备料明细表更新成功！<br>",_log);
            set _OperationResult='Y';
        END IF;
        INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'生产工单','更新备料表',IN_Operator,_log,_OperationResult);
        SELECT _log;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_updated
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_updated`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_updated`(IN IN_POrderId VARCHAR(12), IN IN_sPOrderId VARCHAR(2000), IN IN_Qty VARCHAR(2000), IN IN_WorkShopId VARCHAR(2000), IN IN_LockSign varchar(2000), IN IN_Operator mediumint(9))
BEGIN

    DECLARE _Id VARCHAR(12);
    DECLARE _sPOrderId VARCHAR(13);
    DECLARE _PIds VARCHAR(2000) DEFAULT '';
    DECLARE _Qty decimal(11,2);
    DECLARE _oldQty decimal(11,2);
    DECLARE _scQty decimal(11,2);
    DECLARE _StockId VARCHAR(15);
    DECLARE _Level TINYINT(4);
    DECLARE _ActionId MIDDLEINT(9);
    DECLARE _oldWorkShopId MIDDLEINT(9);
    DECLARE _WorkShopId MIDDLEINT(9);
    DECLARE _LockSign MIDDLEINT(9);
    DECLARE i INT DEFAULT 1;
    DECLARE _len MEDIUMINT(9);
    DECLARE _mStockId  VARCHAR(15);

    DECLARE _log TEXT DEFAULT '';

    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _error INTEGER DEFAULT 0;
    DECLARE _done INT DEFAULT -1;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

    SET IN_sPOrderId=CONCAT(IN_sPOrderId,'|');
    SET IN_Qty=CONCAT(IN_Qty,'|');
    SET _len=substrCount(IN_sPOrderId,'|');

    SET _sPOrderId=strSplit(IN_sPOrderId,'|',1);

    SELECT mStockId,StockId,ActionId,Level FROM yw1_scsheet  WHERE POrderId=IN_POrderId AND sPOrderId=_sPOrderId INTO _mStockId,_StockId,_ActionId,_Level;


    START TRANSACTION;

    myWhile:WHILE(i<=_len AND _error=0) DO
        SET _sPOrderId=strSplit(IN_sPOrderId,'|',i);
        SET _Qty=strSplit(IN_Qty,'|',i);
        SET _WorkShopId=strSplit(IN_WorkShopId,'|',i);
        SET _LockSign =strSplit(IN_LockSign,'|',i);

        IF _Qty=-1 THEN
            DELETE FROM yw1_scsheet WHERE POrderId=IN_POrderId AND sPOrderId=_sPOrderId;
            DELETE FROM ck5_llsheet WHERE POrderId=IN_POrderId AND sPOrderId=_sPOrderId;
        ELSE
          IF LENGTH(_sPOrderId)<13 OR _sPOrderId=0 THEN

              SELECT MAX(sPOrderId) AS sPOrderId FROM yw1_scsheet WHERE sPOrderId LIKE CONCAT(SUBSTR(IN_POrderId,3,10),'%')  INTO _sPOrderId;


              IF _sPOrderId IS NULL THEN
                   SET _sPOrderId=CONCAT(SUBSTR(IN_POrderId,3,10),'001');
                ELSE
                   SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
              END IF;

              INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,Level,Type,ScFrom,Qty,Remark,Estate,Date,Operator) VALUES (_sPOrderId,IN_POrderId,_mStockId,_StockId,_ActionId,_WorkShopId,_Level,0,1,_Qty,'生产工单设置更新',1,CURDATE(),IN_Operator);
          ELSE
             SELECT Id,Qty,scQty,WorkShopId FROM yw1_scsheet WHERE POrderId=IN_POrderId AND sPOrderId=_sPOrderId INTO _Id,_oldQty,_scQty,_oldWorkShopId;

             IF _Qty!=_oldQty AND _scQty<=_Qty THEN

                 UPDATE yw1_scsheet SET Qty=_Qty WHERE Id=_Id;

              ELSE
                 IF _scQty>_Qty THEN
                    SET _error=1;
                 END IF;
             END IF;

            IF _WorkShopId!=_oldWorkShopId THEN
                UPDATE yw1_scsheet SET WorkShopId=_WorkShopId WHERE Id=_Id;
            END IF;
         END IF;

         IF _LockSign = 1 THEN

               REPLACE INTO yw1_sclock(sPOrderId,Estate,Locks,Remark,Date,Operator) VALUES (_sPOrderId,'1','0','自动锁单',CURDATE(),IN_Operator);

         END IF ;

       END IF;
       SET i=i+1;
    END WHILE;

   IF _error = 1 THEN
            ROLLBACK;
            set _log = CONCAT(IN_POrderId,"生产工单设置更新失败！");
        ELSE


             COMMIT;
            set _log = CONCAT(IN_POrderId,"生产工单设置更新成功！");
            set _OperationResult='Y';
        END IF;

   INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'生产工单设置','保存',IN_Operator,_log,_OperationResult);

   SELECT _OperationResult AS OperationResult,_log AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_updateQty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_updateQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_updateQty`(IN IN_POrderId VARCHAR(12),IN IN_StockId VARCHAR(15), IN IN_NewQty decimal(11,2),  IN IN_Operator mediumint(9),OUT OUT_Error integer)
BEGIN

    DECLARE _Id INT(11);
    DECLARE _lastId INT(11);
    DECLARE _Qty decimal(11,2);
    DECLARE _changeQty decimal(11,2);
    DECLARE _oldQty decimal(11,2) DEFAULT 0;
    DECLARE _scFrom TINYINT(4);
    DECLARE _Estate TINYINT(4);
    DECLARE _lastEstate TINYINT(4);
    DECLARE _DelSign TINYINT(4) DEFAULT 0;
    DECLARE _changeSign TINYINT(4) DEFAULT 0;
    DECLARE _blSign TINYINT(4) DEFAULT 0;

    DECLARE _sPOrderId  VARCHAR(13);
    DECLARE _mStockId  VARCHAR(15);
    DECLARE _ActionId MIDDLEINT(9);
    DECLARE _WorkShopId MIDDLEINT(9);

    DECLARE _log TEXT DEFAULT '';

    DECLARE _OperationResult VARCHAR(4) DEFAULT "N";
    DECLARE _done INT DEFAULT -1;

    declare myCursor cursor for SELECT Id,sPOrderId,Qty,Estate
                FROM yw1_scsheet
				WHERE  StockId=IN_StockId  ORDER BY Id DESC;

    DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;


    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
         SET OUT_Error=1;

     END;

    SELECT SUM(Qty) AS TotalQty FROM yw1_scsheet  WHERE StockId=IN_StockId INTO _oldQty;


    IF IN_NewQty>_oldQty THEN

         SET _changeQty=IN_NewQty-_oldQty;

         open myCursor;
         myLoop: LOOP
            fetch myCursor into _Id,_sPOrderId,_Qty,_Estate;

            if _done = 1  then
                   leave myLoop;
            end if;
            SELECT COUNT(*) AS blSign FROM  ck5_llsheet WHERE sPOrderId=_sPOrderId INTO _blSign;
            IF _Estate=1 AND _blSign=0 THEN
                UPDATE yw1_scsheet SET Qty=Qty+_changeQty WHERE Id=_Id;
                SET _changeSign=1;
                 leave myLoop;
            END IF;

         END LOOP  myLoop;

         close myCursor;

         IF _changeSign=0 THEN
                    SELECT MAX(sPOrderId) AS sPOrderId FROM yw1_scsheet WHERE POrderId=IN_POrderId OR sPOrderId LIKE CONCAT(RIGHT(IN_POrderId,10),'%')  INTO _sPOrderId;

                    SELECT mStockId,ActionId,WorkShopId FROM yw1_scsheet WHERE StockId=IN_StockId  INTO _mStockId,_ActionId,_WorkShopId;

                    SET _sPOrderId=CONCAT(CONVERT(_sPOrderId,signed)+1,'');
                    INSERT INTO yw1_scsheet (sPOrderId,POrderId,mStockId,StockId,ActionId,WorkShopId,Level,Type,ScFrom,Qty,Remark,Estate,Date,Operator) VALUES (_sPOrderId,IN_POrderId,_mStockId,IN_StockId,_ActionId,_WorkShopId,0,0,1,_changeQty,'订单数量变更',1,CURDATE(),IN_Operator);
         END IF;

     ELSE
       IF  IN_NewQty<_oldQty THEN

         SET _changeQty=_oldQty-IN_NewQty;
        open myCursor;
         myLoop: LOOP
            fetch myCursor into _Id,_sPOrderId,_Qty,_Estate;

            if _done = 1  then
                   leave myLoop;
            end if;
            SELECT COUNT(*) AS blSign FROM  ck5_llsheet WHERE sPOrderId=_sPOrderId INTO _blSign;
            IF _Estate=1 AND _blSign=0 THEN
                IF _Qty=_changeQty THEN
                   DELETE FROM yw1_scsheet WHERE Id=_Id;
                   SET _changeQty=0;
                   leave myLoop;
                END IF;

                IF _Qty>_changeQty THEN
                     UPDATE yw1_scsheet SET Qty=Qty-_changeQty WHERE Id=_Id;
                     SET _changeQty=0;
                     leave myLoop;
                  ELSE
                     SET _changeQty=_changeQty-_Qty;
                     DELETE FROM yw1_scsheet WHERE Id=_Id;
                END IF;

            END IF;

         END LOOP  myLoop;

         close myCursor;

         IF _changeQty>0 THEN
             SET OUT_Error=1;
         END IF;
       END IF;
   END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_scsheet_updateScQty
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_scsheet_updateScQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_scsheet_updateScQty`(IN IN_sPOrderId varchar(13), IN IN_StockId varchar(15))
    DETERMINISTIC
BEGIN

   DECLARE _OrderQty decimal(11,2);
   DECLARE _ScQty  decimal(11,2);
   DECLARE _ScQty2 decimal(11,2);
   DECLARE _Price DECIMAL(11,2);
   DECLARE _ActionId MIDDLEINT(6);

   IF IN_sPOrderId>0 THEN
          SELECT S.Qty AS OrderQty,IFNULL(SUM(C.Qty),0) AS ScQty,S.Price,S.ScQty AS ScQty2,S.ActionId
          FROM yw1_scsheet S
          LEFT JOIN sc1_cjtj C ON C.sPOrderId = S.sPOrderId
          WHERE S.sPOrderId=IN_sPOrderId AND S.StockId = IN_StockId   INTO _OrderQty,_ScQty,_Price,_ScQty2,_ActionId;




     IF _ScQty>0  OR  _ScQty!=_ScQty2 THEN
         IF _OrderQty>_ScQty  THEN
             UPDATE yw1_scsheet SET ScQty =_ScQty,ScFrom =2,Estate=1  WHERE sPOrderId=IN_sPOrderId;
         ELSE
            IF (_ActionId=101) THEN
                   UPDATE yw1_scsheet SET ScQty =_ScQty,ScFrom = 0,Estate=0,FinishDate=NOW()  WHERE sPOrderId=IN_sPOrderId;
              ELSE
                  UPDATE yw1_scsheet SET ScQty =_ScQty,ScFrom = 0,Estate=2,FinishDate=NOW()  WHERE sPOrderId=IN_sPOrderId;
             END IF;
         END IF;
    END IF;
  END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for proc_yw1_stocksheet_add
-- ----------------------------
DROP PROCEDURE IF EXISTS `proc_yw1_stocksheet_add`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc_yw1_stocksheet_add`(IN IN_POrderId varchar(12),IN IN_StockId varchar(15),IN IN_Operator mediumint(9),OUT OUT_Error integer )
BEGIN

    declare _Level TINYINT(4);

    declare _error INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
    BEGIN
      SET _error=1;

    END;

    SELECT `Level` FROM cg1_stocksheet WHERE StockId=IN_StockId INTO _Level;

    IF _Level=1 AND LENGTH(IN_POrderId)=12 THEN
          INSERT INTO yw1_stocksheet (sPOrderId,POrderId,mStockId,StockId,StuffId,OrderQty,Date,Operator)
                  SELECT S.sPOrderId,S.POrderId,S.StockId,G.StockId,G.StuffId,ROUND(G.OrderQty*(S.Qty/Y.Qty),U.decimals),CURDATE(),IN_Operator
                  FROM  yw1_ordersheet Y
                  LEFT JOIN yw1_scsheet S ON S.POrderId=Y.POrderId
                  LEFT JOIN cg1_stocksheet G ON G.POrderId=S.POrderId
                  LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
                  LEFT JOIN stuffunit U ON U.Id=D.Unit
                  LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                  LEFT JOIN stuffmaintype TM ON TM.Id=T.mainType
                  WHERE Y.POrderId=IN_POrderId AND G.StockId=IN_StockId AND TM.blSign=1 GROUP BY S.sPOrderId;
       ELSE
           INSERT INTO yw1_stocksheet (sPOrderId,POrderId,mStockId,StockId,StuffId,OrderQty,Date,Operator)
                 SELECT S.sPOrderId,S.POrderId,S.StockId,G.StockId,G.StuffId,ROUND(G.OrderQty,U.decimals),CURDATE(),IN_Operator
                 FROM  yw1_scsheet S
                 LEFT JOIN cg1_semifinished G ON G.mStockId=S.mStockId
                 LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
                 LEFT JOIN stuffunit U ON U.Id=D.Unit
                 LEFT JOIN stufftype T ON T.TypeId=D.TypeId
                 LEFT JOIN stuffmaintype TM ON TM.Id=T.mainType
                 WHERE S.POrderId=IN_POrderId AND G.StockId=IN_StockId AND TM.blSign=1 GROUP BY S.sPOrderId;
       END IF;

    SET  OUT_Error=_error;

END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for setCgSemifinishedParentNode
-- ----------------------------
DROP PROCEDURE IF EXISTS `setCgSemifinishedParentNode`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `setCgSemifinishedParentNode`(IN_StockId varchar(15),IN_PLocks SMALLINT(4) )
BEGIN
    DECLARE _mStockId VARCHAR(21675);
    DECLARE _StockId VARCHAR(21675);
    DECLARE _Ids VARCHAR(21675);
    DECLARE _Locks SMALLINT(4) DEFAULT 0;
    DECLARE _RunCounts TINYINT DEFAULT 0;

    SET _mStockId=IN_StockId;

    REPEAT
          SELECT GROUP_CONCAT(G.StockId) AS StockId,GROUP_CONCAT(G.Id) AS Ids
             FROM cg1_semifinished G
             LEFT JOIN cg1_stocksheet S ON S.StockId=G.StockId
             WHERE  FIND_IN_SET(G.mStockId,_mStockId) AND S.blSign=1 INTO _StockId,_Ids;

           IF _Ids IS NOT NULL THEN
                IF (IN_PLocks=1) THEN
                   UPDATE cg1_semifinished SET PLocks=PLocks+1 WHERE FIND_IN_SET(Id,_Ids);
                ELSE
                  UPDATE cg1_semifinished SET PLocks=PLocks-1 WHERE FIND_IN_SET(Id,_Ids) AND PLocks>0;
               END IF;
           END IF;

           SET _RunCounts = _RunCounts+1;
           SET _mStockId   = _StockId;
       UNTIL (_mStockId IS NULL  OR  _RunCounts>=10) END REPEAT;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for setCgSemifinishedPLocks
-- ----------------------------
DROP PROCEDURE IF EXISTS `setCgSemifinishedPLocks`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `setCgSemifinishedPLocks`(IN_StockId varchar(15),IN_PLocks SMALLINT(4) )
BEGIN
    DECLARE _mStockId VARCHAR(21675);
    DECLARE _StockId VARCHAR(21675);
    DECLARE _Ids VARCHAR(21675);
    DECLARE _Locks SMALLINT(4) DEFAULT 0;
    DECLARE _RunCounts TINYINT DEFAULT 0;

    SET _mStockId=IN_StockId;

    REPEAT
          SELECT GROUP_CONCAT(G.StockId) AS StockId,GROUP_CONCAT(G.Id) AS Ids
             FROM cg1_semifinished G
             LEFT JOIN cg1_stocksheet S ON S.StockId=G.StockId
             WHERE  FIND_IN_SET(G.mStockId,_mStockId) AND S.blSign=1 INTO _StockId,_Ids;

           IF _Ids IS NOT NULL THEN
                IF (IN_PLocks=1) THEN
                   UPDATE cg1_semifinished SET PLocks=PLocks+1 WHERE FIND_IN_SET(Id,_Ids);
                ELSE
                  UPDATE cg1_semifinished SET PLocks=PLocks-1 WHERE FIND_IN_SET(Id,_Ids) AND PLocks>0;
               END IF;
           END IF;

           SET _RunCounts = _RunCounts+1;
           SET _mStockId   = _StockId;
       UNTIL (_mStockId IS NULL  OR  _RunCounts>=10) END REPEAT;
END
;;
DELIMITER ;

-- ----------------------------
-- Procedure structure for setScsheetReturnMaterial
-- ----------------------------
DROP PROCEDURE IF EXISTS `setScsheetReturnMaterial`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` PROCEDURE `setScsheetReturnMaterial`(IN_sPOrderId VARCHAR(13),IN_Operator mediumint(9))
    DETERMINISTIC
BEGIN

DECLARE _StuffId MEDIUMINT(9);
DECLARE _RkId  INT(11);
DECLARE _Qty decimal(11,2);

DECLARE _log TEXT DEFAULT '';
DECLARE _OperationResult VARCHAR(4) DEFAULT "N";

declare _done int default -1;
declare _error INTEGER DEFAULT 0;

declare myCursor cursor for  SELECT L.StuffId,L.Qty,L.RkId  FROM  ck5_llsheet L  WHERE  L.sPOrderId=IN_sPOrderId;

 DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

 START TRANSACTION;

    open myCursor;


    myLoop: LOOP


        fetch myCursor into _StuffId,_Qty,_RkId;


        if _done = 1 OR _error = 1 then
            leave myLoop;
        end if;

        UPDATE ck1_rksheet SET llQty=llQty-_Qty,llSign = IF(llQty=0,1,2) WHERE Id=_RkId;



    END LOOP  myLoop;

    close myCursor;

   IF _error = 0 THEN
      DELETE FROM ck5_llsheet WHERE sPOrderId=IN_sPOrderId;
   END IF;

     IF _error = 1 THEN

            ROLLBACK;
            set _log = CONCAT("工单流水号:",IN_sPOrderId,"退料失败！<br>");

        ELSE

             COMMIT;
            SET _OperationResult="Y";
            set _log = CONCAT("工单流水号:",IN_sPOrderId,"退料成功！<br>");

     END IF;

     INSERT INTO oprationlog (DateTime,Item,Funtion,Operator,Log,OperationResult) VALUES (NOW(),'工单更新','退料',IN_Operator,_log,_OperationResult);

     SELECT _OperationResult AS OperationResult,_log  AS OperationLog;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getCanStock
-- ----------------------------
DROP FUNCTION IF EXISTS `getCanStock`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getCanStock`(`IN_sPOrderId` VARCHAR(13), `IN_CheckSign` TINYINT(2)) RETURNS mediumint(6)
    SQL SECURITY INVOKER
BEGIN
   DECLARE _POrderId VARCHAR(12);
   DECLARE _mStockId VARCHAR(15);
   DECLARE _Level TINYINT(4);
   DECLARE _OrderQty decimal(11,2);
   DECLARE _Qty decimal(11,2);
   DECLARE _Relation decimal(12,2);
   DECLARE _Deviation DECIMAL(5,4);
   DECLARE _llSign MIDDLEINT(6);
   DECLARE _lackSign MIDDLEINT(6);
   DECLARE _blCount MIDDLEINT(6);
   DECLARE _llCount MIDDLEINT(6);
   DECLARE _Locks TINYINT(4);
   DECLARE _checkSign MIDDLEINT(6);
   DECLARE _ActionId MIDDLEINT(6);
   DECLARE _Decimals TINYINT(4);
   DECLARE _TResutl TINYINT(4);

SET _Deviation=0.0001;
SET _checkSign=0;

SELECT COUNT(1) AS Locks FROM yw1_sclock WHERE sPOrderId=IN_sPOrderId AND Locks=0 INTO _Locks;
IF _Locks=1 THEN
SET _TResutl = 0;
RETURN _TResutl;
   END IF;



SELECT POrderId,mStockId,Level,Qty,ActionId FROM yw1_scsheet WHERE sPOrderId=IN_sPOrderId INTO _POrderId,_mStockId,_Level,_Qty,_ActionId;
IF LENGTH(_POrderId)=12  THEN
SELECT COUNT(1) AS Locks FROM yw2_orderexpress WHERE POrderId=_POrderId AND Type=2 INTO _Locks;
IF _Locks=1 THEN
SET _TResutl = 0;
RETURN _TResutl;
      END IF;
   END IF;



IF _Level=1 AND _ActionId=101 THEN



SELECT Qty FROM yw1_ordersheet WHERE POrderId=_POrderId INTO _OrderQty;
SELECT SUM(IF(A.tStockQty>=ROUND(A.OrderQty-A.llQty-_Deviation,A.Decimals),0,1))  AS lackSign,SUM(A.llEstate) AS llSign,
             SUM(A.blCount) AS blCount,SUM(IF(ROUND(A.OrderQty-A.llQty,A.Decimals)<=_Deviation OR (lledQty+llQty)=Qty,1,0)) AS llCount
      FROM(
         SELECT 1 AS blCount,G.OrderQty AS Qty,ROUND(G.OrderQty*(_Qty/_OrderQty),U.Decimals) AS OrderQty,SUM(IFNULL(L.Qty,0)) AS llQty,SUM(IFNULL(L.Estate,0)) AS llEstate,K.tStockQty,U.Decimals,
               IF (IFNULL(LA.lledQty,0)>=G.OrderQty,1,0) AS bledSign,IFNULL(LA.lledQty,0) AS lledQty
         FROM  cg1_stocksheet G
         INNER JOIN stuffdata D ON D.StuffId=G.StuffId
         INNER JOIN stufftype T ON T.TypeId=D.TypeId
         INNER JOIN stuffmaintype M ON M.Id=T.mainType
         INNER JOIN stuffunit U ON U.Id=D.Unit
         INNER JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
         LEFT JOIN ck5_llsheet L ON L.sPOrderId=IN_sPOrderId AND L.StockId=G.StockId
         LEFT JOIN (
            SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=_POrderId AND sPOrderId!=IN_sPOrderId GROUP BY StockId
         )LA ON LA.StockId=G.StockId
         WHERE G.POrderId=_POrderId  AND G.Level=1 AND G.blSign=1
         GROUP BY G.StockId
       )A WHERE A.bledSign=0  INTO _lackSign,_llSign,_blCount,_llCount;
ELSE



SELECT (G.AddQty+G.FactualQty) AS Qty,U.Decimals FROM cg1_stocksheet G
            INNER JOIN stuffdata D ON D.StuffId=G.StuffId
            INNER JOIN stuffunit U ON U.Id=D.Unit
            WHERE G.StockId=_mStockId INTO _OrderQty,_Decimals;

SELECT  SUM(IF(YOrderQty=YllQty,0,IF(A.tStockQty>=ROUND(A.OrderQty,A.Decimals)-A.llQty-IF(A.OrderQty>=1,_Deviation,0),0,1))) AS lackSign,SUM(A.llEstate) AS llSign,
             SUM(A.blCount) AS blCount,SUM(IF(ROUND(A.OrderQty,A.Decimals)-A.llQty<=IF(A.OrderQty>=1,0.1,0),1,0)) AS llCount
      FROM(
         SELECT 1 AS blCount,(S.OrderQty*(_Qty/ROUND(_OrderQty,_Decimals))) AS OrderQty,SUM(IF(L.sPOrderId=IN_sPOrderId,L.Qty,0)) AS llQty,SUM(IFNULL(L.Estate,0)) AS llEstate,K.tStockQty,U.Decimals,
                G.OrderQty AS YOrderQty,SUM(IFNULL(L.Qty,0)) AS YllQty
         FROM cg1_semifinished S
         INNER JOIN cg1_stocksheet G ON G.StockId=S.StockId
         INNER JOIN stuffdata D ON D.StuffId=G.StuffId
         INNER JOIN stufftype T ON T.TypeId=D.TypeId
         INNER JOIN stuffmaintype M ON M.Id=T.mainType
         INNER JOIN stuffunit U ON U.Id=D.Unit
         INNER JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
         LEFT JOIN ck5_llsheet L ON  L.StockId=G.StockId
         WHERE S.mStockId=_mStockId AND G.blSign=1
         GROUP BY G.StockId
       )A INTO _lackSign,_llSign,_blCount,_llCount;
   END IF;




CASE IN_CheckSign
           WHEN 1 THEN

           IF _lackSign=0 AND _llCount<_blCount THEN
           SET _checkSign=1;

           END IF;

           IF _checkSign=1 AND _Level>1  THEN

            IF getsPOrderIdLock(IN_sPOrderId)>0 THEN
               SET _checkSign=0;
            END IF;
           END IF;

           WHEN 2 THEN
           IF _blCount=_llCount AND _llSign>0  THEN
           SET _checkSign=2;
           END IF;

           WHEN 3 THEN
           IF _blCount=_llCount AND _llSign=0  THEN
           SET _checkSign=3;
           END IF;

           ELSE
           IF _lackSign=0 AND _llCount<_blCount THEN
           SET _checkSign=1;
           ELSEIF _llCount=_blCount AND _llSign>0  THEN
           SET _checkSign=2;
           ELSEIF _llCount=_blCount AND _llSign=0 THEN
           SET _checkSign=3;
           ELSEIF IN_CheckSign=4 THEN
           SET _checkSign=_llCount-_blCount;
           ELSE
           SET _checkSign=0;
           END IF;
 END CASE;
SET _TResutl = _checkSign;
RETURN _TResutl;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getCgDeliveryDate
-- ----------------------------
DROP FUNCTION IF EXISTS `getCgDeliveryDate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getCgDeliveryDate`(`IN_StockId` VARCHAR(15)) RETURNS date
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _DeliveryDate DATE;
   DECLARE _ReduceWeeks TINYINT;

   IF LENGTH(IN_StockId)=12 THEN
      SELECT IFNULL(PI.Leadtime,P.Leadtime) AS Leadtime,IFNULL(D.ReduceWeeks,1) AS ReduceWeeks
            FROM yw1_ordersheet S
            LEFT JOIN yw3_pisheet PI ON PI.oId=S.Id
		    LEFT JOIN yw3_pileadtime P ON P.POrderId=S.POrderId
		    LEFT JOIN yw2_cgdeliverydate D ON D.POrderId=S.POrderId
            WHERE S.POrderId=IN_StockId INTO _DeliveryDate,_ReduceWeeks;
   ELSE
      SELECT G.DeliveryDate,IFNULL(D.ReduceWeeks,0) AS ReduceWeeks
            FROM  cg1_stocksheet G
            LEFT JOIN semifinished_deliverydate D ON D.mStuffId=G.StuffId
            WHERE G.StockId=IN_StockId INTO _DeliveryDate,_ReduceWeeks;
   END IF;
   IF _DeliveryDate IS NULL OR _DeliveryDate='0000-00-00' THEN
       SET _DeliveryDate='0000-00-00';
   ELSE
        SET _DeliveryDate=DATE_ADD(_DeliveryDate, interval _ReduceWeeks week);

        IF _DeliveryDate<CURDATE() THEN
           SET _DeliveryDate=CURDATE();
        END IF;
   END IF;
   RETURN _DeliveryDate;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getCgLastOrderDTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getCgLastOrderDTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getCgLastOrderDTime`(IN_StuffId MIDDLEINT(9)) RETURNS date
    DETERMINISTIC
BEGIN
   DECLARE _lastDate Date;
   SELECT MAX(S.ywOrderDTime) INTO _lastDate FROM cg1_stocksheet S  WHERE S.StuffId=IN_StuffId;
   RETURN _lastDate;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getFactoryOverhead
-- ----------------------------
DROP FUNCTION IF EXISTS `getFactoryOverhead`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getFactoryOverhead`(`IN_ActionId` INT(6)) RETURNS varchar(255) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
  DECLARE _pValue varchar(255) DEFAULT '';

  SELECT pValue INTO _pValue FROM sys6_parameters WHERE ActionId=IN_ActionId;

  IF ISNULL(_pValue) OR _pValue='' THEN
       SET  _pValue = 0;
  END IF;

  RETURN _pValue;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getLastPurchaseDate
-- ----------------------------
DROP FUNCTION IF EXISTS `getLastPurchaseDate`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getLastPurchaseDate`(`IN_StuffId` INT(9)) RETURNS date
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastDate Date;
   SELECT MAX(IFNULL(M.Date,S.Date)) INTO _lastDate FROM cg1_stocksheet S  LEFT JOIN cg1_stockmain M ON M.Id=S.Mid WHERE S.StuffId=IN_StuffId;
   RETURN _lastDate;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getLastScTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getLastScTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getLastScTime`(`IN_sPOrderId` VARCHAR(13)) RETURNS datetime
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastTime datetime;
   SELECT MAX(created) INTO _lastTime FROM sc1_cjtj WHERE sPOrderId=IN_sPOrderId;
   RETURN _lastTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getLastStockTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getLastStockTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getLastStockTime`(`IN_sPOrderId` VARCHAR(13)) RETURNS datetime
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastTime datetime;
   SELECT MAX(created) INTO _lastTime FROM ck5_llsheet WHERE sPOrderId=IN_sPOrderId;
   RETURN _lastTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getNewPOrderId
-- ----------------------------
DROP FUNCTION IF EXISTS `getNewPOrderId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getNewPOrderId`(IN_Type TINYINT(4),IN_Date VARCHAR(10)) RETURNS varchar(12) CHARSET utf8
    DETERMINISTIC
BEGIN
   DECLARE _POrderId VARCHAR(12);

   IF LENGTH(IN_Date)<8 THEN
       SET IN_Date=DATE_FORMAT(CURDATE(),'%y%m%d');
   END IF;

   CASE IN_Type
     WHEN 1 THEN
       SELECT IFNULL(MAX(A.POrderId),'') AS POrderId FROM (
           SELECT IFNULL(MAX(POrderId),0) AS POrderId FROM yw1_ordersheet WHERE POrderId LIKE CONCAT(IN_Date,'%')
       UNION
          SELECT IFNULL(MAX(POrderId),0) AS POrderId FROM yw1_orderdeleted WHERE POrderId LIKE CONCAT(IN_Date,'%')
       UNION
          SELECT SUBSTR( IFNULL(MAX(StockId) , 0 ) ,1,12) AS POrderId FROM cg1_stocksheet WHERE StockId LIKE CONCAT(IN_Date,  '%' ) AND SUBSTR(StockId,1,9)!=CONCAT(IN_Date,'9')
       )A WHERE 1 INTO  _POrderId;

      IF LENGTH(_POrderId)=12 THEN
          SET _POrderId=CONCAT(CONVERT(_POrderId,signed)+1,'');
        ELSE
          SET _POrderId=CONCAT(IN_Date,'000001');
      END IF;

     WHEN 2 THEN
        SELECT MAX(POrderId) AS POrderId FROM cg1_stocksheet WHERE POrderId LIKE CONCAT(IN_Date,'%') AND cgSign=1  INTO _POrderId;
         IF LENGTH(_POrderId)=12 THEN
            SET _POrderId=CONCAT(CONVERT(_POrderId,signed)+1,'');
        ELSE
            SET _POrderId=CONCAT(IN_Date,'900001');
        END IF;
  ELSE
     SET _POrderId='';
  END CASE;

  RETURN _POrderId;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getNewSalePOrderId
-- ----------------------------
DROP FUNCTION IF EXISTS `getNewSalePOrderId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getNewSalePOrderId`(`IN_Type` TINYINT(4), `IN_Date` VARCHAR(10)) RETURNS varchar(12) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _POrderId VARCHAR(12);

   IF LENGTH(IN_Date)<8 THEN
       SET IN_Date=DATE_FORMAT(CURDATE(),'%y%m%d');
   END IF;

   CASE IN_Type
     WHEN 1 THEN
       SELECT IFNULL(MAX(A.POrderId),'') AS POrderId FROM (
           SELECT IFNULL(MAX(POrderId),0) AS POrderId FROM sale_ordersheet WHERE POrderId LIKE CONCAT(IN_Date,'%')
       UNION
          SELECT SUBSTR( IFNULL(MAX(StockId) , 0 ) ,1,12) AS POrderId FROM sale_stocksheet WHERE StockId LIKE CONCAT(IN_Date,  '%' ) AND SUBSTR(StockId,1,9)!=CONCAT(IN_Date,'9')
       )A WHERE 1 INTO  _POrderId;

      IF LENGTH(_POrderId)=12 THEN
          SET _POrderId=CONCAT(CONVERT(_POrderId,signed)+1,'');
        ELSE
          SET _POrderId=CONCAT(IN_Date,'000001');
      END IF;

     WHEN 2 THEN
        SELECT MAX(POrderId) AS POrderId FROM sale_stocksheet WHERE POrderId LIKE CONCAT(IN_Date,'%') AND cgSign=1  INTO _POrderId;
         IF LENGTH(_POrderId)=12 THEN
            SET _POrderId=CONCAT(CONVERT(_POrderId,signed)+1,'');
        ELSE
            SET _POrderId=CONCAT(IN_Date,'900001');
        END IF;
  ELSE
     SET _POrderId='';
  END CASE;

  RETURN _POrderId;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getNewSaleStockId
-- ----------------------------
DROP FUNCTION IF EXISTS `getNewSaleStockId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getNewSaleStockId`(`IN_POrderId` VARCHAR(12), `IN_Type` TINYINT(4)) RETURNS varchar(15) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

   DECLARE _StockId VARCHAR(15);
   DECLARE _Date VARCHAR(10);

   CASE IN_Type
     WHEN 1 THEN
        SELECT MAX(StockId) AS StockId FROM sale_stocksheet WHERE POrderId=IN_POrderId INTO _StockId;

     WHEN 2 THEN
       IF LENGTH(IN_POrderId)<12 THEN
          SET _Date=DATE_FORMAT(CURDATE(),'%Y%m%d');
          SELECT MAX(POrderId) AS POrderId FROM sale_stocksheet WHERE POrderId LIKE CONCAT(_Date,'%') AND cgSign=1  INTO IN_POrderId;
          IF LENGTH(IN_POrderId)=12 THEN
              SET IN_POrderId=CONCAT(CONVERT(IN_POrderId,signed)+1,'');
          ELSE
              SET IN_POrderId=CONCAT(_Date,"9001");
          END IF;
       END IF;
       SELECT MAX(StockId) AS StockId FROM sale_stocksheet WHERE StockId LIKE CONCAT(IN_POrderId,'%')  INTO _StockId;
    ELSE
       SELECT MAX(StockId) AS StockId FROM sale_stocksheet WHERE POrderId=IN_POrderId INTO _StockId;
  END CASE;

  IF ISNULL(_StockId) OR LENGTH(_StockId)!=15 THEN
       SET _StockId=CONCAT(IN_POrderId,'001');
    ELSE
       SET _StockId=CONCAT(CONVERT(_StockId,signed)+1,'');
  END IF;

  RETURN _StockId;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getNewStockId
-- ----------------------------
DROP FUNCTION IF EXISTS `getNewStockId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getNewStockId`(`IN_POrderId` VARCHAR(12), `IN_Type` TINYINT(4)) RETURNS varchar(15) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

   DECLARE _StockId VARCHAR(15);
   DECLARE _Date VARCHAR(10);

   CASE IN_Type
     WHEN 1 THEN
        SELECT MAX(StockId) AS StockId FROM cg1_stocksheet WHERE POrderId=IN_POrderId INTO _StockId;

     WHEN 2 THEN
       IF LENGTH(IN_POrderId)<12 THEN
          SET _Date=DATE_FORMAT(CURDATE(),'%Y%m%d');
          SELECT MAX(POrderId) AS POrderId FROM cg1_stocksheet WHERE POrderId LIKE CONCAT(_Date,'%') AND cgSign=1  INTO IN_POrderId;
          IF LENGTH(IN_POrderId)=12 THEN
              SET IN_POrderId=CONCAT(CONVERT(IN_POrderId,signed)+1,'');
          ELSE
              SET IN_POrderId=CONCAT(_Date,"9001");
          END IF;
       END IF;
       SELECT MAX(StockId) AS StockId FROM cg1_stocksheet WHERE StockId LIKE CONCAT(IN_POrderId,'%')  INTO _StockId;
    ELSE
       SELECT MAX(StockId) AS StockId FROM cg1_stocksheet WHERE POrderId=IN_POrderId INTO _StockId;
  END CASE;

  IF ISNULL(_StockId) OR LENGTH(_StockId)!=15 THEN
       SET _StockId=CONCAT(IN_POrderId,'001');
    ELSE
       SET _StockId=CONCAT(CONVERT(_StockId,signed)+1,'');
  END IF;

  RETURN _StockId;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getOrderCost
-- ----------------------------
DROP FUNCTION IF EXISTS `getOrderCost`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderCost`(`IN_POrderId` VARCHAR(12), `IN_Sign` TINYINT(4)) RETURNS decimal(10,3)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _CostAmount decimal(10,3) DEFAULT 0.00;
   DECLARE _PirceAmount decimal(10,3) DEFAULT 0.00;
   DECLARE _Incomplete TINYINT DEFAULT 0;
   DECLARE _costSign TINYINT(4);

   SELECT PriceAmount,CostAmount,Incomplete FROM yw1_ordercost WHERE POrderId=IN_POrderId INTO _PirceAmount,_CostAmount,_Incomplete;

   IF _PirceAmount IS NULL OR _Incomplete=1 THEN
       SET _costSign = setOrderCostPrice(_POrderId);
       SELECT PriceAmount,CostAmount FROM yw1_ordercost WHERE POrderId=IN_POrderId INTO _PirceAmount,_CostAmount;
   END IF;

   IF IN_Sign=1 THEN
         RETURN _PirceAmount;
     ELSE
         RETURN _CostAmount;
   END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getOrderProfit
-- ----------------------------
DROP FUNCTION IF EXISTS `getOrderProfit`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderProfit`(`IN_POrderId` VARCHAR(12)) RETURNS varchar(255) CHARSET utf8
    SQL SECURITY INVOKER
BEGIN
  DECLARE _CostAmount DECIMAL(11,3) DEFAULT 0.00;
  DECLARE _SaleAmount DECIMAL(11,3) DEFAULT 0.00;
  DECLARE _Price decimal(11,2) DEFAULT 0.0000;
  DECLARE _Qty INT(9) DEFAULT 0;
  DECLARE _Profit DECIMAL(11,3) DEFAULT 0.00;
  DECLARE _OrderProfit INT(10) DEFAULT 0;
  DECLARE _ProfitRate MIDDLEINT(6) DEFAULT 0;
  DECLARE _ProfiColor varchar(7) DEFAULT '';

  SELECT  SUM(A.OrderQty*IF(T.mainType=getSysConfig(103)  AND B.CompanyId IN(getSysConfig(106)),D.Price,A.Price)*IFNULL(C.Rate,1)) AS costAmount
		 FROM  cg1_stocksheet A
		 LEFT JOIN trade_object B ON A.CompanyId=B.CompanyId
		 LEFT JOIN currencydata C ON B.Currency=C.Id
         LEFT JOIN stuffdata D ON D.StuffId=A.StuffId
         LEFT JOIN stufftype T ON T.TypeId=D.TypeId
		 WHERE  A.POrderId=IN_POrderId AND A.Level=1  INTO _CostAmount;

  SELECT S.Qty,S.Price*IFNULL(C.Rate,1) AS Price,SUM(S.Qty*S.Price*IFNULL(C.Rate,1)) AS SaleAmount
         FROM  yw1_ordersheet S
         LEFT JOIN yw1_ordermain M ON M.OrderNumber=S.OrderNumber
		 LEFT JOIN trade_object B ON B.CompanyId=M.CompanyId
		 LEFT JOIN currencydata C ON B.Currency=C.Id
		 WHERE  S.POrderId=IN_POrderId  INTO _Qty,_Price,_SaleAmount;

   SET _OrderProfit=_SaleAmount-_CostAmount;
   IF _Qty>0  THEN
        SET _Profit=_OrderProfit/_Qty;
   END IF;

   IF _Price>0 THEN

      SET _ProfitRate=_Profit*100/_Price;

   ELSE

      SET _ProfitRate=_OrderProfit*100/_CostAmount;

   END IF;


  IF _ProfitRate>10 THEN
      SET _ProfiColor= '#009900';
    ELSE
      IF _ProfitRate>=3 THEN
           SET _ProfiColor= '#FF7C03';
        ELSE
           SET _ProfiColor= '#FF0000';
      END IF;
  END IF;

   RETURN CONCAT(_Profit,'|',_ProfitRate,'|',_OrderProfit,'|',_ProfiColor);

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getOrderStockTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getOrderStockTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getOrderStockTime`(`IN_POrderId` VARCHAR(13)) RETURNS datetime
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastTime datetime;


   SELECT MAX(A.lastTime) INTO _lastTime FROM (
         SELECT MAX(getStuffDeliveredTime(G.StuffId)) AS lastTime
         FROM yw1_scsheet  S
         INNER JOIN cg1_stocksheet G ON G.POrderId=S.POrderId AND G.Level=1 WHERE sPOrderId=IN_POrderId AND S.mStockId IS NULL AND S.Level=1
      UNION ALL
         SELECT MAX(getStuffDeliveredTime(G.StuffId)) AS lastTime
         FROM yw1_scsheet S
         INNER JOIN cg1_semifinished G ON G.mStockId=S.mStockId WHERE sPOrderId=IN_POrderId AND S.mStockId IS NOT NULL AND S.Level>1
      )A;

   RETURN _lastTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getRelationQty
-- ----------------------------
DROP FUNCTION IF EXISTS `getRelationQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getRelationQty`(`Qty` decimal(11,2), `Relation` VARCHAR(50), `Decimals` TINYINT(4)) RETURNS decimal(11,2)
    SQL SECURITY INVOKER
BEGIN
   DECLARE _Position MIDDLEINT(9);

   SET _Position=INSTR (Relation ,'/');

    IF _Position>1 THEN
       SET Qty = Qty*SUBSTR(Relation,1,_Position-1)/SUBSTR(Relation,_Position+1);
    ELSE
       SET Qty = Qty*Relation;
    END IF;



  IF Decimals>0 THEN
       SET Qty = ROUND(Qty,Decimals);
       IF  Qty=0 THEN
           SET Qty=1/POWER(10,Decimals);
       END IF;
  ELSE
       SET Qty = CEIL(Qty);
       IF Qty=0 THEN
           SET Qty=1;
       END IF;
  END IF;

RETURN Qty;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getSemifinishedBomSign
-- ----------------------------
DROP FUNCTION IF EXISTS `getSemifinishedBomSign`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getSemifinishedBomSign`(`IN_StockId` VARCHAR(15), `IN_SemiSign` TINYINT(4)) RETURNS mediumint(6)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

  DECLARE _Counts mediumint(6) DEFAULT 0;
  IF IN_SemiSign=1 THEN
      SELECT COUNT(1) INTO _Counts FROM  semifinished_bom WHERE mStockId=IN_StockId;
    ELSE
      SELECT COUNT(1) INTO _Counts FROM  semifinished_bom WHERE StockId=IN_StockId;
  END IF;

  RETURN _Counts;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getSemifinishedCount
-- ----------------------------
DROP FUNCTION IF EXISTS `getSemifinishedCount`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getSemifinishedCount`(`IN_StockId` VARCHAR(15), `IN_SemiSign` TINYINT(4)) RETURNS mediumint(6)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

  DECLARE _Counts mediumint(6) DEFAULT 0;
  IF IN_SemiSign=1 THEN
      SELECT COUNT(1) INTO _Counts FROM  cg1_semifinished WHERE mStockId=IN_StockId;
    ELSE
      SELECT COUNT(1) INTO _Counts FROM  cg1_semifinished WHERE StockId=IN_StockId;
  END IF;

  RETURN _Counts;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getsPOrderIdLock
-- ----------------------------
DROP FUNCTION IF EXISTS `getsPOrderIdLock`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getsPOrderIdLock`(`IN_sPOrderId` VARCHAR(13)) RETURNS smallint(4)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
DECLARE cr_stack_depth INTEGER DEFAULT cr_debug.ENTER_MODULE2('getsPOrderIdLock', 'ac2_test', 8, 100632) ;
    DECLARE _Locks SMALLINT(4) DEFAULT 0;
    CALL cr_debug.UPDATE_WATCH3('IN_sPOrderId', IN_sPOrderId, 'varchar(13)', cr_stack_depth) ;
CALL cr_debug.UPDATE_WATCH3('_Locks', _Locks, 'SMALLINT(4)', cr_stack_depth) ;
CALL cr_debug.TRACE(4, 4, 0, 5, cr_stack_depth) ;
CALL cr_debug.TRACE(6, 11, 4, 75, cr_stack_depth) ;
SELECT COUNT(*) AS Locks
           FROM yw1_scsheet S
           LEFT JOIN cg1_semifinished G ON G.StockId=S.mStockId
           LEFT JOIN cg1_lockstock L ON L.StockId=S.mStockId AND L.Locks=0
           LEFT JOIN cg1_lockstock K ON K.StockId=G.mStockId AND K.Locks=0
           WHERE sPOrderId=IN_sPOrderId AND (L.Id>0 OR K.Id>0) INTO _Locks;
CALL cr_debug.UPDATE_SYSTEM_CALLS(101) ;
CALL cr_debug.UPDATE_WATCH3('_Locks', _Locks, '', cr_stack_depth) ;

    CALL cr_debug.TRACE(13, 13, 4, 18, cr_stack_depth) ;
SET @devart_debug_ret = _Locks ;
CALL cr_debug.LEAVE_MODULE(cr_stack_depth - 1) ;
RETURN @devart_debug_ret;
CALL cr_debug.TRACE(14, 14, 0, 3, cr_stack_depth) ;
CALL cr_debug.LEAVE_MODULE(cr_stack_depth - 1) ;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStandbyRateQty
-- ----------------------------
DROP FUNCTION IF EXISTS `getStandbyRateQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStandbyRateQty`(`IN_Id` TINYINT(4), `IN_Qty` decimal(11,2), `IN_Decimals` TINYINT(4)) RETURNS decimal(11,2)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

    declare _Rate1 DECIMAL(6,4) DEFAULT 0;
    declare _RateA DECIMAL(6,4) DEFAULT 0;
    declare _RateB DECIMAL(6,4) DEFAULT 0;
    declare _RateC DECIMAL(6,4) DEFAULT 0;
    declare _Qty   DECIMAL(12,2);

    SELECT Rate1,RateA,RateB,RateC INTO _Rate1,_RateA,_RateB,_RateC FROM standbyrate WHERE Id=IN_Id;

    IF IN_Qty>=5000 THEN
           SET _Qty=IN_Qty*(1+_RateC);
    ELSEIF IN_Qty>2000 THEN
           SET _Qty=IN_Qty*(1+_RateB);
    ELSEIF IN_Qty>=1000 THEN
           SET _Qty=IN_Qty*(1+_RateA);
    ELSE
           SET _Qty=IN_Qty*(1+_Rate1);
    END IF;

   IF IN_Decimals>0 THEN
       SET IN_Qty= ROUND(_Qty,IN_Decimals);
   ELSE
       SET IN_Qty = CEIL(_Qty);
  END IF;

  RETURN IN_Qty;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStockIdContainSign
-- ----------------------------
DROP FUNCTION IF EXISTS `getStockIdContainSign`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStockIdContainSign`(`IN_mStockId` VARCHAR(15), `IN_StockId` VARCHAR(15)) RETURNS tinyint(3)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE _mStockIds VARCHAR(2000);
    DECLARE _StockId VARCHAR(2000);
    DECLARE _mSign  TINYINT(3) DEFAULT 0;
    DECLARE _RunCounts TINYINT DEFAULT 0;

    SET _StockId = IN_StockId;
    REPEAT
         SELECT GROUP_CONCAT(G.mStockId) AS mStockId
             FROM cg1_semifinished G
             LEFT JOIN cg1_lockstock L  ON L.StockId=G.mStockId
             WHERE  FIND_IN_SET(G.StockId,_StockId) INTO _mStockIds;

         SET _RunCounts = _RunCounts+1;
         SET _StockId   = _mStockIds;

         IF _mStockIds IS NOT NULL THEN
             SET _mSign     = FIND_IN_SET(IN_mStockId,_mStockIds);
         END IF;

    UNTIL _mSign>0 OR _mStockIds IS NULL  OR  _RunCounts>=10 END REPEAT;

    RETURN _mSign;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStockIdLock
-- ----------------------------
DROP FUNCTION IF EXISTS `getStockIdLock`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStockIdLock`(`IN_StockId` VARCHAR(15)) RETURNS smallint(4)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE _mStockId VARCHAR(225);
    DECLARE _StockId VARCHAR(225);
    DECLARE _Locks SMALLINT(4) DEFAULT 0;
    DECLARE _RunCounts TINYINT DEFAULT 0;

   SELECT SUM(IF(L.Locks=0,1,0)) AS Locks
   FROM cg1_semifinished G
   LEFT JOIN  cg1_lockstock L  ON L.Locks=0 AND FIND_IN_SET(L.StockId,G.ParentNode)
   WHERE  G.StockId=IN_StockId INTO _Locks;

    IF _Locks IS NULL THEN
      SET _Locks=0;
    END IF;

    RETURN _Locks;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStockIdLockStatus
-- ----------------------------
DROP FUNCTION IF EXISTS `getStockIdLockStatus`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStockIdLockStatus`(`IN_StockId` VARCHAR(15)) RETURNS smallint(4)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
    DECLARE _mStockId VARCHAR(255);
    DECLARE _Locks SMALLINT(4) DEFAULT 0;


    SELECT GROUP_CONCAT(G.ParentNode) AS mStockId FROM cg1_semifinished G  WHERE G.StockId=IN_StockId INTO _mStockId;

    IF _mStockId IS NOT NULL THEN
         SELECT SUM(IF(L.Locks=0,1,0)) AS Locks
             FROM cg1_semifinished G
             LEFT JOIN cg1_lockstock L  ON  L.StockId=G.mStockId
             WHERE  FIND_IN_SET(G.StockId,_mStockId) INTO _Locks;
    END IF;

     IF _Locks IS NULL THEN
      SET _Locks=0;
    END IF;

    RETURN _Locks;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStuffDeliveredMinTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getStuffDeliveredMinTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStuffDeliveredMinTime`(`IN_StuffId` INT(9), `IN_Date` DATETIME) RETURNS datetime
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastTime datetime;
   SELECT MAX(created) INTO _lastTime FROM ck1_rksheet WHERE StuffId=IN_StuffId and created<IN_Date;
   RETURN _lastTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStuffDeliveredTime
-- ----------------------------
DROP FUNCTION IF EXISTS `getStuffDeliveredTime`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStuffDeliveredTime`(`IN_StuffId` INT(9)) RETURNS datetime
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _lastTime datetime;
   SELECT MAX(created) INTO _lastTime FROM ck1_rksheet WHERE StuffId=IN_StuffId;
   RETURN _lastTime;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStuffoStockQty
-- ----------------------------
DROP FUNCTION IF EXISTS `getStuffoStockQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStuffoStockQty`(`IN_StuffId` INT(9)) RETURNS varchar(255) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

   declare _oStockQty decimal(11,2) DEFAULT 0;

   SELECT (oStockQty-mStockQty) AS oStockQty  FROM  ck9_stocksheet WHERE StuffId=IN_StuffId LIMIT 1 INTO _oStockQty FOR UPDATE;
   IF _oStockQty<0 THEN
      SET _oStockQty=0;
   END IF;
   RETURN _oStockQty;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getStuffParentNode
-- ----------------------------
DROP FUNCTION IF EXISTS `getStuffParentNode`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getStuffParentNode`(IN_StockId varchar(15)) RETURNS varchar(2000) CHARSET utf8
    DETERMINISTIC
BEGIN

  DECLARE _ParentNode VARCHAR(2000) DEFAULT '';

  SELECT GROUP_CONCAT(ParentNode) from cg1_semifinished  WHERE StockId=IN_StockId INTO _ParentNode;
  IF _ParentNode IS NULL OR LENGTH(_ParentNode)=0 THEN
      SET _ParentNode=IN_StockId;
  ELSE
       SET _ParentNode=strDistinctConcatString(_ParentNode);
       SET _ParentNode=CONCAT(_ParentNode,',',IN_StockId);
  END IF;

   RETURN _ParentNode;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getSysConfig
-- ----------------------------
DROP FUNCTION IF EXISTS `getSysConfig`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getSysConfig`(`IN_Id` INT(9)) RETURNS varchar(255) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
  DECLARE _Parameters varchar(255) DEFAULT '';
  SELECT Parameters INTO _Parameters FROM sys_config WHERE CId=IN_Id;
  RETURN _Parameters;


END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getSysParam
-- ----------------------------
DROP FUNCTION IF EXISTS `getSysParam`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getSysParam`(`IN_PNumber` INT) RETURNS varchar(255) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
  DECLARE _SystemValue varchar(255) DEFAULT '';

  SELECT pValue INTO _SystemValue FROM sys6_parameters WHERE PNumber=IN_PNumber;

  RETURN _SystemValue;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for getSysParamByActionId
-- ----------------------------
DROP FUNCTION IF EXISTS `getSysParamByActionId`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `getSysParamByActionId`(`IN_ActionId` MEDIUMINT(9)) RETURNS varchar(255) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
  DECLARE _SystemValue varchar(255) DEFAULT '';

  SELECT pValue INTO _SystemValue FROM sys6_parameters WHERE ActionId =IN_ActionId;

  IF _SystemValue = '' THEN
      RETURN 0;
    ELSE
       RETURN _SystemValue;
  END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for mycanstock
-- ----------------------------
DROP FUNCTION IF EXISTS `mycanstock`;
DELIMITER ;;
CREATE DEFINER=`root`@`%` FUNCTION `mycanstock`(`IN_sPOrderId` VARCHAR(13), `IN_CheckSign` TINYINT(2)) RETURNS mediumint(6)
BEGIN
   DECLARE _POrderId VARCHAR(12);
   DECLARE _mStockId VARCHAR(15);
   DECLARE _Level TINYINT(4);
   DECLARE _OrderQty decimal(11,2);
   DECLARE _Qty decimal(11,2);
   DECLARE _Relation decimal(12,2);
   DECLARE _Deviation DECIMAL(5,4);
   DECLARE _llSign MIDDLEINT(6);
   DECLARE _lackSign MIDDLEINT(6);
   DECLARE _blCount MIDDLEINT(6);
   DECLARE _llCount MIDDLEINT(6);
   DECLARE _Locks TINYINT(4);
   DECLARE _checkSign MIDDLEINT(6);
   DECLARE _ActionId MIDDLEINT(6);
   DECLARE _Decimals TINYINT(4);
   DECLARE _TResutl TINYINT(4);

SET _Deviation=0.0001;
SET _checkSign=0;

SELECT COUNT(1) AS Locks FROM yw1_sclock WHERE sPOrderId=IN_sPOrderId AND Locks=0 INTO _Locks;
IF _Locks=1 THEN
SET _TResutl = 0;
RETURN _TResutl;
   END IF;

SELECT POrderId,mStockId,Level,Qty,ActionId FROM yw1_scsheet WHERE sPOrderId=IN_sPOrderId INTO _POrderId,_mStockId,_Level,_Qty,_ActionId;
IF LENGTH(_POrderId)=12  THEN
SELECT COUNT(1) AS Locks FROM yw2_orderexpress WHERE POrderId=_POrderId AND Type=2 INTO _Locks;
IF _Locks=1 THEN
SET _TResutl = 0;
RETURN _TResutl;
      END IF;
   END IF;

IF _Level=1 AND _ActionId=101 THEN
SELECT Qty FROM yw1_ordersheet WHERE POrderId=_POrderId INTO _OrderQty;
SELECT SUM(IF(A.tStockQty>=ROUND(A.OrderQty-A.llQty-_Deviation,A.Decimals),0,1))  AS lackSign,SUM(A.llEstate) AS llSign,
             SUM(A.blCount) AS blCount,SUM(IF(ROUND(A.OrderQty-A.llQty,A.Decimals)<=_Deviation OR (lledQty+llQty)=Qty,1,0)) AS llCount
      FROM(
         SELECT 1 AS blCount,G.OrderQty AS Qty,ROUND(G.OrderQty*(_Qty/_OrderQty),U.Decimals) AS OrderQty,SUM(IFNULL(L.Qty,0)) AS llQty,SUM(IFNULL(L.Estate,0)) AS llEstate,K.tStockQty,U.Decimals,
               IF (IFNULL(LA.lledQty,0)>=G.OrderQty,1,0) AS bledSign,IFNULL(LA.lledQty,0) AS lledQty
         FROM  cg1_stocksheet G
         INNER JOIN stuffdata D ON D.StuffId=G.StuffId
         INNER JOIN stufftype T ON T.TypeId=D.TypeId
         INNER JOIN stuffmaintype M ON M.Id=T.mainType
         INNER JOIN stuffunit U ON U.Id=D.Unit
         INNER JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
         LEFT JOIN ck5_llsheet L ON L.sPOrderId=IN_sPOrderId AND L.StockId=G.StockId
         LEFT JOIN (
            SELECT StockId,SUM(Qty) AS lledQty FROM ck5_llsheet WHERE POrderId=_POrderId AND sPOrderId!=IN_sPOrderId GROUP BY StockId
         )LA ON LA.StockId=G.StockId
         WHERE G.POrderId=_POrderId  AND G.Level=1 AND G.blSign=1
         GROUP BY G.StockId
       )A WHERE A.bledSign=0  INTO _lackSign,_llSign,_blCount,_llCount;
ELSE
SELECT (G.AddQty+G.FactualQty) AS Qty,U.Decimals FROM cg1_stocksheet G
            INNER JOIN stuffdata D ON D.StuffId=G.StuffId
            INNER JOIN stuffunit U ON U.Id=D.Unit
            WHERE G.StockId=_mStockId INTO _OrderQty,_Decimals;

SELECT  SUM(IF(YOrderQty=YllQty,0,IF(A.tStockQty>=ROUND(A.OrderQty,A.Decimals)-A.llQty-IF(A.OrderQty>=1,_Deviation,0),0,1))) AS lackSign,SUM(A.llEstate) AS llSign,
             SUM(A.blCount) AS blCount,SUM(IF(ROUND(A.OrderQty,A.Decimals)-A.llQty<=IF(A.OrderQty>=1,0.1,0),1,0)) AS llCount
      FROM(
         SELECT 1 AS blCount,(S.OrderQty*(_Qty/ROUND(_OrderQty,_Decimals))) AS OrderQty,SUM(IF(L.sPOrderId=IN_sPOrderId,L.Qty,0)) AS llQty,SUM(IFNULL(L.Estate,0)) AS llEstate,K.tStockQty,U.Decimals,
                G.OrderQty AS YOrderQty,SUM(IFNULL(L.Qty,0)) AS YllQty
         FROM cg1_semifinished S
         INNER JOIN cg1_stocksheet G ON G.StockId=S.StockId
         INNER JOIN stuffdata D ON D.StuffId=G.StuffId
         INNER JOIN stufftype T ON T.TypeId=D.TypeId
         INNER JOIN stuffmaintype M ON M.Id=T.mainType
         INNER JOIN stuffunit U ON U.Id=D.Unit
         INNER JOIN ck9_stocksheet K ON K.StuffId=G.StuffId
         LEFT JOIN ck5_llsheet L ON  L.StockId=G.StockId
         WHERE S.mStockId=_mStockId AND G.blSign=1
         GROUP BY G.StockId
       )A INTO _lackSign,_llSign,_blCount,_llCount;
   END IF;




CASE IN_CheckSign
           WHEN 1 THEN

           IF _lackSign=0 AND _llCount<_blCount THEN
           SET _checkSign=1;

           END IF;

           IF _checkSign=1 AND _Level>1  THEN
            IF getsPOrderIdLock(IN_sPOrderId)>0 THEN
               SET _checkSign=0;
            END IF;
           END IF;

           WHEN 2 THEN
           IF _blCount=_llCount AND _llSign>0  THEN
           SET _checkSign=2;
           END IF;

           WHEN 3 THEN
           IF _blCount=_llCount AND _llSign=0  THEN
           SET _checkSign=3;
           END IF;

           ELSE
           IF _lackSign=0 AND _llCount<_blCount THEN
           SET _checkSign=1;
           ELSEIF _llCount=_blCount AND _llSign>0  THEN
           SET _checkSign=2;
           ELSEIF _llCount=_blCount AND _llSign=0 THEN
           SET _checkSign=3;
           ELSEIF IN_CheckSign=4 THEN
           SET _checkSign=_llCount-_blCount;
           ELSE
           SET _checkSign=0;
           END IF;
 END CASE;
SET _TResutl = _checkSign;
RETURN _TResutl;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for saveFinishedllQty
-- ----------------------------
DROP FUNCTION IF EXISTS `saveFinishedllQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `saveFinishedllQty`(`IN_POrderId` VARCHAR(12), `IN_StockId` VARCHAR(15), `IN_StuffId` MEDIUMINT(9), `IN_llQty` FLOAT(11,4), `IN_Operator` MEDIUMINT(9)) RETURNS int(10)
    SQL SECURITY INVOKER
BEGIN

     DECLARE _rkQty INT(10);
     DECLARE _Price DECIMAL(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);
     DECLARE _rkId INT(11);
     DECLARE _llId INT(11);
     DECLARE _looptimes INT(10);

     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;



     DECLARE myCursor CURSOR FOR SELECT  Id , (Qty-llQty) AS lastQty ,Price  FROM ck1_rksheet  WHERE  StuffId = IN_StuffId AND Qty>llQty ORDER BY Id ASC;

     DECLARE CONTINUE HANDLER FOR  NOT FOUND SET _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION  SET _error=1;

     SET  _looptimes  = 0 ;




      SET _done = 0 ;

      OPEN myCursor;

         myLoop: LOOP


          FETCH myCursor INTO _rkId,_lastQty,_Price;


          IF _rkId = 0 OR  ISNULL(_rkId) OR IN_llQty = 0 THEN

             SET _done = 1;

          END IF;



          IF _done = 1  THEN

               LEAVE myLoop;

          END IF;



          IF   IN_llQty < _lastQty  THEN


              SET  _llQty =  IN_llQty;

              INSERT INTO ck5_llsheet (`POrderId`,`sPOrderId`,`StockId`,`StuffId`,`Price`,`Qty`,`ComboxSign`,`Type`,`FromId`,`FromFunction`,`RkId`,`Locks`,`Estate`,`Date`,`Operator`,`Receiver`,`Received`,`PLocks`,`creator`,`created`)
                     VALUES (IN_POrderId,'0',IN_StockId,IN_StuffId,_Price,_llQty,'0','1','0','成品订单领料',_rkId,'0','0',CURDATE(),IN_Operator,IN_Operator,NOW(),'0',IN_Operator,NOW());

              SET _llId= LAST_INSERT_ID();


              IF  _llId>0  THEN

                  UPDATE  ck1_rksheet  SET llQty = llQty + _llQty ,llSign = 2  WHERE Id = _rkId;

                  SET  IN_llQty =  IN_llQty - _llQty ;

                  SET  _looptimes = _looptimes + 1;

              END IF ;

          END IF ;



          IF   IN_llQty >= _lastQty  THEN

               SET  _llQty =  _lastQty;

                INSERT INTO ck5_llsheet (`POrderId`,`sPOrderId`,`StockId`,`StuffId`,`Price`,`Qty`,`ComboxSign`,`Type`,`FromId`,`FromFunction`,`RkId`,`Locks`,`Estate`,`Date`,`Operator`,`Receiver`,`Received`,`PLocks`,`creator`,`created`)
                     VALUES (IN_POrderId,'0',IN_StockId,IN_StuffId,_Price,_llQty,'0','1','0','成品订单领料',_rkId,'0','0',CURDATE(),IN_Operator,IN_Operator,NOW(),'0',IN_Operator,NOW());

               SET _llId= LAST_INSERT_ID();

               IF  _llId>0  THEN

                   UPDATE  ck1_rksheet  SET llQty = llQty + _llQty ,llSign = 0  WHERE Id = _rkId;

                   SET  IN_llQty =  IN_llQty - _llQty ;

                   SET  _looptimes = _looptimes + 1;

              END IF ;

          END IF ;


       END LOOP  myLoop;


    CLOSE myCursor;


    IF   _looptimes > 0  THEN

        SET   _error = 0;

    ELSE

        SET   _error = 1;

    END IF ;


    RETURN   _error;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for saveFinishedOrderIn
-- ----------------------------
DROP FUNCTION IF EXISTS `saveFinishedOrderIn`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `saveFinishedOrderIn`(`IN_POrderId` VARCHAR(12), `IN_RkQty` decimal(11,2), `IN_Operator` MEDIUMINT(9)) RETURNS int(10)
    SQL SECURITY INVOKER
BEGIN

     declare _ProductId MIDDLEINT(9);
     declare _Price decimal(10,3);
     declare _OrderQty INT(11);

     declare _stockQty INT(11);
     declare _lastQty INT(11);
     declare _ShipType VARCHAR(15);

     declare _splitId  INT(11);
     declare _prosuctStockId  INT(11);

     DECLARE _error INTEGER DEFAULT 0;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION  SET _error=1;

     SET _splitId = 0 ,_prosuctStockId = 0;


     SELECT  Y.ProductId, Y.Price,Y.Qty,Y.ShipType  FROM  yw1_ordersheet Y  WHERE  Y.POrderId=IN_POrderId    INTO _ProductId,_Price,_OrderQty,_ShipType;


     IF LENGTH(_ProductId)>0 THEN


         SELECT Id FROM ch1_shipsplit WHERE POrderId = IN_POrderId LIMIT 1 INTO _splitId;

         IF _splitId = 0  OR _splitId IS NULL THEN

             INSERT INTO ch1_shipsplit (POrderId, ShipId, Qty, ShipType, Estate, OrderSign,shipSign, Locks,PLocks, creator, created, modifier, modified, Date, Operator) VALUES (IN_POrderId,0,_OrderQty,_ShipType,1,0,1,0,0,IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

         END IF ;

         SELECT  Id FROM productstock WHERE ProductId = _ProductId INTO _prosuctStockId;

         IF _prosuctStockId = 0  OR _prosuctStockId IS NULL THEN

             INSERT INTO productstock (ProductId, tStockQty,oStockQty, Date, Estate, Locks,PLocks,creator, created, modifier, modified,Operator) VALUES (_ProductId,0,0,CURDATE(),1,0,0,IN_Operator,NOW(),IN_Operator,NOW(),IN_Operator);

         END IF ;

         SELECT   SUM(Qty) AS Qty FROM yw1_orderrk WHERE POrderId = IN_POrderId   INTO _stockQty;

         IF _stockQty IS NULL THEN

              SET  _stockQty = 0 ;

         END IF ;





           SET  _lastQty = IN_RkQty;




         IF _lastQty >0  AND _stockQty = 0 THEN

               INSERT INTO yw1_orderrk (POrderId,sPOrderId,ProductId,Qty,Price,scDate,Locks,Estate,Date,Operator) VALUES (IN_POrderId,'0',_ProductId,_lastQty,_Price,CURDATE(),0,1,NOW(),IN_Operator);

         END IF;


         IF  _lastQty!=0  AND _stockQty > 0 THEN

               UPDATE yw1_orderrk  SET  Qty = Qty + _lastQty WHERE POrderId = IN_POrderId ;

         END IF;

         IF _lastQty!=0 THEN

               UPDATE productstock set tStockQty = tStockQty + _lastQty WHERE ProductId = _ProductId;

         END IF;

         IF _error = 0  AND (_stockQty+_lastQty) =_OrderQty THEN

             UPDATE  yw1_ordersheet  SET Estate = 2  WHERE POrderId = IN_POrderId;

         END IF ;

     END IF;

    RETURN  _error;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for saveNewllQty
-- ----------------------------
DROP FUNCTION IF EXISTS `saveNewllQty`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `saveNewllQty`(`IN_POrderId` VARCHAR(12), `IN_sPOrderId` VARCHAR(13), `IN_StockId` VARCHAR(15), `IN_StuffId` MEDIUMINT(9), `IN_llQty` FLOAT(11,4), `IN_Operator` MEDIUMINT(9), `IN_fromPage` VARCHAR(50), `IN_comboxSign` TINYINT(4)) RETURNS int(10)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

     DECLARE _rkQty INT(10);
     DECLARE _Price decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _lastQty decimal(11,2);
     DECLARE _rkId INT(11);
     DECLARE _llId INT(11);
     DECLARE _looptimes INT(10);
     DECLARE _sumllQty decimal(11,2);
     DECLARE _sumOrderQty decimal(11,2);
     DECLARE _Estate TINYINT(4);
     DECLARE _mStockId VARCHAR(15);

     DECLARE _scQty decimal(11,2);
     DECLARE _OrderQty decimal(11,2);

     DECLARE _Relation DECIMAL(11,3);
     DECLARE _Decimals TINYINT(4);
     DECLARE _Remarks VARCHAR(50);
     DECLARE _Type TINYINT(4);
     DECLARE _FromId INT(10);
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;



     DECLARE myCursor CURSOR FOR SELECT  Id , (Qty-llQty) AS lastQty ,Price  FROM ck1_rksheet  WHERE  StuffId = IN_StuffId AND Qty>llQty ORDER BY Id ASC;

     DECLARE CONTINUE HANDLER FOR  NOT FOUND SET _done=1;

     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION  SET _error=1;

     SET  _looptimes  = 0 ;

     SELECT IFNULL(U.Decimals,0) AS Decimals FROM stuffdata D  LEFT JOIN stuffunit U ON U.Id=D.Unit  WHERE D.StuffId=IN_StuffId INTO _Decimals;


      IF  IN_comboxSign = 0  AND IN_fromPage!='5'  THEN

          SELECT   IFNULL(SUM(Qty),0) AS llQty FROM ck5_llsheet  WHERE  sPOrderId = IN_sPOrderId and  StockId = IN_StockId  INTO  _sumllQty ;


          IF  IN_fromPage = '1' THEN

              SELECT   ROUND(ROUND(G.OrderQty*(S.Qty/Y.Qty),1),_Decimals) AS OrderQty
              FROM yw1_scsheet  S
              LEFT JOIN cg1_stocksheet  G ON G.POrderId = S.POrderId
              LEFT JOIN yw1_ordersheet  Y ON Y.POrderId = S.POrderId
              WHERE S.sPOrderId =  IN_sPOrderId AND G.StockId =IN_StockId   INTO _sumOrderQty;


          END IF ;

          IF  IN_fromPage = '2' OR  IN_fromPage = '3' THEN

              SELECT   SC.Qty,(CG.AddQty+CG.FactualQty) AS OrderQty,SC.mStockId
              FROM yw1_scsheet  SC
              LEFT JOIN cg1_stocksheet    CG ON CG.StockId = SC.mStockId WHERE SC.sPOrderId =  IN_sPOrderId  INTO _scQty,_OrderQty,_mStockId;

              SELECT   ROUND(ROUND(OrderQty*(_scQty/_OrderQty),1),_Decimals)  AS OrderQty  FROM cg1_semifinished  WHERE  POrderId=IN_POrderId AND mStockId = _mStockId AND StockId=IN_StockId   INTO  _sumOrderQty;

          END IF ;

          IF  IN_fromPage = '4' THEN

               SELECT   OrderQty  FROM cg1_stocksheet  WHERE  StockId=IN_StockId  and StuffId = IN_StuffId  INTO  _sumOrderQty;


               IF  _sumOrderQty=0 OR _sumOrderQty IS NULL  THEN

                SELECT   OrderQty  FROM cg1_stuffcombox  WHERE  StockId=IN_StockId  and StuffId = IN_StuffId  INTO  _sumOrderQty;

               END IF ;

          END IF ;


          IF  (_sumllQty + IN_llQty - _sumOrderQty)>0.1  THEN

             SET  _error = 1;
             RETURN   _error;

          END IF ;

      END IF ;






      IF  IN_fromPage = '3'  OR IN_fromPage = '4' OR IN_fromPage = '5' THEN

         SET  _Estate = 0;

      ELSE

         SET  _Estate = 1;

      END IF ;

      IF IN_fromPage='5' THEN
           SET  _Remarks = '车间补料';
           SET  _Type=1;
           SET _FromId = IN_sPOrderId;

           SET IN_sPOrderId = '';
        ELSE
           SET  _Remarks = '工单领料';
           SET  _Type=1;
           SET _FromId = 0;
      END IF;


      SET _done = 0 ;

      OPEN myCursor;

         myLoop: LOOP


          FETCH myCursor INTO _rkId,_lastQty,_Price;

          IF _rkId = 0 OR  ISNULL(_rkId) OR IN_llQty = 0 THEN

             SET _done = 1;

          END IF;



          IF _done = 1  THEN

               LEAVE myLoop;

          END IF;



          IF   IN_llQty < _lastQty  THEN

              SET  _llQty =  IN_llQty;

              INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`)
                     VALUES (IN_POrderId,IN_sPOrderId,IN_StockId,IN_StuffId,_Price,_llQty,IN_comboxSign,_Type,_FromId,_Remarks,_rkId,'0',_Estate,CURDATE(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW());

              SET _llId= LAST_INSERT_ID();


              IF  _llId>0  THEN

                  UPDATE  ck1_rksheet  SET llQty = llQty + _llQty ,llSign = 2  WHERE Id = _rkId;

                  SET  IN_llQty =  IN_llQty - _llQty ;

                  SET  _looptimes = _looptimes + 1;

              END IF ;


          END IF ;



          IF   IN_llQty >= _lastQty  THEN

               SET  _llQty =  _lastQty;

               INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`)
                     VALUES (IN_POrderId,IN_sPOrderId,IN_StockId,IN_StuffId,_Price,_llQty,IN_comboxSign,_Type,_FromId,_Remarks,_rkId,'0',_Estate,CURDATE(),IN_Operator,'0','0000-00-00','0',IN_Operator,NOW());

               SET _llId= LAST_INSERT_ID();

               IF  _llId>0  THEN

                   UPDATE  ck1_rksheet  SET llQty = llQty + _llQty ,llSign = 0  WHERE Id = _rkId;

                   SET  IN_llQty =  IN_llQty - _llQty ;

                   SET  _looptimes = _looptimes + 1;

              END IF ;

          END IF ;


       END LOOP  myLoop;


    CLOSE myCursor;


    IF   _looptimes > 0  THEN

        SET   _error = 0;

    ELSE

        SET   _error = 1;

    END IF ;


    RETURN   _error;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for saveStuffCombox_Bf
-- ----------------------------
DROP FUNCTION IF EXISTS `saveStuffCombox_Bf`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `saveStuffCombox_Bf`(`IN_StuffId` MEDIUMINT(9), `IN_Operator` MEDIUMINT(9)) RETURNS int(10)
    SQL SECURITY INVOKER
BEGIN

     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _Relation INT(4);
     DECLARE _mSumllQty  decimal(11,2);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinllQty  decimal(11,2);
     DECLARE _bfQty  decimal(11,2);
     DECLARE _llQty decimal(11,2);
     DECLARE _llId  INT(11);
     DECLARE _rkId  INT(11);
     DECLARE _lastQty decimal(11,2);
     DECLARE _Price  decimal(11,2);
     DECLARE _error INTEGER DEFAULT 0;
     DECLARE _done INT DEFAULT -1;


     DECLARE myCursor cursor for SELECT  Id, (Qty - llQty) AS lastQty,Price  FROM ck1_rksheet
                                 WHERE StuffId IN (SELECT mStuffId FROM stuffcombox_bom WHERE StuffId = IN_StuffId ) AND llQty<Qty AND llSign >0 ORDER BY Id ASC;

     DECLARE  CONTINUE HANDLER FOR  NOT FOUND set _done=1;
     DECLARE CONTINUE HANDLER FOR SQLEXCEPTION
     BEGIN
       SET _error=1;

     END;


     SELECT mStuffId ,Relation   FROM  stuffcombox_bom  WHERE  StuffId = IN_StuffId  INTO  _mStuffId ,_Relation;

     IF _mStuffId >0  THEN

          SELECT MIN(llQty) AS llQty,A.Price
	                              FROM (
		                             SELECT D.Price, IFNULL(SUM(L.Qty),0) AS llQty
		                             FROM stuffcombox_bom  S
		                             LEFT JOIN stuffdata D ON D.StuffId = S.StuffId
		                             LEFT JOIN ck5_llsheet  L ON L.StuffId = S.StuffId
		                             WHERE  S.mStuffId=_mStuffId  GROUP BY S.StuffId
                                  ) A  INTO  _MinllQty,_mPrice;

          SELECT  IFNULL(SUM(Qty),0) AS llQty  FROM ck5_llsheet  WHERE StuffId = _mStuffId  AND Type = 2  INTO  _mSumllQty ;

          IF  _MinllQty>_mSumllQty  AND _MinllQty>0 THEN

              SET   _bfQty  =  _MinllQty - _mSumllQty;

           END IF ;


          OPEN myCursor;

             myLoop: LOOP


             FETCH myCursor INTO _rkId,_lastQty,_Price;

             IF _lastQty = 0 OR _lastQty = ''  OR _bfQty<=0 THEN

                SET _done = 1;

             END IF;


             IF _done = 1  THEN

                   LEAVE myLoop;

             END IF;



             IF _lastQty > _bfQty  THEN

                 SET _llQty = _bfQty ;

                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_mStuffId,_Price,_llQty,'0','2','0','母配件自动报废领料',_rkId,'0','0',NOW(),IN_Operator,IN_Operator,NOW(),'0',IN_Operator,NOW(),IN_Operator,NOW());

                 SET _llId = LAST_INSERT_ID();



                  IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign=2  WHERE Id = _rkId;

                     SET _done = 1;

                     SET  _bfQty = _bfQty-_llQty;

                   ELSE

                      SET _error = 1;

                 END IF;

              ELSE

                 SET _llQty = _lastQty ;

                 INSERT INTO ck5_llsheet (`POrderId`, `sPOrderId`, `StockId`, `StuffId`, `Price`, `Qty`, `ComboxSign`, `Type`, `FromId`, `FromFunction`, `RkId`, `Locks`, `Estate`, `Date`, `Operator`, `Receiver`, `Received`, `PLocks`, `creator`, `created`, `modifier`, `modified`)
                                          VALUES('','','',_mStuffId,_Price,_llQty,'0','2','0','母配件自动报废领料',_rkId,'0','0',NOW(),IN_Operator,IN_Operator,NOW(),'0',IN_Operator,NOW(),IN_Operator,NOW());

                 SET _llId = LAST_INSERT_ID();

                 IF _llId >0 THEN

                     UPDATE ck1_rksheet SET llQty=llQty+_llQty,llSign = 0  WHERE Id = _rkId;

                     SET  _bfQty = _bfQty - _llQty;

                 ELSE

                     SET _error = 1;

                 END IF;


              END IF;


           END LOOP  myLoop;


           CLOSE myCursor;



      END IF ;

     RETURN  _error;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for saveStuffCombox_Bprk
-- ----------------------------
DROP FUNCTION IF EXISTS `saveStuffCombox_Bprk`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `saveStuffCombox_Bprk`(`IN_StuffId` MEDIUMINT(9), `IN_RkMid` INT(10), `IN_Operator` MEDIUMINT(9)) RETURNS int(10)
    SQL SECURITY INVOKER
BEGIN

     DECLARE _mStuffId MEDIUMINT(9);
     DECLARE _Relation INT(4);
     DECLARE _mSumRkQty  decimal(11,2);
     DECLARE _mPrice decimal(11,2);
     DECLARE _MinRkQty  decimal(11,2);
     DECLARE _RkQty  decimal(11,2);
     DECLARE _RkId  INT(11);
     DECLARE _error INTEGER DEFAULT 0;


     SELECT mStuffId ,Relation   FROM  stuffcombox_bom  WHERE  StuffId = IN_StuffId  INTO  _mStuffId ,_Relation;

      IF _mStuffId >0  THEN

          SELECT MIN(rkQty) AS rkQty,A.Price
	                              FROM (
		                             SELECT D.Price, IFNULL(SUM(K.Qty),0) AS rkQty
		                             FROM stuffcombox_bom  S
		                             LEFT JOIN stuffdata D ON D.StuffId = S.StuffId
		                             LEFT JOIN ck1_rksheet  K ON K.StuffId = S.StuffId AND K.Type=2
		                             WHERE  S.mStuffId=_mStuffId  GROUP BY S.StuffId
                                  ) A  INTO  _MinRkQty,_mPrice;

          SELECT  IFNULL(SUM(Qty),0) AS RkQty  FROM ck1_rksheet  WHERE StuffId = _mStuffId  AND Type = 2  INTO  _mSumRkQty ;

          IF  _MinRkQty>_mSumRkQty  AND _MinRkQty>0 THEN


              SET   _RkQty  =  _MinRkQty - _mSumRkQty;


              IF _RkQty>0 THEN


                   INSERT INTO ck1_rksheet(`Mid`, sPOrderId, StockId, StuffId, Price, Qty, llQty, llSign, gys_Id, Type, FromId, FromFunction, Locks, Estate ,PLocks, creator, created, modifier, modified, `Date`, Operator)
                            VALUES (IN_RkMid,'','',_mStuffId,_mPrice,_RkQty,'0','1','0','2','0','母配件自动备品入库','0','1','0',IN_Operator,NOW(),IN_Operator,NOW(),NOW(),IN_Operator);

                  SET _RkId= LAST_INSERT_ID();


                  IF  ISNULL(_RkId)  OR  _RkId = 0  THEN

                      SET   _error  = 1;

                  END IF;

              END IF ;

           END IF ;

      END IF ;

     RETURN  _error;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for setCgCostPrice
-- ----------------------------
DROP FUNCTION IF EXISTS `setCgCostPrice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `setCgCostPrice`(`IN_mStockId` VARCHAR(15)) RETURNS decimal(10,3)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

declare _Relation VARCHAR(15);
declare _Price decimal(10,3);
declare _CostPrice decimal(10,3) default 0.0;

declare _Position MIDDLEINT(9);
declare _done int default -1;
declare _error INTEGER DEFAULT 0;

declare myCursor cursor for  SELECT G.Relation,IF(T.mainType IN (getSysConfig(103)),S.CostPrice,S.Price) AS Price
           FROM  cg1_semifinished G
           LEFT JOIN cg1_stocksheet S ON S.StockId=G.StockId
           LEFT JOIN stuffdata D ON D.StuffId=S.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE  G.mStockId=IN_mStockId;

 DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Relation,_Price;


        if _done = 1 then
            leave myLoop;
        end if;

        SET _Position=INSTR (_Relation ,'/');
        IF _Position>1 THEN
            SET _CostPrice =_CostPrice+_Price*SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);
         ELSE
            SET _CostPrice =_CostPrice+_Price*_Relation;
         END IF;


    END LOOP  myLoop;

    close myCursor;

    IF _error=0 THEN
        UPDATE cg1_stocksheet SET CostPrice=_CostPrice WHERE StockId=IN_mStockId;
    END IF;

    RETURN _CostPrice;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for setFirstTypeListName
-- ----------------------------
DROP FUNCTION IF EXISTS `setFirstTypeListName`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `setFirstTypeListName`(`IN_FirstId` VARCHAR(12)) RETURNS varchar(200) CHARSET utf8
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
  declare _NewFirstId VARCHAR(12) DEFAULT '';
  declare _Name VARCHAR(30);
  declare _ListName VARCHAR(200) DEFAULT '';
  declare _Len TINYINT(4);
  declare _sLen TINYINT(4);

  SET _Len=LENGTH(IN_FirstId);
  SET _sLen=4;

myLoop: LOOP
   SET _NewFirstId=LEFT(IN_FirstId,_sLen);
   SELECT Name FROM acfirsttype WHERE FirstId=_NewFirstId INTO _Name;

   IF _Name IS NOT NULL THEN
     IF LENGTH(_ListName)=0 THEN
       SET _ListName=_Name;
     ELSE
       SET _ListName=CONCAT(_ListName,'-',_Name);
     END IF;
  END IF;
  SET _sLen=_sLen+2;

  if _sLen >_Len then
      leave myLoop;
  end if;
END LOOP  myLoop;

RETURN _ListName;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for setNewStuffCostPrice
-- ----------------------------
DROP FUNCTION IF EXISTS `setNewStuffCostPrice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `setNewStuffCostPrice`(`IN_mStuffId` INT(9)) RETURNS int(11)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

declare _Relation VARCHAR(15);
declare _Price decimal(10,3);
declare _OldPrice decimal(10,3);
declare _NewPrice decimal(10,3) default 0.0000;
declare _CostPrice decimal(10,3);
declare _OldCostPrice decimal(10,3);
declare _newCostPrice decimal(10,3) default 0.0000;
declare _Position MIDDLEINT(9);
declare _done int default -1;

declare _error INTEGER DEFAULT 0;
declare _Counts INTEGER DEFAULT 0;
declare _RunCounts INTEGER DEFAULT 0;
declare _blSign INTEGER DEFAULT 0;
declare _mainType MIDDLEINT(9);
declare _TypeId MIDDLEINT(9);
declare _scType MIDDLEINT(9);
declare _zzType MIDDLEINT(9);
declare _ActionId MIDDLEINT(9);
declare _pValue decimal(10,3);
declare _CompanyIds VARCHAR(100);
declare _CompanyId MIDDLEINT(9);
declare _TaxValue DECIMAL(6,2);
declare _defaultTaxValue DECIMAL(6,2) default 0.17;

declare myCursor cursor for  SELECT G.Relation,IF(T.mainType IN (getSysConfig(103)),IFNULL(E.Price,D.Price),D.Price)*IFNULL(C.Rate,1) AS Price,
           A.CompanyId,X.Value AS TaxValue,D.TypeId,T.mainType,T.ActionId,TM.blSign
           FROM  semifinished_bom G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice E ON E.StuffId=D.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype TM ON TM.Id=T.mainType
           LEFT JOIN bps A ON A.StuffId=G.StuffId
           LEFT JOIN trade_object P ON P.CompanyId = A.CompanyId
           LEFT JOIN currencydata C ON C.Id=P.Currency
		   LEFT JOIN providersheet V ON V.CompanyId = A.CompanyId
		   LEFT JOIN provider_addtax X ON X.Id = V.AddValueTax
           WHERE  G.mStuffId=IN_mStuffId;

 DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;

 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


 SET _CompanyIds=getSysConfig(106);
 SET _scType = getSysConfig(102);
 SET _zzType = getSysConfig(108);


    open myCursor;





    myLoop: LOOP





        fetch myCursor into _Relation,_Price,_CompanyId,_TaxValue,_TypeId,_mainType,_ActionId,_blSign;





        if _done = 1 then

            leave myLoop;

        end if;


        IF _Price!=0 AND _TypeId!=_zzType THEN
			IF FIND_IN_SET(_CompanyId,_CompanyIds)>0 THEN
				SET _TaxValue = 0;
			  ELSE
				IF _TaxValue = 0 OR ISNULL(_TaxValue) THEN
					 SET _TaxValue = 0.17;
				END IF;
			END IF;

			SET _Position=INSTR (_Relation ,'/');
			IF _Position>1 THEN
				SET _Price =_Price*SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);

			 ELSE
				SET _Price =_Price*_Relation;

			 END IF;
			 SET _NewPrice =_NewPrice+_Price;

			 IF _blSign=1 OR (_mainType=_scType AND FIND_IN_SET(_CompanyId,_CompanyIds)=0)  THEN
				  SET _NewCostPrice =_NewCostPrice+_Price/(1+_TaxValue);
				ELSE
				   SET _NewCostPrice =_NewCostPrice+_Price;
			 END IF;

             IF _mainType=_scType AND FIND_IN_SET(_CompanyId,_CompanyIds)>0 AND _ActionId>0 THEN
                 SET _pValue = getFactoryOverhead(_ActionId);
                 SET _Price = _Price*_pValue;
                 SET _NewPrice =_NewPrice+_Price;
                 SET _NewCostPrice =_NewCostPrice+_Price;
             END IF;
           ELSE
             IF _TypeId=_zzType AND getFactoryOverhead(_ActionId)=0 THEN
                SET _NewPrice =_NewPrice+_Price;
                SET _NewCostPrice =_NewCostPrice+_Price;
             END IF;
         END IF;

         SET _RunCounts=_RunCounts+1;



    END LOOP  myLoop;



    close myCursor;

    IF _error=0 AND _RunCounts>0 THEN
        SELECT Price,CostPrice FROM stuffcostprice WHERE  StuffId=IN_mStuffId INTO _OldPrice,_OldCostPrice;
        IF _OldCostPrice!=_NewCostPrice OR _OldPrice!=_NewPrice OR  ISNULL(_OldCostPrice) THEN

            INSERT INTO stuffcostprice(StuffId,Price,CostPrice) VALUES (IN_mStuffId,_NewPrice,_NewCostPrice)  ON DUPLICATE KEY UPDATE Price=_NewPrice,CostPrice=_NewCostPrice;
            INSERT INTO stuffcostprice_log (StuffId,OldPrice,Price,OldCostPrice,CostPrice)VALUES(IN_mStuffId,_OldPrice,_NewPrice,_OldCostPrice,_NewCostPrice);

            SET _Counts=_Counts+1;
        END IF;
    END IF;

    RETURN _Counts;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for setOrderCostPrice
-- ----------------------------
DROP FUNCTION IF EXISTS `setOrderCostPrice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `setOrderCostPrice`(`IN_POrderId` VARCHAR(12)) RETURNS tinyint(4)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN
   DECLARE _maxLevel TINYINT DEFAULT 0;
   DECLARE _error INTEGER DEFAULT 0;
   DECLARE _done INTEGER DEFAULT -1;

   DECLARE _CostAmount decimal(10,3) DEFAULT 0.00;
   DECLARE _PriceAmount decimal(10,3) DEFAULT 0.00;
   DECLARE _CompanyIds VARCHAR(100);
   DECLARE _semiMainType MIDDLEINT(9);
   DECLARE _semiSign MIDDLEINT(9);
   DECLARE _runCounts MIDDLEINT(9) DEFAULT 0;
   DECLARE _Incomplete TINYINT DEFAULT 0;

   DECLARE _StockId VARCHAR(15);
   DECLARE _CompanyId MIDDLEINT(9);
   DECLARE _CostPrice decimal(10,3);
   DECLARE _Price decimal(10,3);
   DECLARE _StockPrice decimal(10,3);
   DECLARE _Rate decimal(10,3);
   DECLARE _OrderQty decimal(10,3);
   DECLARE _StockQty decimal(10,3);
   DECLARE _AddQty decimal(10,3);
   DECLARE _blSign INTEGER DEFAULT 0;
   DECLARE _mainType MIDDLEINT(9);
   DECLARE _TypeId MIDDLEINT(9);
   DECLARE _ActionId MIDDLEINT(9);

   DECLARE _oQty MIDDLEINT(9);
   DECLARE _oPrice decimal(10,3);
   DECLARE _oAmount decimal(10,3);
   DECLARE _Profit DECIMAL(11,3) DEFAULT 0.00;
   DECLARE _OrderProfit decimal(10,3) DEFAULT 0.00;
   DECLARE _Percent DECIMAL(4,1) DEFAULT 0;

   DECLARE myCursor cursor for SELECT G.StockId,G.CompanyId,G.OrderQty,G.StockQty,G.AddQty,G.Price,G.CostPrice,IFNULL(E.Price,G.Price) AS StockPrice,D.TypeId,T.mainType,T.ActionId,TM.blSign,IFNULL(C.Rate,1.00) AS Rate
           FROM  cg1_stocksheet G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stuffcostprice E ON E.StuffId=D.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           LEFT JOIN stuffmaintype TM ON TM.Id=T.mainType
           LEFT JOIN trade_object P ON P.CompanyId = G.CompanyId
           LEFT JOIN currencydata C ON C.Id=P.Currency
           WHERE   G.POrderId=IN_POrderId AND G.Level=_maxLevel;

   DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
   DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;

   SELECT MAX(Level) FROM cg1_stocksheet WHERE POrderId=IN_POrderId INTO _maxLevel;

   SET _CompanyIds = getSysConfig(106);
   SET _semiMainType = getSysConfig(103);
   WHILE _maxLevel>0 DO
       OPEN myCursor;
       myLoop: LOOP
          FETCH myCursor INTO _StockId,_CompanyId,_OrderQty,_StockQty,_AddQty,_Price,_CostPrice,_StockPrice,_TypeId,_mainType,_ActionId,_blSign,_Rate;

          IF _done = 1 THEN  LEAVE myLoop;  END IF;


          IF FIND_IN_SET(_mainType,_semiMainType)>0 THEN
              SELECT COUNT(*) FROM cg1_semifinished WHERE mStockId=_StockId INTO _semiSign;

              IF _semiSign>0 THEN



                  SET _PriceAmount=_PriceAmount+_StockQty*_Price*_Rate-_AddQty*_Price*_Rate;

                  SET _CostAmount =_CostAmount+_StockQty*_CostPrice*_Rate-_AddQty*_CostPrice*_Rate;
             ELSE
                IF _OrderQty>_StockQty AND FIND_IN_SET(_CompanyId,_CompanyIds)>0 THEN
                    SET _Incomplete=1;
                END IF;
                SET _PriceAmount=_PriceAmount+_OrderQty*_Price*_Rate;
                SET _CostAmount =_CostAmount+_OrderQty*_CostPrice*_Rate;
            END IF;
          ELSE
               SET _PriceAmount=_PriceAmount+_OrderQty*_Price*_Rate;
               SET _CostAmount =_CostAmount+_OrderQty*_CostPrice*_Rate;
          END IF;

      END LOOP  myLoop;
      CLOSE myCursor;
      SET _done = -1;
      SET _maxLevel=_maxLevel-1;
   END WHILE;


   IF _error =0 THEN
      SELECT S.Qty,S.Price,S.Qty*S.Price*IFNULL(C.Rate,1) AS Amount,IFNULL(C.Rate,1) AS Rate
            FROM yw1_ordersheet S
            INNER JOIN yw1_ordermain M ON M.OrderNumber=S.OrderNumber
            LEFT JOIN trade_object P ON P.CompanyId = M.CompanyId
            LEFT JOIN currencydata C ON C.Id=P.Currency
            WHERE POrderId=IN_POrderId INTO _oQty,_oPrice,_oAmount,_Rate;

     SET _OrderProfit=_oAmount-_PriceAmount;


     IF _oQty>0  THEN
        SET _Profit=_OrderProfit/_oQty;
      END IF;

     IF _oPrice>0 THEN
          SET _Percent=_Profit*100/(_oPrice*_Rate);
     ELSE
          IF _PriceAmount>0 THEN
             SET _Percent=_OrderProfit*100/_PriceAmount;
          END IF;
     END IF;

    INSERT INTO yw1_ordercost(POrderId,Qty,Price,PriceAmount,CostAmount,Profit,Percent,Incomplete,Date,Operator) VALUES (IN_POrderId,_oQty,_oPrice,_PriceAmount,_CostAmount,_Profit,_Percent,_Incomplete,CURDATE(),0)
           ON DUPLICATE KEY  UPDATE Qty=_oQty,Price=_oPrice,PriceAmount=_PriceAmount,CostAmount=_CostAmount,Profit=_Profit,Percent=_Percent,Incomplete=_Incomplete,modified=NOW();
   END IF;


   IF _error =0 THEN
        RETURN 1;
   ELSE
        RETURN 0;
   END IF;

END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for setStuffCostPrice
-- ----------------------------
DROP FUNCTION IF EXISTS `setStuffCostPrice`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `setStuffCostPrice`(`IN_mStuffId` INT(9)) RETURNS decimal(10,3)
    DETERMINISTIC
    SQL SECURITY INVOKER
BEGIN

declare _Relation VARCHAR(15);
declare _Price decimal(10,3);
declare _CostPrice decimal(10,3) default 0.0;
declare _OldCostPrice decimal(10,3);
declare _Position MIDDLEINT(9);
declare _done int default -1;
declare _error INTEGER DEFAULT 0;

declare myCursor cursor for  SELECT G.Relation,IF(T.mainType IN (getSysConfig(103)),D.CostPrice,D.Price) AS Price
           FROM  semifinished_bom G
           LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
           LEFT JOIN stufftype T ON T.TypeId=D.TypeId
           WHERE  G.mStuffId=IN_mStuffId;

 DECLARE CONTINUE HANDLER FOR NOT FOUND SET _done=1;
 DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET _error=1;


    open myCursor;


    myLoop: LOOP


        fetch myCursor into _Relation,_Price;


        if _done = 1 then
            leave myLoop;
        end if;

        SET _Position=INSTR (_Relation ,'/');
        IF _Position>1 THEN
            SET _CostPrice =_CostPrice+_Price*SUBSTR(_Relation,1,_Position-1)/SUBSTR(_Relation,_Position+1);
         ELSE
            SET _CostPrice =_CostPrice+_Price*_Relation;
         END IF;


    END LOOP  myLoop;

    close myCursor;

    IF _error=0 THEN
        SELECT CostPrice FROM stuffdata WHERE  StuffId=IN_mStuffId INTO _OldCostPrice;
        IF _OldCostPrice!=_CostPrice THEN
            UPDATE stuffdata SET CostPrice=_CostPrice WHERE StuffId=IN_mStuffId;
            INSERT INTO stuffcostprice_log (StuffId,OldPrice,NewPrice)VALUES(IN_mStuffId,_OldCostPrice,_CostPrice);
        END IF;
    END IF;

    RETURN _CostPrice;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for strDistinctConcatString
-- ----------------------------
DROP FUNCTION IF EXISTS `strDistinctConcatString`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `strDistinctConcatString`(`str` VARCHAR(20480)) RETURNS varchar(20480) CHARSET utf8
    SQL SECURITY INVOKER
BEGIN
    DECLARE _newStr VARCHAR(20480) DEFAULT '';
    DECLARE _tempStr VARCHAR(2000) DEFAULT '';
    DECLARE _tempStr1 VARCHAR(2000) DEFAULT '';
    DECLARE _pos MIDDLEINT(6);

    REPEAT
       SET _pos=LOCATE(',',str);

       IF _pos>0 THEN
           SET _tempStr = LEFT(str,_pos-1);

           IF LENGTH(_newStr)>0 THEN
                SET _newStr = CONCAT(_newStr,',');
           END IF;
           SET _newStr = CONCAT(_newStr,_tempStr);
           SET _tempStr1 = CONCAT(_tempStr,',');
           SET str = REPLACE(str,_tempStr1,'');

           SET _tempStr1 = CONCAT(',',_tempStr);
           SET str = REPLACE(str,_tempStr1,'');
           SET str = REPLACE(str,_tempStr,'');
         ELSE

           IF  LENGTH(str)>0 THEN
              IF LENGTH(_newStr)>0  THEN
                SET _newStr = CONCAT(_newStr,',');
              END IF;
              SET _newStr = CONCAT(_newStr,str);
           END IF;
       END IF;

    UNTIL _pos=0 END REPEAT;

    IF LENGTH(_newStr)>0 THEN
       RETURN  _newStr;
    ELSE
       RETURN  str;
    END IF;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for strSplit
-- ----------------------------
DROP FUNCTION IF EXISTS `strSplit`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `strSplit`(`str` VARCHAR(20480), `delim` VARCHAR(12), `pos` INT) RETURNS varchar(255) CHARSET utf8
    SQL SECURITY INVOKER
BEGIN
return replace(substring(substring_index(str, delim, pos), char_length(substring_index(str, delim, pos - 1)) + 1), delim, '')
;
END
;;
DELIMITER ;

-- ----------------------------
-- Function structure for substrCount
-- ----------------------------
DROP FUNCTION IF EXISTS `substrCount`;
DELIMITER ;;
CREATE DEFINER=`root`@`localhost` FUNCTION `substrCount`(`str` VARCHAR(10000), `delim` VARCHAR(12)) RETURNS int(11)
    SQL SECURITY INVOKER
BEGIN
return (char_length(str)-char_length(REPLACE(str, delim, '')))/char_length(delim);
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `acfirsttype_insert`;
DELIMITER ;;
CREATE TRIGGER `acfirsttype_insert` BEFORE INSERT ON `acfirsttype` FOR EACH ROW BEGIN
           DECLARE _FirstId VARCHAR(12);

           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;

          IF Length(New.FirstId)=4 THEN
              SET New.ListName=New.Name;
            ELSE
              SET  _FirstId=LEFT(New.FirstId,LENGTH(New.FirstId)-2);
              SET New.ListName=CONCAT(setFirstTypeListName(_FirstId),'-',New.Name);
          END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `acfirsttype_update`;
DELIMITER ;;
CREATE TRIGGER `acfirsttype_update` BEFORE UPDATE ON `acfirsttype` FOR EACH ROW BEGIN
   IF Old.Name!=New.Name OR Old.ListName IS NULL THEN
      SET New.ListName=setFirstTypeListName(Old.FirstId);
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `app_userlog`;
DELIMITER ;;
CREATE TRIGGER `app_userlog` BEFORE INSERT ON `app_userlog` FOR EACH ROW BEGIN
   SET New.Date=CURDATE();
   SET New.created=NOW();
   IF New.IP='192.168.20.200' OR  New.IP not like '192.168.%' THEN
      SET New.NetType=2;
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_deliverydate_insert`;
DELIMITER ;;
CREATE TRIGGER `cg1_deliverydate_insert` BEFORE INSERT ON `cg1_deliverydate` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;

           IF (New.DeliveryDate IS NOT NULL) THEN
              SET New.DeliveryWeek=IFNULL(YEARWEEK(New.DeliveryDate,1),0);
          END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_semifinished_insert`;
DELIMITER ;;
CREATE TRIGGER `cg1_semifinished_insert` BEFORE INSERT ON `cg1_semifinished` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL) THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_semifinished_update`;
DELIMITER ;;
CREATE TRIGGER `cg1_semifinished_update` BEFORE UPDATE ON `cg1_semifinished` FOR EACH ROW BEGIN
     IF (New.modifier IS NOT NULL) THEN
        SET New.modified = NOW();
     END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stockmain_insert`;
DELIMITER ;;
CREATE TRIGGER `cg1_stockmain_insert` BEFORE INSERT ON `cg1_stockmain` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stocksheet_insert`;
DELIMITER ;;
CREATE TRIGGER `cg1_stocksheet_insert` BEFORE INSERT ON `cg1_stocksheet` FOR EACH ROW BEGIN
      DECLARE _changeQty decimal(11,2) DEFAULT 0.0;
      DECLARE _oStockQty decimal(11,2) DEFAULT 0.0;

      SET _changeQty=New.FactualQty+New.AddQty+New.StockQty-New.OrderQty;
      SET _oStockQty=getStuffoStockQty(New.StuffId);

      IF New.OrderQty>0 AND _oStockQty>0 THEN
            IF _oStockQty>=New.OrderQty THEN
                UPDATE ck9_stocksheet SET oStockQty=oStockQty-New.OrderQty WHERE StuffId=New.StuffId;
                SET New.StockQty=New.OrderQty;
                SET New.FactualQty=0;
              ELSE
                SET New.StockQty=_oStockQty;
                SET New.FactualQty=New.OrderQty-_oStockQty;
                UPDATE ck9_stocksheet SET oStockQty=oStockQty-_oStockQty WHERE StuffId=New.StuffId;
            END IF;
        ELSE
           IF _changeQty>0 THEN
             UPDATE ck9_stocksheet SET oStockQty=oStockQty+_changeQty WHERE StuffId=New.StuffId;
           END IF;
      END IF;

      IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
           SET New.creator = New.Operator;
           SET New.created = NOW();
      END IF;
      IF (New.DeliveryDate IS NOT NULL) THEN
         SET New.DeliveryWeek=IFNULL(YEARWEEK(New.DeliveryDate,1),0);
      END IF;


 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stocksheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `cg1_stocksheet_inserted` AFTER INSERT ON `cg1_stocksheet` FOR EACH ROW BEGIN


      INSERT INTO cg1_processsheet SELECT NULL,New.POrderId,New.StockId,StuffId,ProcessId,BeforeProcessId,Relation,CURDATE(),New.Operator FROM process_bom WHERE  StuffId=New.StuffId;

      CALL proc_cg1_stuffcombox_insert(New.StockId,New.Operator);

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stocksheet_update`;
DELIMITER ;;
CREATE TRIGGER `cg1_stocksheet_update` BEFORE UPDATE ON `cg1_stocksheet` FOR EACH ROW BEGIN
    DECLARE _changeQty decimal(11,2) DEFAULT 0.0;
    DECLARE _oStockQty decimal(11,2) DEFAULT 0.0;

    IF (New.DeliveryDate IS NOT NULL AND New.DeliveryDate!=Old.DeliveryDate) THEN
          SET New.DeliveryWeek=IFNULL(YEARWEEK(New.DeliveryDate,1),0);
    END IF;


     IF New.OrderQty>Old.OrderQty AND NEW.StuffId=Old.StuffId THEN
            SET _oStockQty=getStuffoStockQty(New.StuffId)+Old.StockQty;
            IF _oStockQty>=New.OrderQty THEN
                SET New.StockQty=New.OrderQty;
                SET New.FactualQty=0;
              ELSE
                SET New.StockQty=_oStockQty;
                SET New.FactualQty=New.OrderQty-_oStockQty;
            END IF;
            UPDATE ck9_stocksheet SET oStockQty=oStockQty-New.StockQty+Old.StockQty WHERE StuffId=New.StuffId;
     END IF;

    IF New.OrderQty>0 and (New.StockQty+New.FactualQty)!=New.OrderQty THEN
         IF New.OrderQty>(New.StockQty+New.FactualQty) THEN
              SET New.FactualQty=New.OrderQty-New.StockQty;
           ELSE
              IF New.OrderQty<(New.StockQty+New.FactualQty) THEN
                 IF New.StockQty>New.OrderQty THEN
                       SET New.FactualQty=0;
                       SET New.StockQty=New.OrderQty;
                    ELSE
                       SET New.FactualQty=New.OrderQty-New.StockQty;
                 END IF;
              END IF;
         END IF;
    END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stocksheet_updated`;
DELIMITER ;;
CREATE TRIGGER `cg1_stocksheet_updated` AFTER UPDATE ON `cg1_stocksheet` FOR EACH ROW BEGIN
   DECLARE _oStockQty decimal(11,2) DEFAULT 0.0;


  IF New.OrderQty>Old.OrderQty AND NEW.StuffId=Old.StuffId THEN
       CALL proc_cg1_stuffcombox_updated(Old.StockId,Old.StuffId,New.Operator);
  ELSE
		IF Old.OrderQty!=New.OrderQty OR New.AddQty!=Old.AddQty OR New.FactualQty!=Old.FactualQty OR New.StockQty!=Old.StockQty THEN
			IF  Old.OrderQty=0  THEN
			   SET _oStockQty=New.FactualQty+New.AddQty-(Old.FactualQty+Old.AddQty);
			ELSE
			  IF New.OrderQty=0 AND Old.OrderQty>0 THEN
				  SET _oStockQty=New.FactualQty+New.AddQty+Old.StockQty;
			  ELSE
				  IF Old.Mid>0 THEN
						SET _oStockQty=(New.FactualQty+New.AddQty+New.StockQty-New.OrderQty)-(Old.FactualQty+Old.AddQty+Old.StockQty-Old.OrderQty);
				  ELSE
						IF New.StockQty!=Old.StockQty AND New.OrderQty=Old.OrderQty THEN
							  SET _oStockQty=Old.StockQty-New.StockQty;
						ELSE
							 SET _oStockQty=(New.FactualQty+New.AddQty+New.StockQty-New.OrderQty)-(Old.FactualQty+Old.AddQty+Old.StockQty-Old.OrderQty);
						END IF;
				  END IF;

				  IF Old.StockQty>New.OrderQty THEN
					  SET _oStockQty=_oStockQty+(Old.StockQty-New.OrderQty);
				  END IF;
			   END IF;
			END IF;

			IF New.OrderQty>0 and (New.StockQty+New.FactualQty)!=New.OrderQty THEN
				 SET _oStockQty=0;
			END IF;

			IF _oStockQty!=0  THEN
				 UPDATE ck9_stocksheet SET oStockQty=oStockQty+_oStockQty WHERE StuffId=Old.StuffId;
		   END IF;

			CALL proc_cg1_stuffcombox_updated(Old.StockId,Old.StuffId,New.Operator);
		  END IF;
  END IF;

  IF  New.OrderQty=Old.OrderQty AND (New.AddQty+New.FactualQty)!=(Old.AddQty+Old.FactualQty) THEN
       CALL  proc_cg1_semifinished_check(Old.StockId,New.AddQty+New.FactualQty);
  END IF;

   IF (New.POrderId!=Old.POrderId) THEN
         UPDATE ck5_llsheet SET POrderId=New.POrderId WHERE StockId=Old.StockId;
         UPDATE cg1_processsheet SET POrderId=New.POrderId WHERE StockId=Old.StockId;
   END IF;



END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stocksheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `cg1_stocksheet_deleted` AFTER DELETE ON `cg1_stocksheet` FOR EACH ROW BEGIN
      IF Old.OrderQty=0 THEN
           UPDATE ck9_stocksheet SET oStockQty=oStockQty-Old.FactualQty WHERE StuffId=Old.StuffId;
         ELSE
         IF Old.StockQty>0 OR Old.AddQty>0 THEN
           UPDATE ck9_stocksheet SET oStockQty=oStockQty+Old.StockQty-Old.AddQty WHERE StuffId=Old.StuffId;
         END IF;
      END IF;

      DELETE FROM cg1_stuffcombox WHERE mStockId=Old.StockId AND mStuffId=Old.StuffId ;

      IF Old.blSign=0 THEN
         DELETE FROM cg1_processsheet WHERE StockId=Old.StockId;
         DELETE FROM yw1_scsheet WHERE StockId=Old.StockId;
      END IF;

      DELETE FROM yw1_stocksheet WHERE mStockId=Old.StockId;
      DELETE FROM yw1_stocksheet WHERE StockId=Old.StockId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stuffcombox_insert`;
DELIMITER ;;
CREATE TRIGGER `cg1_stuffcombox_insert` BEFORE INSERT ON `cg1_stuffcombox` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = NOW();
                 SET New.modified = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stuffcombox_inserted`;
DELIMITER ;;
CREATE TRIGGER `cg1_stuffcombox_inserted` AFTER INSERT ON `cg1_stuffcombox` FOR EACH ROW BEGIN
      IF (New.StockQty>0 OR New.AddQty>0) THEN
         UPDATE ck9_stocksheet SET oStockQty=oStockQty-New.StockQty+New.AddQty WHERE StuffId=New.StuffId;
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stuffcombox_updated`;
DELIMITER ;;
CREATE TRIGGER `cg1_stuffcombox_updated` AFTER UPDATE ON `cg1_stuffcombox` FOR EACH ROW BEGIN
   DECLARE _oStockQty INT(11) DEFAULT 0;
   DECLARE _AddQty INT(11) DEFAULT 0;

   IF (New.StockQty!=Old.StockQty) THEN
       SET _oStockQty=New.StockQty-Old.StockQty;
   END IF;

   IF (New.AddQty!=Old.AddQty) THEN
      SET  _AddQty=New.AddQty-Old.AddQty;
   END IF;

   IF (_oStockQty!=0 OR _AddQty!=0) THEN
         UPDATE ck9_stocksheet SET oStockQty=oStockQty-_oStockQty+_AddQty WHERE StuffId=Old.StuffId;
      END IF;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cg1_stuffcombox_deleted`;
DELIMITER ;;
CREATE TRIGGER `cg1_stuffcombox_deleted` AFTER DELETE ON `cg1_stuffcombox` FOR EACH ROW BEGIN
      IF (Old.StockQty>0 OR Old.AddQty>0) THEN
         UPDATE ck9_stocksheet SET oStockQty=oStockQty+Old.StockQty-Old.AddQty WHERE StuffId=Old.StuffId;
      END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch10_samplemail_insert`;
DELIMITER ;;
CREATE TRIGGER `ch10_samplemail_insert` BEFORE INSERT ON `ch10_samplemail` FOR EACH ROW BEGIN
   IF NEW.SendDate IS NOT NULL THEN
      SET NEW.Month=DATE_FORMAT(NEW.SendDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch10_samplemail_update`;
DELIMITER ;;
CREATE TRIGGER `ch10_samplemail_update` BEFORE UPDATE ON `ch10_samplemail` FOR EACH ROW BEGIN
   IF NEW.SendDate!=OLD.SendDate THEN
      SET NEW.Month=DATE_FORMAT(NEW.SendDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch1_shipsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `ch1_shipsheet_insert` AFTER INSERT ON `ch1_shipsheet` FOR EACH ROW BEGIN
  UPDATE  productstock  SET  tStockQty = tStockQty - New.Qty  WHERE ProductId = New.ProductId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch1_shipsheet_updated`;
DELIMITER ;;
CREATE TRIGGER `ch1_shipsheet_updated` AFTER UPDATE ON `ch1_shipsheet` FOR EACH ROW BEGIN
    DECLARE _chQty INT(9);
    DECLARE _orderQty INT(9);

    IF New.Estate=0 THEN
        SELECT SUM(Qty) AS Qty FROM yw1_ordersheet WHERE POrderId=OLD.POrderId INTO _orderQty;
        SELECT SUM(Qty) AS Qty FROM ch1_shipsheet WHERE POrderId=OLD.POrderId INTO _chQty;

        IF _orderQty=_chQty THEN
           UPDATE yw1_ordersheet SET Estate=0,scFrom=0 WHERE POrderId=OLD.POrderId;
        END IF;
    END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch1_shipsheet_delete`;
DELIMITER ;;
CREATE TRIGGER `ch1_shipsheet_delete` AFTER DELETE ON `ch1_shipsheet` FOR EACH ROW BEGIN
   UPDATE productstock  SET tStockQty = tStockQty + Old.Qty WHERE  ProductId = Old.ProductId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch3_forward_insert`;
DELIMITER ;;
CREATE TRIGGER `ch3_forward_insert` BEFORE INSERT ON `ch3_forward` FOR EACH ROW BEGIN
   IF NEW.InvoiceDate IS NOT NULL THEN
      SET NEW.Month=DATE_FORMAT(NEW.InvoiceDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ch3_forward_update`;
DELIMITER ;;
CREATE TRIGGER `ch3_forward_update` BEFORE UPDATE ON `ch3_forward` FOR EACH ROW BEGIN
    IF NEW.InvoiceDate!=OLD.InvoiceDate THEN
      SET NEW.Month=DATE_FORMAT(NEW.InvoiceDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `checkinout_inserted`;
DELIMITER ;;
CREATE TRIGGER `checkinout_inserted` BEFORE INSERT ON `checkinout` FOR EACH ROW BEGIN
   DECLARE _status TINYINT DEFAULT 0;
   SET New.Date=DATE_FORMAT(New.CheckTime,'%Y-%m-%d');

   IF New.Date=CURDATE() THEN
      IF New.CheckType='I' THEN
         SET _status=1;
        ELSE
         SET _status=0;
      END IF;
      INSERT INTO staff_workstatus (Number,BranchId,GroupId,JobId,CheckType,Date,Operator) VALUES(New.Number,New.BranchId,'0',New.JobId,_status,CURDATE(),New.Operator)
      ON DUPLICATE KEY UPDATE CheckType=_status,Date=CURDATE(),Operator=New.Operator;
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `checkinout_updated`;
DELIMITER ;;
CREATE TRIGGER `checkinout_updated` AFTER UPDATE ON `checkinout` FOR EACH ROW BEGIN
   DECLARE _status TINYINT DEFAULT 0;


   IF (New.CheckType!=Old.CheckType AND DATE_FORMAT(New.CheckTime,'%Y-%m-%d')=CURDATE()) THEN
        IF New.CheckType='I' THEN
             SET _status=1;
        ELSE
            SET _status=0;
        END IF;
       UPDATE staff_workstatus  SET CheckType=_status,Date=CURDATE() WHERE Number=New.Number;
   END IF;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck1_rksheet_insert`;
DELIMITER ;;
CREATE TRIGGER `ck1_rksheet_insert` BEFORE INSERT ON `ck1_rksheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = NOW();
                 SET New.modified = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck1_rksheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `ck1_rksheet_inserted` AFTER INSERT ON `ck1_rksheet` FOR EACH ROW BEGIN
      IF (New.Qty<>0) THEN
         UPDATE ck9_stocksheet SET tStockQty=tStockQty+New.Qty WHERE StuffId=New.StuffId;
         CALL proc_ck9_stocksheet_updated(New.StuffId);
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `c1_rksheet_update`;
DELIMITER ;;
CREATE TRIGGER `c1_rksheet_update` BEFORE UPDATE ON `ck1_rksheet` FOR EACH ROW BEGIN
    SET New.modified = NOW();
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck1_rksheet_updated`;
DELIMITER ;;
CREATE TRIGGER `ck1_rksheet_updated` AFTER UPDATE ON `ck1_rksheet` FOR EACH ROW BEGIN
  IF (New.Qty IS NOT NULL AND New.Qty<>Old.Qty) OR New.StuffId!=Old.StuffId THEN
     IF New.StuffId=Old.StuffId  AND  New.Qty<>Old.Qty THEN
        UPDATE ck9_stocksheet SET tStockQty=tStockQty+New.Qty-Old.Qty WHERE StuffId=Old.StuffId;
        CALL proc_ck9_stocksheet_updated(Old.StuffId);
      END IF ;
      IF  New.StuffId!=Old.StuffId  AND  New.Qty<>Old.Qty THEN
         UPDATE ck9_stocksheet SET tStockQty=tStockQty-Old.Qty WHERE StuffId=Old.StuffId;
         UPDATE ck9_stocksheet SET tStockQty=tStockQty+New.Qty WHERE StuffId=New.StuffId;
     END IF;
  END IF;

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck1_rksheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `ck1_rksheet_deleted` AFTER DELETE ON `ck1_rksheet` FOR EACH ROW BEGIN
     UPDATE ck9_stocksheet SET tStockQty=tStockQty-Old.Qty WHERE StuffId=Old.StuffId;
     CALL proc_ck9_stocksheet_updated(Old.StuffId);
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck5_llsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `ck5_llsheet_insert` BEFORE INSERT ON `ck5_llsheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = NOW();
                 SET New.modified = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck5_llsheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `ck5_llsheet_inserted` AFTER INSERT ON `ck5_llsheet` FOR EACH ROW BEGIN
      IF (New.Qty >0) THEN
         UPDATE ck9_stocksheet SET tStockQty=tStockQty-New.Qty WHERE StuffId=New.StuffId;
         CALL proc_ck9_stocksheet_updated(New.StuffId);
         CALL proc_ck5_llsheet_updated(New.sPOrderId,New.StuffId);

         UPDATE  ck1_rksheet   SET llSign = 0   WHERE  Qty =llQty AND llSign!=0 AND StuffId = New.StuffId;
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck5_llsheet_update`;
DELIMITER ;;
CREATE TRIGGER `ck5_llsheet_update` BEFORE UPDATE ON `ck5_llsheet` FOR EACH ROW BEGIN
    SET New.modified = NOW();
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck5_llsheet_updated`;
DELIMITER ;;
CREATE TRIGGER `ck5_llsheet_updated` AFTER UPDATE ON `ck5_llsheet` FOR EACH ROW BEGIN
  IF (New.Qty IS NOT NULL AND New.Qty!=old.Qty) OR New.StuffId!=Old.StuffId THEN
     IF New.StuffId=Old.StuffId THEN
        UPDATE ck9_stocksheet SET tStockQty=tStockQty+Old.Qty-New.Qty WHERE StuffId=Old.StuffId;
        CALL proc_ck9_stocksheet_updated(Old.StuffId);
      ELSE
         UPDATE ck9_stocksheet SET tStockQty=tStockQty+Old.Qty WHERE StuffId=Old.StuffId;
         UPDATE ck9_stocksheet SET tStockQty=tStockQty-New.Qty WHERE StuffId=New.StuffId;
    END IF;
     CALL proc_ck5_llsheet_updated(New.sPOrderId,New.StuffId);
     UPDATE  ck1_rksheet   SET llSign = 0   WHERE  Qty =llQty AND llSign!=0 AND StuffId = New.StuffId;

  END IF;

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `ck5_llsheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `ck5_llsheet_deleted` AFTER DELETE ON `ck5_llsheet` FOR EACH ROW BEGIN
     IF Old.Qty > 0 THEN
         UPDATE ck9_stocksheet SET tStockQty=tStockQty+Old.Qty WHERE StuffId=Old.StuffId;
         CALL proc_ck9_stocksheet_updated(Old.StuffId);
         CALL proc_ck5_llsheet_updated(Old.sPOrderId,Old.StuffId);

         UPDATE  ck1_rksheet   SET llSign = 2,llQty = llQty - Old.Qty  WHERE  Id = Old.RkId  AND StuffId = Old.StuffId;
     END IF ;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw11_jjsheet_update`;
DELIMITER ;;
CREATE TRIGGER `cw11_jjsheet_update` BEFORE UPDATE ON `cw11_jjsheet` FOR EACH ROW BEGIN
   IF NEW.RandP!=OLD.RandP THEN
       SET NEW.Amount = OLD.jjAmount - NEW.RandP;
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw14_mdtaxmain_insert`;
DELIMITER ;;
CREATE TRIGGER `cw14_mdtaxmain_insert` BEFORE INSERT ON `cw14_mdtaxmain` FOR EACH ROW BEGIN
    DECLARE _cSign MIDDLEINT(6) DEFAULT '7';

    SELECT cSign  FROM  my2_bankinfo WHERE Id=NEW.BankId INTO _cSign;

    SET NEW.cSign = _cSign;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw2_gyssksheet_insert`;
DELIMITER ;;
CREATE TRIGGER `cw2_gyssksheet_insert` BEFORE INSERT ON `cw2_gyssksheet` FOR EACH ROW BEGIN
   IF NEW.PayMonth IS NOT NULL THEN
      SET NEW.Month=NEW.PayMonth;
   END IF;
   IF NEW.Operator IS NOT NULL THEN
       SET NEW.creator=NEW.Operator;
       SET NEW.created=NOW();
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw2_gyssksheet_update`;
DELIMITER ;;
CREATE TRIGGER `cw2_gyssksheet_update` BEFORE UPDATE ON `cw2_gyssksheet` FOR EACH ROW BEGIN

   IF NEW.PayMonth!=OLD.PayMonth THEN
      SET NEW.Month=NEW.PayMonth;
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw4_otherinsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `cw4_otherinsheet_insert` BEFORE INSERT ON `cw4_otherinsheet` FOR EACH ROW BEGIN
   IF NEW.PayDate IS NOT NULL THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw4_otherinsheet_update`;
DELIMITER ;;
CREATE TRIGGER `cw4_otherinsheet_update` BEFORE UPDATE ON `cw4_otherinsheet` FOR EACH ROW BEGIN
    IF NEW.PayDate IS NOT NULL THEN
        SET NEW.Date=NEW.PayDate;
    END IF;

   IF NEW.PayDate!=OLD.PayDate THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw6_advancesreceived_insert`;
DELIMITER ;;
CREATE TRIGGER `cw6_advancesreceived_insert` BEFORE INSERT ON `cw6_advancesreceived` FOR EACH ROW BEGIN
   IF NEW.PayDate IS NOT NULL THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cw6_advancesreceived_update`;
DELIMITER ;;
CREATE TRIGGER `cw6_advancesreceived_update` BEFORE UPDATE ON `cw6_advancesreceived` FOR EACH ROW BEGIN
   IF NEW.PayDate!=OLD.PayDate THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cwygjz_insert`;
DELIMITER ;;
CREATE TRIGGER `cwygjz_insert` BEFORE INSERT ON `cwygjz` FOR EACH ROW BEGIN
   IF NEW.PayDate IS NOT NULL THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `cwygjz_update`;
DELIMITER ;;
CREATE TRIGGER `cwygjz_update` BEFORE UPDATE ON `cwygjz` FOR EACH ROW BEGIN
   IF NEW.PayDate!=OLD.PayDate THEN
      SET NEW.Month=DATE_FORMAT(NEW.PayDate,'%Y-%m');
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `dimissiondatainsert`;
DELIMITER ;;
CREATE TRIGGER `dimissiondatainsert` BEFORE INSERT ON `dimissiondata` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `dimissiondataupDate`;
DELIMITER ;;
CREATE TRIGGER `dimissiondataupDate` BEFORE UPDATE ON `dimissiondata` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `dimissionglinsert`;
DELIMITER ;;
CREATE TRIGGER `dimissionglinsert` BEFORE INSERT ON `dimissiongl` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `dimissionglupDate`;
DELIMITER ;;
CREATE TRIGGER `dimissionglupDate` BEFORE UPDATE ON `dimissiongl` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `gys_shdate_inserted`;
DELIMITER ;;
CREATE TRIGGER `gys_shdate_inserted` AFTER INSERT ON `gys_shdate` FOR EACH ROW BEGIN
  update gys_shsheet  SET S.ShDate=NEW.shDate WHERE Id=Sid;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `gys_shmain_insert`;
DELIMITER ;;
CREATE TRIGGER `gys_shmain_insert` BEFORE INSERT ON `gys_shmain` FOR EACH ROW BEGIN
   DECLARE _maxNumber VARCHAR(12);

   IF LENGTH(New.BillNumber)<12 OR RIGHT(New.BillNumber,4)='0000' THEN
      SELECT  MAX(BillNumber) INTO _maxNumber FROM gys_shmain WHERE BillNumber LIKE CONCAT(YEAR(CURDATE()),'%');
      IF LENGTH(_maxNumber)=12 THEN
         IF New.GysNumber IS NULL THEN
            SET New.GysNumber=New.BillNumber;
         END IF;
         SET New.BillNumber=CONCAT(CONVERT(_maxNumber,signed)+1,'');
      END IF;
   END IF;

  SET New.created = NOW();
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `gys_shsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `gys_shsheet_insert` BEFORE INSERT ON `gys_shsheet` FOR EACH ROW BEGIN
    IF New.Date IS NULL THEN
       SET New.Date=CURDATE();
    END IF;
    IF New.created IS NULL THEN
       SET New.created=NOW();
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `hzqksheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `hzqksheet_inserted` BEFORE INSERT ON `hzqksheet` FOR EACH ROW BEGIN
    DECLARE _BillNumber INT(10);

    SELECT MAX(BillNumber) FROM hzqksheet WHERE BillNumber LIKE CONCAT(YEAR(CURDATE()),'%') INTO _BillNumber;

    IF _BillNumber>0 THEN
        SET NEW.BillNumber=_BillNumber+1;
     ELSE
        SET NEW.BillNumber=CONCAT(YEAR(CURDATE()),'000001')*1;
    END IF;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `pands_insert`;
DELIMITER ;;
CREATE TRIGGER `pands_insert` BEFORE INSERT ON `pands` FOR EACH ROW BEGIN
        IF (New.Operator IS NOT NULL)THEN
            SET New.creator = New.Operator;
            SET New.created = NOW();
        END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `pands_oldmain_insert`;
DELIMITER ;;
CREATE TRIGGER `pands_oldmain_insert` BEFORE INSERT ON `pands_oldmain` FOR EACH ROW BEGIN
        IF (New.Operator IS NOT NULL)THEN
            SET New.creator = New.Operator;
            SET New.created = NOW();
        END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `paybaseinsert`;
DELIMITER ;;
CREATE TRIGGER `paybaseinsert` BEFORE INSERT ON `paybase` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `paybaseupDate`;
DELIMITER ;;
CREATE TRIGGER `paybaseupDate` BEFORE UPDATE ON `paybase` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `qc_currentcheckUpdate`;
DELIMITER ;;
CREATE TRIGGER `qc_currentcheckUpdate` BEFORE UPDATE ON `qc_currentcheck` FOR EACH ROW BEGIN
      SET New.datetime = NOW();
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_rksheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `sale_rksheet_inserted` AFTER INSERT ON `sale_rksheet` FOR EACH ROW BEGIN
      IF (New.Qty<>0) THEN
         UPDATE sale_productstock SET tStockQty=tStockQty+New.Qty WHERE ProductId=New.ProductId;
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_rksheet_updated`;
DELIMITER ;;
CREATE TRIGGER `sale_rksheet_updated` AFTER UPDATE ON `sale_rksheet` FOR EACH ROW BEGIN
  IF (New.Qty IS NOT NULL AND New.Qty<>Old.Qty) OR New.ProductId!=Old.ProductId THEN
     IF New.ProductId=Old.ProductId  AND  New.Qty<>Old.Qty THEN
        UPDATE sale_productstock SET tStockQty=tStockQty+New.Qty-Old.Qty WHERE ProductId=Old.ProductId;
      END IF ;
      IF  New.ProductId!=Old.ProductId  AND  New.Qty<>Old.Qty THEN
         UPDATE sale_productstock SET tStockQty=tStockQty-Old.Qty WHERE ProductId=Old.ProductId;
         UPDATE sale_productstock SET tStockQty=tStockQty+New.Qty WHERE ProductId=New.ProductId;
     END IF;
  END IF;

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_rksheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `sale_rksheet_deleted` AFTER DELETE ON `sale_rksheet` FOR EACH ROW BEGIN
     UPDATE sale_productstock SET tStockQty=tStockQty-Old.Qty WHERE ProductId=Old.ProductId;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_shipsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `sale_shipsheet_insert` AFTER INSERT ON `sale_shipsheet` FOR EACH ROW BEGIN

  UPDATE  sale_productstock  SET  tStockQty = tStockQty - New.Qty  WHERE ProductId = New.ProductId;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_shipsheet_del`;
DELIMITER ;;
CREATE TRIGGER `sale_shipsheet_del` AFTER DELETE ON `sale_shipsheet` FOR EACH ROW BEGIN
   UPDATE sale_productstock  SET tStockQty = tStockQty + Old.Qty WHERE  ProductId = Old.ProductId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_stocksheet_insert`;
DELIMITER ;;
CREATE TRIGGER `sale_stocksheet_insert` AFTER INSERT ON `sale_stocksheet` FOR EACH ROW BEGIN

      DECLARE _changeQty decimal(11,2) DEFAULT 0.0;

      SET _changeQty=New.FactualQty+New.AddQty+New.StockQty-New.OrderQty;

     IF _changeQty>0 THEN

             UPDATE sale_productstock SET oStockQty=oStockQty+_changeQty WHERE ProductId=New.ProductId;

     END IF;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sale_stocksheet_updated`;
DELIMITER ;;
CREATE TRIGGER `sale_stocksheet_updated` AFTER UPDATE ON `sale_stocksheet` FOR EACH ROW BEGIN

     DECLARE _changeQty decimal(11,2) DEFAULT 0.0;
     DECLARE _OldchangeQty decimal(11,2) DEFAULT 0.0;
     DECLARE _NewchangeQty decimal(11,2) DEFAULT 0.0;

     SET _OldchangeQty=Old.FactualQty+Old.AddQty+Old.StockQty-Old.OrderQty;

     SET _NewchangeQty=New.FactualQty+New.AddQty+New.StockQty-New.OrderQty;


     SET _changeQty = _NewchangeQty-_OldchangeQty;

     IF _changeQty <>0 THEN

             UPDATE sale_productstock SET oStockQty=oStockQty+_changeQty WHERE ProductId=New.ProductId;

     END IF;



END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_cjtj_insert`;
DELIMITER ;;
CREATE TRIGGER `sc1_cjtj_insert` BEFORE INSERT ON `sc1_cjtj` FOR EACH ROW BEGIN
       IF (New.Operator IS NOT NULL) THEN
             SET New.creator = New.Operator;
       END IF;
       SET New.created = NOW();
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_cjtj_inserted`;
DELIMITER ;;
CREATE TRIGGER `sc1_cjtj_inserted` AFTER INSERT ON `sc1_cjtj` FOR EACH ROW BEGIN
      IF (New.Qty<>0) THEN
         CALL proc_yw1_scsheet_updateScQty(New.sPOrderId,New.StockId);
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_cjtj_updated`;
DELIMITER ;;
CREATE TRIGGER `sc1_cjtj_updated` AFTER UPDATE ON `sc1_cjtj` FOR EACH ROW BEGIN
      IF (New.Qty != Old.Qty) THEN
          CALL proc_yw1_scsheet_updateScQty(New.sPOrderId,New.StockId);
      END IF;

 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_cjtj_delete`;
DELIMITER ;;
CREATE TRIGGER `sc1_cjtj_delete` AFTER DELETE ON `sc1_cjtj` FOR EACH ROW BEGIN
    CALL proc_yw1_scsheet_updateScQty(Old.sPOrderId,Old.StockId);
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_gxtj_inserted`;
DELIMITER ;;
CREATE TRIGGER `sc1_gxtj_inserted` AFTER INSERT ON `sc1_gxtj` FOR EACH ROW BEGIN

   IF (New.Qty>0 AND New.LastPos)  THEN

     INSERT INTO sc1_cjtj (GroupId,POrderId,sPOrderId,StockId,Qty,Remark,boxId,Weight,`Date`,Estate,Locks,Leader,PLocks, creator, created, Operator)
         VALUES (New.GroupId,New.POrderId,New.sPOrderId,New.StockId,New.Qty,'工序生产','','0.00',New.`Date`,'1','0',New.Leader,'0','0',NOW(),'0');

   END IF ;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_gxtj_updated`;
DELIMITER ;;
CREATE TRIGGER `sc1_gxtj_updated` AFTER UPDATE ON `sc1_gxtj` FOR EACH ROW BEGIN
   IF  Old.Qty != New.Qty  THEN

       UPDATE  sc1_cjtj
       SET Qty =Qty+New.Qty-Old.Qty
       WHERE sPOrderId = Old.sPOrderId  AND StockId = Old.StockId AND Qty = Old.Qty LIMIT 1;

   END IF ;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_gxtj_deleted`;
DELIMITER ;;
CREATE TRIGGER `sc1_gxtj_deleted` AFTER DELETE ON `sc1_gxtj` FOR EACH ROW BEGIN

  IF Old.Qty>0 THEN

      DELETE  FROM sc1_cjtj WHERE sPOrderId = Old.sPOrderId  AND StockId = Old.StockId AND Qty = Old.Qty LIMIT 1;

  END IF ;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `sc1_mission_inserted`;
DELIMITER ;;
CREATE TRIGGER `sc1_mission_inserted` AFTER INSERT ON `sc1_mission` FOR EACH ROW BEGIN
   update yw1_scsheet set scLineId=New.LineId WHERE sPOrderId=New.sPOrderId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `semifinished_bom_insert`;
DELIMITER ;;
CREATE TRIGGER `semifinished_bom_insert` BEFORE INSERT ON `semifinished_bom` FOR EACH ROW BEGIN
        IF (New.Operator IS NOT NULL)THEN
            SET New.creator = New.Operator;
            SET New.created = NOW();
        END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `semifinished_deliverydate_insert`;
DELIMITER ;;
CREATE TRIGGER `semifinished_deliverydate_insert` BEFORE INSERT ON `semifinished_deliverydate` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `semifinished_oldbom_main_insert`;
DELIMITER ;;
CREATE TRIGGER `semifinished_oldbom_main_insert` BEFORE INSERT ON `semifinished_oldbom_main` FOR EACH ROW BEGIN
        IF (New.Operator IS NOT NULL)THEN
            SET New.creator = New.Operator;
            SET New.created = NOW();
        END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `staffmaininsert`;
DELIMITER ;;
CREATE TRIGGER `staffmaininsert` BEFORE INSERT ON `staffmain` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `staffmainupDate`;
DELIMITER ;;
CREATE TRIGGER `staffmainupDate` BEFORE UPDATE ON `staffmain` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `staffsheetinsert`;
DELIMITER ;;
CREATE TRIGGER `staffsheetinsert` BEFORE INSERT ON `staffsheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `staffsheetupDate`;
DELIMITER ;;
CREATE TRIGGER `staffsheetupDate` BEFORE UPDATE ON `staffsheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `redeploybinsert_copy`;
DELIMITER ;;
CREATE TRIGGER `redeploybinsert_copy` BEFORE INSERT ON `staff_lateearly` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `redeploybupDate_copy`;
DELIMITER ;;
CREATE TRIGGER `redeploybupDate_copy` BEFORE UPDATE ON `staff_lateearly` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `staff_workstatus_insert`;
DELIMITER ;;
CREATE TRIGGER `staff_workstatus_insert` BEFORE INSERT ON `staff_workstatus` FOR EACH ROW BEGIN
    DECLARE _GroupId MIDDLEINT(6);
    SELECT GroupId FROM staffmain WHERE Number=NEW.Number INTO _GroupId;
    SET NEW.GroupId=_GroupId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `stuffcostprIce_update`;
DELIMITER ;;
CREATE TRIGGER `stuffcostprIce_update` BEFORE UPDATE ON `stuffcostprice` FOR EACH ROW BEGIN
  SET NEW.modified=NOW();
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `stuffdata_insert`;
DELIMITER ;;
CREATE TRIGGER `stuffdata_insert` BEFORE INSERT ON `stuffdata` FOR EACH ROW BEGIN
      IF New.Operator IS NOT NULL THEN
         SET New.creator = New.Operator;
         SET New.created = NOW();
     END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `stuffdata_update`;
DELIMITER ;;
CREATE TRIGGER `stuffdata_update` BEFORE UPDATE ON `stuffdata` FOR EACH ROW BEGIN
      IF (New.Operator!=Old.Operator)THEN
         SET New.modifier = New.Operator;
         SET New.modified = NOW();
       ELSE
         SET New.modified = NOW();
      END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `stuffdata_updated`;
DELIMITER ;;
CREATE TRIGGER `stuffdata_updated` AFTER UPDATE ON `stuffdata` FOR EACH ROW BEGIN
   IF NEW.Price!=Old.Price OR New.CostPrice!=Old.CostPrice THEN
         CALL proc_stuffdata_costprice(Old.StuffId);
   END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `stuffdevelop_insert`;
DELIMITER ;;
CREATE TRIGGER `stuffdevelop_insert` BEFORE INSERT ON `stuffdevelop` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `trade_objectinsert`;
DELIMITER ;;
CREATE TRIGGER `trade_objectinsert` BEFORE INSERT ON `trade_object` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = New.Date;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL OR New.modified IS NOT NULL) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `trade_objectupDate`;
DELIMITER ;;
CREATE TRIGGER `trade_objectupDate` BEFORE UPDATE ON `trade_object` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL and New.modifier = Old.modifier )THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = New.Date;
           ELSEIF (New.modifier IS NOT NULL and New.modified IS NOT NULL and New.Operator = Old.Operator) THEN
                 SET New.Operator = New.modifier;
                 SET New.Date = New.modified;

           END IF;
           END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `BuildNo`;
DELIMITER ;;
CREATE TRIGGER `BuildNo` BEFORE INSERT ON `yw1_ordermain` FOR EACH ROW BEGIN
         SET New.BuildNo = SUBSTRING_INDEX(SUBSTRING_INDEX(New.OrderPO, '-', -2),'-',1);
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_ordersheet_insert`;
DELIMITER ;;
CREATE TRIGGER `yw1_ordersheet_insert` BEFORE INSERT ON `yw1_ordersheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = NOW();
                 SET New.modified = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_ordersheet_updated`;
DELIMITER ;;
CREATE TRIGGER `yw1_ordersheet_updated` BEFORE UPDATE ON `yw1_ordersheet` FOR EACH ROW BEGIN
   DECLARE _scQty MEDIUMINT(9);
   DECLARE _scedQty MEDIUMINT(9);

   SET New.modified = NOW();

   SELECT SUM(S.Qty) AS Qty FROM sc1_cjtj  S
                            LEFT JOIN cg1_stocksheet G ON G.StockId=S.StockId
                             WHERE S.POrderId=OLD.POrderId  AND G.`Level`=1  INTO _scQty;

   SELECT SUM(G.OrderQty) AS Qty FROM cg1_stocksheet G
								 LEFT JOIN stuffdata D ON D.StuffId=G.StuffId
								 LEFT JOIN stufftype T ON T.TypeId=D.TypeId
								 WHERE G.POrderId=OLD.POrderId AND T.mainType=3 AND G.`Level`=1  INTO _scedQty;
   IF _scedQty=_scQty THEN
       SET New.scFrom=0;
   END IF;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_ordersheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `yw1_ordersheet_deleted` AFTER DELETE ON `yw1_ordersheet` FOR EACH ROW BEGIN
     DELETE FROM yw3_pisheet WHERE oId=Old.Id;

     DELETE FROM yw2_cgdeliverydate WHERE POrderId=Old.POrderId;

     DELETE FROM yw2_orderexpress WHERE POrderId=Old.POrderId;

     UPDATE yw1_orderdeleted set Estate=0 WHERE POrderId=Old.POrderId AND Estate>0;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_scsheet_insert`;
DELIMITER ;;
CREATE TRIGGER `yw1_scsheet_insert` BEFORE INSERT ON `yw1_scsheet` FOR EACH ROW BEGIN

       DECLARE _mStockId VARCHAR(15);

      IF New.ActionId>101 AND  New.mStockId IS NULL THEN
          SELECT mStockId FROM cg1_semifinished WHERE StockId=NEW.StockId  INTO _mStockId;
          SET New.mStockId=_mStockId;
      END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_scsheet_inserted`;
DELIMITER ;;
CREATE TRIGGER `yw1_scsheet_inserted` AFTER INSERT ON `yw1_scsheet` FOR EACH ROW BEGIN

       CALL proc_cg1_stocksheet_cmprice_updated(New.StockId);

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_scsheet_update`;
DELIMITER ;;
CREATE TRIGGER `yw1_scsheet_update` BEFORE UPDATE ON `yw1_scsheet` FOR EACH ROW BEGIN
     SET New.modified = NOW();
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_scsheet_updated`;
DELIMITER ;;
CREATE TRIGGER `yw1_scsheet_updated` AFTER UPDATE ON `yw1_scsheet` FOR EACH ROW BEGIN

   IF New.Estate=0 AND Old.Estate!=New.Estate THEN
          CALL proc_yw1_orderrk_update(New.POrderId,New.sPOrderId,New.StockId,0,New.modifier);
   END IF;

   IF  New.ActionId!=Old.ActionId THEN
      CALL proc_cg1_stocksheet_cmprice_updated(New.StockId);
   END IF ;

END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw1_scsheet_deleted`;
DELIMITER ;;
CREATE TRIGGER `yw1_scsheet_deleted` AFTER DELETE ON `yw1_scsheet` FOR EACH ROW BEGIN
   DELETE FROM yw1_stocksheet WHERE sPOrderId=OLD.sPOrderId;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw2_cgdeliverydate_insert`;
DELIMITER ;;
CREATE TRIGGER `yw2_cgdeliverydate_insert` BEFORE INSERT ON `yw2_cgdeliverydate` FOR EACH ROW BEGIN
        IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
        END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw2_cgdeliverydate_update`;
DELIMITER ;;
CREATE TRIGGER `yw2_cgdeliverydate_update` BEFORE UPDATE ON `yw2_cgdeliverydate` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL)THEN
                 SET New.modifier = New.Operator;
                 SET New.modified = NOW();
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw3_pileadtime_insert`;
DELIMITER ;;
CREATE TRIGGER `yw3_pileadtime_insert` BEFORE INSERT ON `yw3_pileadtime` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.modifier = New.Operator;
                 SET New.created = NOW();
                 SET New.modified = NOW();
           END IF;

           IF (New.Leadtime IS NOT NULL) THEN
             SET New.Leadweek=IFNULL(YEARWEEK(New.Leadtime,1),0);
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw3_pileadtime_update`;
DELIMITER ;;
CREATE TRIGGER `yw3_pileadtime_update` BEFORE UPDATE ON `yw3_pileadtime` FOR EACH ROW BEGIN
     IF (New.Leadtime IS NOT NULL AND New.Leadtime!=Old.Leadtime) THEN
          SET New.Leadweek=IFNULL(YEARWEEK(New.Leadtime,1),0);
     END IF;

     IF (New.Operator IS NOT NULL and New.Date IS NOT NULL)THEN
          SET New.modifier = New.Operator;
          SET New.modified = NOW();
     END IF;
END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw3_pisheet_insert`;
DELIMITER ;;
CREATE TRIGGER `yw3_pisheet_insert` BEFORE INSERT ON `yw3_pisheet` FOR EACH ROW BEGIN
           IF (New.Operator IS NOT NULL and New.Date IS NOT NULL  )THEN
                 SET New.creator = New.Operator;
                 SET New.created = NOW();
           END IF;

           IF (New.Leadtime IS NOT NULL) THEN
             SET New.Leadweek=IFNULL(YEARWEEK(New.Leadtime,1),0);
           END IF;
 END
;;
DELIMITER ;
DROP TRIGGER IF EXISTS `yw3_pisheet_update`;
DELIMITER ;;
CREATE TRIGGER `yw3_pisheet_update` BEFORE UPDATE ON `yw3_pisheet` FOR EACH ROW BEGIN
     IF (New.Leadtime IS NOT NULL AND New.Leadtime!=Old.Leadtime) THEN
          SET New.Leadweek=IFNULL(YEARWEEK(New.Leadtime,1),0);
     END IF;
END
;;
DELIMITER ;
